<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AltSettings">
    <AltProjectManager id="1">
      <root class="AltTree" id="2">
        <data id="3">
          <id>0</id>
          <title />
          <isAdaptive>false</isAdaptive>
          <description />
          <position>0</position>
          <progress />
          <createDate id="4">1970-01-01 00:00:00.0 UTC</createDate>
          <updateDate id="5">1970-01-01 00:00:00.0 UTC</updateDate>
        </data>
        <children class="java.util.Arrays$ArrayList" id="6">
          <a id="7">
            <LessonNode id="8">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="9">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="10">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="11">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="12">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="13">
                  <id>58110</id>
                  <title>The main method # Fixing the main method</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58110</progress>
                  <createDate id="14">2017-10-02 16:30:06.0 UTC</createDate>
                  <updateDate id="15">2018-02-12 15:56:44.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58110-1</discussionProxy>
                  <discussionThreads id="16">
                    <string>76-58110-1</string>
                  </discussionThreads>
                  <steps id="17">
                    <long>228359</long>
                  </steps>
                  <actions class="linked-hash-map" id="18" />
                  <tags id="19" />
                  <requiredTags id="20" />
                  <playlists class="kotlin.collections.EmptyList" id="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="22">
                    <string>31-76-58110</string>
                    <string>30-76-58110</string>
                  </subscriptions>
                  <viewedBy>108</viewedBy>
                  <passedBy>110</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>17</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-main-method-Fixing-the-main-method-58110</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58110</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="23">
                <StepNode id="24">
                  <parent class="LessonNode" reference="8" />
                  <data class="Step" id="25">
                    <id>228359</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-228359</progress>
                    <createDate id="26">2017-10-02 16:57:31.0 UTC</createDate>
                    <updateDate id="27">2018-02-12 15:56:43.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-228359-1</discussionProxy>
                    <discussionThreads id="28">
                      <string>77-228359-1</string>
                      <string>77-228359-2</string>
                    </discussionThreads>
                    <lesson>58110</lesson>
                    <status>ready</status>
                    <block id="29">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a program that should print &lt;/span&gt;&lt;b&gt;&quot;Hello, ALT!&quot;&lt;/b&gt;&lt;span&gt; but now it's not compiled. Fix the program.&lt;/span&gt;&lt;/p&gt;</text>
                      <options id="30">
                        <samples id="31" />
                        <codeTemplates class="LinkedTreeMap" id="32" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {

    public static int main(String[] args) {
        System.out.println(&quot;Hello, ALT!&quot;);
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="33" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="34">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="35" />
                    </block>
                    <actions class="linked-hash-map" id="36">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="37">
                      <string>31-77-228359</string>
                      <string>30-77-228359</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>108</viewedBy>
                    <passedBy>110</passedBy>
                    <correctRatio>0.8227848101265823</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="38">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="39">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="40">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="41">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="42">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="43">
                  <id>56010</id>
                  <title>String # The number of times two chars occur in a string - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56010</progress>
                  <createDate id="44">2017-09-12 14:45:30.0 UTC</createDate>
                  <updateDate id="45">2018-02-05 17:10:24.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56010-1</discussionProxy>
                  <discussionThreads id="46">
                    <string>76-56010-1</string>
                  </discussionThreads>
                  <steps id="47">
                    <long>216197</long>
                  </steps>
                  <actions class="linked-hash-map" id="48" />
                  <tags id="49" />
                  <requiredTags id="50" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="51">
                    <string>31-76-56010</string>
                    <string>30-76-56010</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>315</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-The-number-of-times-two-chars-occur-in-a-string-1-56010</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56010</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="52">
                <StepNode id="53">
                  <parent class="LessonNode" reference="38" />
                  <data class="Step" id="54">
                    <id>216197</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216197</progress>
                    <createDate id="55">2017-09-03 18:08:14.0 UTC</createDate>
                    <updateDate id="56">2018-04-02 01:02:38.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-216197-1</discussionProxy>
                    <discussionThreads id="57">
                      <string>77-216197-1</string>
                      <string>77-216197-2</string>
                    </discussionThreads>
                    <lesson>56010</lesson>
                    <status>ready</status>
                    <block id="58">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that counts the number of times that the two characters occur consecutively in a string. The order of characters should be the same as in the input.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;The single input line contains a string and two characters.&lt;/span&gt;&lt;/div&gt;</text>
                      <options id="59">
                        <samples id="60">
                          <Sample id="61">&lt;input&gt;abcd b c
&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                          <Sample id="62">&lt;input&gt;cbbb b b
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="63" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="64" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="65">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="66" />
                    </block>
                    <actions class="linked-hash-map" id="67">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="68">
                      <string>31-77-216197</string>
                      <string>30-77-216197</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>26</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.26865671641791045</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="69">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="70">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="71">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="72">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="73">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="74">
                  <id>56010</id>
                  <title>String # The number of times two chars occur in a string - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56010</progress>
                  <createDate id="75">2017-09-12 14:45:30.0 UTC</createDate>
                  <updateDate id="76">2018-04-02 01:02:39.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-56010-1</discussionProxy>
                  <discussionThreads id="77">
                    <string>76-56010-1</string>
                  </discussionThreads>
                  <steps id="78">
                    <long>216197</long>
                  </steps>
                  <actions class="linked-hash-map" id="79" />
                  <tags id="80" />
                  <requiredTags id="81" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="82">
                    <string>31-76-56010</string>
                    <string>30-76-56010</string>
                  </subscriptions>
                  <viewedBy>26</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>343</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-The-number-of-times-two-chars-occur-in-a-string-1-56010</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56010</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="83">
                <StepNode id="84">
                  <parent class="LessonNode" reference="69" />
                  <data class="Step" id="85">
                    <id>216197</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216197</progress>
                    <createDate id="86">2017-09-03 18:08:14.0 UTC</createDate>
                    <updateDate id="87">2018-04-02 01:02:38.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-216197-1</discussionProxy>
                    <discussionThreads id="88">
                      <string>77-216197-1</string>
                      <string>77-216197-2</string>
                    </discussionThreads>
                    <lesson>56010</lesson>
                    <status>ready</status>
                    <block id="89">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that counts the number of times that the two characters occur consecutively in a string. The order of characters should be the same as in the input.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;The single input line contains a string and two characters.&lt;/span&gt;&lt;/div&gt;</text>
                      <options id="90">
                        <samples id="91">
                          <Sample id="92">&lt;input&gt;abcd b c
&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                          <Sample id="93">&lt;input&gt;cbbb b b
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="94" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="95" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="96">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="97" />
                    </block>
                    <actions class="linked-hash-map" id="98">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="99">
                      <string>31-77-216197</string>
                      <string>30-77-216197</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>26</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.26865671641791045</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="100">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="101">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="102">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="103">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="104">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="105">
                  <id>55989</id>
                  <title>Iterating over arrays # Two numbers never occur to each other</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55989</progress>
                  <createDate id="106">2017-09-12 14:45:23.0 UTC</createDate>
                  <updateDate id="107">2018-02-04 16:17:20.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55989-1</discussionProxy>
                  <discussionThreads id="108">
                    <string>76-55989-1</string>
                  </discussionThreads>
                  <steps id="109">
                    <long>216231</long>
                  </steps>
                  <actions class="linked-hash-map" id="110" />
                  <tags id="111" />
                  <requiredTags id="112" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="113">
                    <string>31-76-55989</string>
                    <string>30-76-55989</string>
                  </subscriptions>
                  <viewedBy>43</viewedBy>
                  <passedBy>31</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>569</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Two-numbers-never-occur-to-each-other-55989</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55989</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="114">
                <StepNode id="115">
                  <parent class="LessonNode" reference="100" />
                  <data class="Step" id="116">
                    <id>216231</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216231</progress>
                    <createDate id="117">2017-09-04 01:24:56.0 UTC</createDate>
                    <updateDate id="118">2018-02-04 16:17:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216231-1</discussionProxy>
                    <discussionThreads id="119">
                      <string>77-216231-1</string>
                      <string>77-216231-2</string>
                    </discussionThreads>
                    <lesson>55989</lesson>
                    <status>ready</status>
                    <block id="120">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that reads an array of integers and two numbers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;. The program must check that &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt; never occur next to each other (in any order) in the array.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the size of an array.&lt;/div&gt;&lt;div&gt;The second line contains elements of the array.&lt;/div&gt;&lt;div&gt;The third line contains two integer numbers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;All numbers in the same line are separated by the space character.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The result is a single value - &lt;b&gt;true&lt;/b&gt;, if &lt;b&gt;n &lt;/b&gt;and &lt;b&gt;m&lt;/b&gt; never occur to each other, otherwise, &lt;b&gt;false&lt;/b&gt;.&lt;/div&gt;</text>
                      <options id="121">
                        <samples id="122">
                          <Sample id="123">&lt;input&gt;3
1 2 3
2 3
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                          <Sample id="124">&lt;input&gt;3
1 2 3
3 4
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="125" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="126" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="127">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="128" />
                    </block>
                    <actions class="linked-hash-map" id="129">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="130">
                      <string>31-77-216231</string>
                      <string>30-77-216231</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>43</viewedBy>
                    <passedBy>31</passedBy>
                    <correctRatio>0.32</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="131">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="132">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="133">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="134">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="135">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="136">
                  <id>63147</id>
                  <title>Defining classes # Accounts</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63147</progress>
                  <createDate id="137">2017-12-07 15:12:32.0 UTC</createDate>
                  <updateDate id="138">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63147-1</discussionProxy>
                  <discussionThreads id="139">
                    <string>76-63147-1</string>
                  </discussionThreads>
                  <steps id="140">
                    <long>249115</long>
                  </steps>
                  <actions class="linked-hash-map" id="141" />
                  <tags id="142" />
                  <requiredTags id="143" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="144">
                    <string>31-76-63147</string>
                    <string>30-76-63147</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>24</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>77</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Accounts-63147</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63147</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="145">
                <StepNode id="146">
                  <parent class="LessonNode" reference="131" />
                  <data class="Step" id="147">
                    <id>249115</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249115</progress>
                    <createDate id="148">2017-12-08 17:09:27.0 UTC</createDate>
                    <updateDate id="149">2017-12-08 17:11:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249115-1</discussionProxy>
                    <discussionThreads id="150">
                      <string>77-249115-1</string>
                      <string>77-249115-2</string>
                    </discussionThreads>
                    <lesson>63147</lesson>
                    <status>ready</status>
                    <block id="151">
                      <name>code</name>
                      <text>Define a class named &lt;code&gt;Account&lt;/code&gt;. It must have three fields: a long field &lt;code&gt;balance&lt;/code&gt;, string field &lt;code&gt;ownerName&lt;/code&gt;, and boolean flag &lt;code&gt;locked&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note: do not make them &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;</text>
                      <options id="152">
                        <samples id="153" />
                        <codeTemplates class="LinkedTreeMap" id="154" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write your class here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="155" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="156">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="157" />
                    </block>
                    <actions class="linked-hash-map" id="158">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="159">
                      <string>31-77-249115</string>
                      <string>30-77-249115</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>24</passedBy>
                    <correctRatio>0.78125</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="160">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="161">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="162">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="163">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="164">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="165">
                  <id>63237</id>
                  <title>Defining classes # Books</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63237</progress>
                  <createDate id="166">2017-12-08 17:50:57.0 UTC</createDate>
                  <updateDate id="167">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63237-1</discussionProxy>
                  <discussionThreads id="168">
                    <string>76-63237-1</string>
                  </discussionThreads>
                  <steps id="169">
                    <long>249185</long>
                  </steps>
                  <actions class="linked-hash-map" id="170" />
                  <tags id="171" />
                  <requiredTags id="172" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="173">
                    <string>31-76-63237</string>
                    <string>30-76-63237</string>
                  </subscriptions>
                  <viewedBy>26</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>81</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Books-63237</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63237</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="174">
                <StepNode id="175">
                  <parent class="LessonNode" reference="160" />
                  <data class="Step" id="176">
                    <id>249185</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249185</progress>
                    <createDate id="177">2017-12-08 18:02:43.0 UTC</createDate>
                    <updateDate id="178">2017-12-08 18:04:03.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249185-1</discussionProxy>
                    <discussionThreads id="179">
                      <string>77-249185-1</string>
                      <string>77-249185-2</string>
                    </discussionThreads>
                    <lesson>63237</lesson>
                    <status>ready</status>
                    <block id="180">
                      <name>code</name>
                      <text>Write a class named &lt;code&gt;Book&lt;/code&gt;. It must have three fields: string field &lt;code&gt;title&lt;/code&gt;, int field &lt;code&gt;yearOfPublishing&lt;/code&gt; and an array of strings &lt;code&gt;authors&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note: do not make them &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;</text>
                      <options id="181">
                        <samples id="182" />
                        <codeTemplates class="LinkedTreeMap" id="183" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write your class here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="184" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="185">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="186" />
                    </block>
                    <actions class="linked-hash-map" id="187">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="188">
                      <string>31-77-249185</string>
                      <string>30-77-249185</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>26</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.7419354838709677</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="189">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="190">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="191">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="192">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="193">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="194">
                  <id>63145</id>
                  <title>Defining classes # Complex numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63145</progress>
                  <createDate id="195">2017-12-07 15:12:22.0 UTC</createDate>
                  <updateDate id="196">2018-02-13 17:43:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63145-1</discussionProxy>
                  <discussionThreads id="197">
                    <string>76-63145-1</string>
                  </discussionThreads>
                  <steps id="198">
                    <long>249100</long>
                  </steps>
                  <actions class="linked-hash-map" id="199" />
                  <tags id="200" />
                  <requiredTags id="201" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="202">
                    <string>31-76-63145</string>
                    <string>30-76-63145</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>40</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Complex-numbers-63145</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63145</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="203">
                <StepNode id="204">
                  <parent class="LessonNode" reference="189" />
                  <data class="Step" id="205">
                    <id>249100</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249100</progress>
                    <createDate id="206">2017-12-08 16:37:59.0 UTC</createDate>
                    <updateDate id="207">2017-12-08 16:38:00.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249100-1</discussionProxy>
                    <discussionThreads id="208">
                      <string>77-249100-1</string>
                      <string>77-249100-2</string>
                    </discussionThreads>
                    <lesson>63145</lesson>
                    <status>ready</status>
                    <block id="209">
                      <name>code</name>
                      <text>You write a calculator that manipulates complex numbers. Write a class named &lt;code&gt;Complex&lt;/code&gt;. It must have two double fields named &lt;code&gt;real&lt;/code&gt; and &lt;code&gt;image&lt;/code&gt;.</text>
                      <options id="210">
                        <samples id="211" />
                        <codeTemplates class="LinkedTreeMap" id="212" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write the class Complex here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="213" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="214">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="215" />
                    </block>
                    <actions class="linked-hash-map" id="216">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="217">
                      <string>31-77-249100</string>
                      <string>30-77-249100</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>26</passedBy>
                    <correctRatio>0.896551724137931</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="218">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="219">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="220">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="221">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="222">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="223">
                  <id>63242</id>
                  <title>Defining classes # Inner boxes</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63242</progress>
                  <createDate id="224">2017-12-08 18:52:24.0 UTC</createDate>
                  <updateDate id="225">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63242-1</discussionProxy>
                  <discussionThreads id="226">
                    <string>76-63242-1</string>
                  </discussionThreads>
                  <steps id="227">
                    <long>249209</long>
                  </steps>
                  <actions class="linked-hash-map" id="228" />
                  <tags id="229" />
                  <requiredTags id="230" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="231">
                    <string>31-76-63242</string>
                    <string>30-76-63242</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>89</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Inner-boxes-63242</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63242</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="232">
                <StepNode id="233">
                  <parent class="LessonNode" reference="218" />
                  <data class="Step" id="234">
                    <id>249209</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249209</progress>
                    <createDate id="235">2017-12-08 19:03:08.0 UTC</createDate>
                    <updateDate id="236">2017-12-08 21:37:10.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249209-1</discussionProxy>
                    <discussionThreads id="237">
                      <string>77-249209-1</string>
                      <string>77-249209-2</string>
                    </discussionThreads>
                    <lesson>63242</lesson>
                    <status>ready</status>
                    <block id="238">
                      <name>code</name>
                      <text>Define a class named &lt;code&gt;Box&lt;/code&gt;. It must have four fields:&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;length&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; of the &lt;code&gt;double&lt;/code&gt; type&lt;br&gt;&lt;/li&gt;&lt;li&gt;a field named &lt;code&gt;innerBox&lt;/code&gt; of the same type as the defined class&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Do not make fields &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="239">
                        <samples id="240" />
                        <codeTemplates class="LinkedTreeMap" id="241" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write your class here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="242" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="243">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="244" />
                    </block>
                    <actions class="linked-hash-map" id="245">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="246">
                      <string>31-77-249209</string>
                      <string>30-77-249209</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.7878787878787878</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="247">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="248">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="249">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="250">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="251">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="252">
                  <id>63144</id>
                  <title>Defining classes # Points on the 2D plane</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63144</progress>
                  <createDate id="253">2017-12-07 15:12:19.0 UTC</createDate>
                  <updateDate id="254">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63144-1</discussionProxy>
                  <discussionThreads id="255">
                    <string>76-63144-1</string>
                  </discussionThreads>
                  <steps id="256">
                    <long>249099</long>
                  </steps>
                  <actions class="linked-hash-map" id="257" />
                  <tags id="258" />
                  <requiredTags id="259" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="260">
                    <string>31-76-63144</string>
                    <string>30-76-63144</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>27</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>43</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Points-on-the-2D-plane-63144</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63144</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="261">
                <StepNode id="262">
                  <parent class="LessonNode" reference="247" />
                  <data class="Step" id="263">
                    <id>249099</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249099</progress>
                    <createDate id="264">2017-12-08 16:29:17.0 UTC</createDate>
                    <updateDate id="265">2017-12-19 08:47:23.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249099-1</discussionProxy>
                    <discussionThreads id="266">
                      <string>77-249099-1</string>
                      <string>77-249099-2</string>
                    </discussionThreads>
                    <lesson>63144</lesson>
                    <status>ready</status>
                    <block id="267">
                      <name>code</name>
                      <text>&lt;div&gt;You write another 2D engine for a computer game. Define a class named &lt;code&gt;Point2D&lt;/code&gt;. It must have two float fields: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Do not make the fields &lt;code&gt;private&lt;/code&gt;.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="268">
                        <samples id="269" />
                        <codeTemplates class="LinkedTreeMap" id="270" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write a class here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="271" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="272">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="273" />
                    </block>
                    <actions class="linked-hash-map" id="274">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="275">
                      <string>31-77-249099</string>
                      <string>30-77-249099</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>27</passedBy>
                    <correctRatio>0.7368421052631579</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="276">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="277">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="278">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="279">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="280">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="281">
                  <id>63149</id>
                  <title>Defining classes # Representing time as a class</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63149</progress>
                  <createDate id="282">2017-12-07 15:12:54.0 UTC</createDate>
                  <updateDate id="283">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63149-1</discussionProxy>
                  <discussionThreads id="284">
                    <string>76-63149-1</string>
                  </discussionThreads>
                  <steps id="285">
                    <long>249149</long>
                  </steps>
                  <actions class="linked-hash-map" id="286" />
                  <tags id="287" />
                  <requiredTags id="288" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="289">
                    <string>31-76-63149</string>
                    <string>30-76-63149</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>51</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Representing-time-as-a-class-63149</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63149</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="290">
                <StepNode id="291">
                  <parent class="LessonNode" reference="276" />
                  <data class="Step" id="292">
                    <id>249149</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249149</progress>
                    <createDate id="293">2017-12-08 17:35:03.0 UTC</createDate>
                    <updateDate id="294">2017-12-08 17:36:07.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249149-1</discussionProxy>
                    <discussionThreads id="295">
                      <string>77-249149-1</string>
                      <string>77-249149-2</string>
                    </discussionThreads>
                    <lesson>63149</lesson>
                    <status>ready</status>
                    <block id="296">
                      <name>code</name>
                      <text>Define a class named &lt;code&gt;Time&lt;/code&gt;. It must have three int fields: &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt; and &lt;code&gt;seconds&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note: do not make fields &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;</text>
                      <options id="297">
                        <samples id="298" />
                        <codeTemplates class="LinkedTreeMap" id="299" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write your class here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="300" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="301">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="302" />
                    </block>
                    <actions class="linked-hash-map" id="303">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="304">
                      <string>31-77-249149</string>
                      <string>30-77-249149</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.8620689655172413</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="305">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="306">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="307">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="308">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="309">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="310">
                  <id>63148</id>
                  <title>Defining classes # Tables and rows</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63148</progress>
                  <createDate id="311">2017-12-07 15:12:48.0 UTC</createDate>
                  <updateDate id="312">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63148-1</discussionProxy>
                  <discussionThreads id="313">
                    <string>76-63148-1</string>
                  </discussionThreads>
                  <steps id="314">
                    <long>249145</long>
                  </steps>
                  <actions class="linked-hash-map" id="315" />
                  <tags id="316" />
                  <requiredTags id="317" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="318">
                    <string>31-76-63148</string>
                    <string>30-76-63148</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>92</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Tables-and-rows-63148</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63148</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="319">
                <StepNode id="320">
                  <parent class="LessonNode" reference="305" />
                  <data class="Step" id="321">
                    <id>249145</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249145</progress>
                    <createDate id="322">2017-12-08 17:24:04.0 UTC</createDate>
                    <updateDate id="323">2017-12-20 11:49:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249145-1</discussionProxy>
                    <discussionThreads id="324">
                      <string>77-249145-1</string>
                      <string>77-249145-2</string>
                    </discussionThreads>
                    <lesson>63148</lesson>
                    <status>ready</status>
                    <block id="325">
                      <name>code</name>
                      <text>&lt;div&gt;Define two classes &lt;code&gt;Table&lt;/code&gt; and &lt;code&gt;Row&lt;/code&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Table&lt;/code&gt; must have an array of Row's named rows as a field&lt;/li&gt;&lt;li&gt;&lt;code&gt;Row&lt;/code&gt; must have an array of String's named values as a field&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note: do not make fields &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="326">
                        <samples id="327" />
                        <codeTemplates class="LinkedTreeMap" id="328" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write your classes here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="329" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="330">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="331" />
                    </block>
                    <actions class="linked-hash-map" id="332">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="333">
                      <string>31-77-249145</string>
                      <string>30-77-249145</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.7142857142857143</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="334">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="335">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="336">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="337">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="338">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="339">
                  <id>63146</id>
                  <title>Defining classes # Users</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63146</progress>
                  <createDate id="340">2017-12-07 15:12:29.0 UTC</createDate>
                  <updateDate id="341">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63146-1</discussionProxy>
                  <discussionThreads id="342">
                    <string>76-63146-1</string>
                  </discussionThreads>
                  <steps id="343">
                    <long>249101</long>
                  </steps>
                  <actions class="linked-hash-map" id="344" />
                  <tags id="345" />
                  <requiredTags id="346" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="347">
                    <string>31-76-63146</string>
                    <string>30-76-63146</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>46</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-classes-Users-63146</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63146</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="348">
                <StepNode id="349">
                  <parent class="LessonNode" reference="334" />
                  <data class="Step" id="350">
                    <id>249101</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249101</progress>
                    <createDate id="351">2017-12-08 16:46:24.0 UTC</createDate>
                    <updateDate id="352">2017-12-08 16:57:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249101-1</discussionProxy>
                    <discussionThreads id="353">
                      <string>77-249101-1</string>
                      <string>77-249101-2</string>
                    </discussionThreads>
                    <lesson>63146</lesson>
                    <status>ready</status>
                    <block id="354">
                      <name>code</name>
                      <text>Write a class named &lt;code&gt;User&lt;/code&gt;. It must have three string fields: &lt;code&gt;login&lt;/code&gt;, &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note: do not make them &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;</text>
                      <options id="355">
                        <samples id="356" />
                        <codeTemplates class="LinkedTreeMap" id="357" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// write your class here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="358" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="359">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="360" />
                    </block>
                    <actions class="linked-hash-map" id="361">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="362">
                      <string>31-77-249101</string>
                      <string>30-77-249101</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>26</passedBy>
                    <correctRatio>0.8055555555555556</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="363">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="364">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="365">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="366">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="367">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="368">
                  <id>63647</id>
                  <title>Instance methods # Simulating a clock</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63647</progress>
                  <createDate id="369">2017-12-13 02:53:42.0 UTC</createDate>
                  <updateDate id="370">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63647-1</discussionProxy>
                  <discussionThreads id="371">
                    <string>76-63647-1</string>
                  </discussionThreads>
                  <steps id="372">
                    <long>250595</long>
                  </steps>
                  <actions class="linked-hash-map" id="373" />
                  <tags id="374" />
                  <requiredTags id="375" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="376">
                    <string>31-76-63647</string>
                    <string>30-76-63647</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>27</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>332</timeToComplete>
                  <coverUrl>https://ucarecdn.com/f62bb626-cc70-4dbd-a7f2-145418cc74c7/-/scale_crop/180x180/center/</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Instance-methods-Simulating-a-clock-63647</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63647</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="377">
                <StepNode id="378">
                  <parent class="LessonNode" reference="363" />
                  <data class="Step" id="379">
                    <id>250595</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-250595</progress>
                    <createDate id="380">2017-12-13 03:34:21.0 UTC</createDate>
                    <updateDate id="381">2017-12-22 19:40:07.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-250595-1</discussionProxy>
                    <discussionThreads id="382">
                      <string>77-250595-1</string>
                      <string>77-250595-2</string>
                    </discussionThreads>
                    <lesson>63647</lesson>
                    <status>ready</status>
                    <block id="383">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Clock&lt;/code&gt;. It has two int fields: &lt;code&gt;hours&lt;/code&gt; and &lt;code&gt;minutes&lt;/code&gt;. The clock has the minute scale from 0 to 59 and the hour scale from 1 to 12. The clock does not know, now it's day or night.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Add the method &lt;code&gt;next&lt;/code&gt; that increases minutes by 1. The minutes must be reset to zero when the current hour ends. Do not forget to change hours as well.&lt;div&gt;&lt;br&gt;&lt;p&gt;Do not make the fields and methods &lt;code&gt;private&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Here is an example of a clock you should simulate.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;img width=&quot;202px&quot; src=&quot;https://ucarecdn.com/f62bb626-cc70-4dbd-a7f2-145418cc74c7/&quot; title=&quot;Image: https://ucarecdn.com/f62bb626-cc70-4dbd-a7f2-145418cc74c7/&quot; height=&quot;201px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="384">
                        <samples id="385" />
                        <codeTemplates class="LinkedTreeMap" id="386" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Clock {

    int hours = 12;
    int minutes = 0;

    // write a method here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="387" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="388">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="389" />
                    </block>
                    <actions class="linked-hash-map" id="390">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="391">
                      <string>31-77-250595</string>
                      <string>30-77-250595</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>29</passedBy>
                    <correctRatio>0.22448979591836735</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="392">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="393">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="394">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="395">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="396">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="397">
                  <id>56061</id>
                  <title>Static members # Too many cats</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56061</progress>
                  <createDate id="398">2017-09-12 14:45:49.0 UTC</createDate>
                  <updateDate id="399">2018-02-19 17:54:19.0 UTC</updateDate>
                  <discussionsCount>2</discussionsCount>
                  <discussionProxy>76-56061-1</discussionProxy>
                  <discussionThreads id="400">
                    <string>76-56061-1</string>
                  </discussionThreads>
                  <steps id="401">
                    <long>206432</long>
                  </steps>
                  <actions class="linked-hash-map" id="402" />
                  <tags id="403" />
                  <requiredTags id="404" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="405">
                    <string>31-76-56061</string>
                    <string>30-76-56061</string>
                  </subscriptions>
                  <viewedBy>41</viewedBy>
                  <passedBy>33</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>392</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Static-members-Too-many-cats-56061</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56061</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="406">
                <StepNode id="407">
                  <parent class="LessonNode" reference="392" />
                  <data class="Step" id="408">
                    <id>206432</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206432</progress>
                    <createDate id="409">2017-07-31 07:27:52.0 UTC</createDate>
                    <updateDate id="410">2017-12-15 18:43:47.0 UTC</updateDate>
                    <discussionsCount>2</discussionsCount>
                    <discussionProxy>77-206432-1</discussionProxy>
                    <discussionThreads id="411">
                      <string>77-206432-1</string>
                      <string>77-206432-2</string>
                    </discussionThreads>
                    <lesson>56061</lesson>
                    <status>ready</status>
                    <block id="412">
                      <name>code</name>
                      <text>&lt;p&gt;Implement a class named &lt;code&gt;Cat&lt;/code&gt; with two instance fields: string &lt;code&gt;name&lt;/code&gt; and int &lt;code&gt;age&lt;/code&gt;, and one static int field &lt;code&gt;counter&lt;/code&gt;. The static &lt;code&gt;counter&lt;/code&gt; field allows you to known how many cats have been already created.&lt;br&gt;&lt;/p&gt;&lt;p&gt;The class should have a constructor for initializing the instance fields. During the initialization of a new cat, the static field should be incremented. If the &lt;code&gt;counter &amp;gt; 5&lt;/code&gt;, the message &lt;b&gt;&quot;You have too many cats&quot;&lt;/b&gt; must be printed out in the &lt;code&gt;System.out&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Also, you need to implement a static method &lt;code&gt;getNumberOfCats&lt;/code&gt;. It should return the current numbers of created cats.&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Use the provided template, do not make the class public.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Example. &lt;/b&gt;Let's assume seven instances of the class &lt;code&gt;Cat&lt;/code&gt; have been already created, then the correct implemented method &lt;code&gt;Cat.getNumberOfCats()&lt;/code&gt; should return 7 and the message &lt;b&gt;&quot;You have too many cats&quot;&lt;/b&gt; has to appear twice.&lt;/p&gt;</text>
                      <options id="413">
                        <samples id="414" />
                        <codeTemplates class="LinkedTreeMap" id="415" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Cat {

    // write static and instance variables

    public Cat(String name, int age) {
        // implement the constructor
        // do not forgot to check the number of cats
    }

    public static int getNumberOfCats() {
        // implement the static method
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="416" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="417">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="418" />
                    </block>
                    <actions class="linked-hash-map" id="419">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="420">
                      <string>31-77-206432</string>
                      <string>30-77-206432</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>41</viewedBy>
                    <passedBy>33</passedBy>
                    <correctRatio>0.35789473684210527</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="421">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="422">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="423">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="424">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="425">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="426">
                  <id>63932</id>
                  <title>Static members # Project constants and methods</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63932</progress>
                  <createDate id="427">2017-12-15 20:03:05.0 UTC</createDate>
                  <updateDate id="428">2018-02-13 17:43:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63932-1</discussionProxy>
                  <discussionThreads id="429">
                    <string>76-63932-1</string>
                  </discussionThreads>
                  <steps id="430">
                    <long>251911</long>
                  </steps>
                  <actions class="linked-hash-map" id="431" />
                  <tags id="432" />
                  <requiredTags id="433" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="434">
                    <string>31-76-63932</string>
                    <string>30-76-63932</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>424</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Static-members-Project-constants-and-methods-63932</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63932</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="435">
                <StepNode id="436">
                  <parent class="LessonNode" reference="421" />
                  <data class="Step" id="437">
                    <id>251911</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-251911</progress>
                    <createDate id="438">2017-12-15 20:24:41.0 UTC</createDate>
                    <updateDate id="439">2017-12-15 20:53:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-251911-1</discussionProxy>
                    <discussionThreads id="440">
                      <string>77-251911-1</string>
                      <string>77-251911-2</string>
                    </discussionThreads>
                    <lesson>63932</lesson>
                    <status>ready</status>
                    <block id="441">
                      <name>code</name>
                      <text>&lt;p&gt;A programmer developed a library class that contains main constants and methods for all projects in his company, but, unfortunately, they have unclear names and meanings.&lt;br&gt;&lt;/p&gt;&lt;p&gt;Here is the class containing constants and methods:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;class ConstantsAndUtilites {

    public static final String A_CONSTANT_TTT = // here is a value

    public static final String B_CONSTANT_QQQ = // here is another value

    public static String getMagicString() {
        return // a string
    }

    public static String convertStringToAnotherString(String s) {
        return // a string
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Write a code that prints values of constants and results of invocation both methods in the following order: &lt;code&gt;A_CONSTANT_TTT&lt;/code&gt;, &lt;code&gt;B_CONSTANT_QQQ&lt;/code&gt;, &lt;code&gt;getMagicString()&lt;/code&gt;, &lt;code&gt;convertStringToAnotherString(&quot;aa&quot;)&lt;/code&gt;. Each value must be printed in a new line.&lt;/p&gt;&lt;p&gt;Use the provided template. The class with constants and methods will be available during testing.&lt;/p&gt;</text>
                      <options id="442">
                        <samples id="443" />
                        <codeTemplates class="LinkedTreeMap" id="444" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String args[]) {
    // write your code using the existing class ConstantsAndUtilites
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="445" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="446">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="447" />
                    </block>
                    <actions class="linked-hash-map" id="448">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="449">
                      <string>31-77-251911</string>
                      <string>30-77-251911</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.39655172413793105</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="450">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="451">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="452">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="453">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="454">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="455">
                  <id>65622</id>
                  <title>Linear search # The number of occurrences</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65622</progress>
                  <createDate id="456">2017-12-31 01:08:49.0 UTC</createDate>
                  <updateDate id="457">2018-01-23 13:49:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65622-1</discussionProxy>
                  <discussionThreads id="458">
                    <string>76-65622-1</string>
                  </discussionThreads>
                  <steps id="459">
                    <long>258724</long>
                  </steps>
                  <actions class="linked-hash-map" id="460" />
                  <tags id="461" />
                  <requiredTags id="462" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="463">
                    <string>31-76-65622</string>
                    <string>30-76-65622</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>18</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>158</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Linear-search-The-number-of-occurrences-65622</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65622</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="464">
                <StepNode id="465">
                  <parent class="LessonNode" reference="450" />
                  <data class="Step" id="466">
                    <id>258724</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258724</progress>
                    <createDate id="467">2017-12-31 07:21:08.0 UTC</createDate>
                    <updateDate id="468">2017-12-31 07:27:46.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258724-1</discussionProxy>
                    <discussionThreads id="469">
                      <string>77-258724-1</string>
                      <string>77-258724-2</string>
                    </discussionThreads>
                    <lesson>65622</lesson>
                    <status>ready</status>
                    <block id="470">
                      <name>code</name>
                      <text>Implement a method to count the number of occurrences of a value in an array of int's.</text>
                      <options id="471">
                        <samples id="472">
                          <Sample id="473">&lt;input&gt;19 14 17 15 17
17&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                          <Sample id="474">&lt;input&gt;101 120 103 240
150&lt;/input&gt;&lt;output&gt;0&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="475" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int count(int[] numbers, int value) {
    return -1;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="476" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="477">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="478" />
                    </block>
                    <actions class="linked-hash-map" id="479">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="480">
                      <string>31-77-258724</string>
                      <string>30-77-258724</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>18</passedBy>
                    <correctRatio>0.7777777777777778</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="481">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="482">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="483">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="484">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="485">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="486">
                  <id>63840</id>
                  <title>Multiple constructors # Employee</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63840</progress>
                  <createDate id="487">2017-12-14 17:19:30.0 UTC</createDate>
                  <updateDate id="488">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63840-1</discussionProxy>
                  <discussionThreads id="489">
                    <string>76-63840-1</string>
                  </discussionThreads>
                  <steps id="490">
                    <long>251312</long>
                  </steps>
                  <actions class="linked-hash-map" id="491" />
                  <tags id="492" />
                  <requiredTags id="493" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="494">
                    <string>31-76-63840</string>
                    <string>30-76-63840</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>329</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multiple-constructors-Employee-63840</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63840</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="495">
                <StepNode id="496">
                  <parent class="LessonNode" reference="481" />
                  <data class="Step" id="497">
                    <id>251312</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-251312</progress>
                    <createDate id="498">2017-12-14 18:06:32.0 UTC</createDate>
                    <updateDate id="499">2017-12-14 18:51:22.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-251312-1</discussionProxy>
                    <discussionThreads id="500">
                      <string>77-251312-1</string>
                      <string>77-251312-2</string>
                    </discussionThreads>
                    <lesson>63840</lesson>
                    <status>ready</status>
                    <block id="501">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Employee&lt;/code&gt; with three fields: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;salary&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Add three constructor to the class:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;the first one is the no-argument constructor, it should initialize string fields with the value &lt;b&gt;&quot;unknown&quot;&lt;/b&gt;﻿, the salary is 0;&lt;/li&gt;&lt;li&gt;the second one takes name and salary, and then initializes the corresponding fields, the address is &lt;b&gt;&quot;unknown&quot;&lt;/b&gt;;&lt;/li&gt;&lt;li&gt;the third one takes name, salary, address and initializes all fields.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Do not make the fields and constructors &lt;code&gt;private&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="502">
                        <samples id="503" />
                        <codeTemplates class="LinkedTreeMap" id="504" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Employee {

    String name;
    int salary;
    String address;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="505" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="506">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="507" />
                    </block>
                    <actions class="linked-hash-map" id="508">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="509">
                      <string>31-77-251312</string>
                      <string>30-77-251312</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.6</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="510">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="511">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="512">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="513">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="514">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="515">
                  <id>63841</id>
                  <title>Multiple constructors # Phone</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63841</progress>
                  <createDate id="516">2017-12-14 17:19:36.0 UTC</createDate>
                  <updateDate id="517">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63841-1</discussionProxy>
                  <discussionThreads id="518">
                    <string>76-63841-1</string>
                  </discussionThreads>
                  <steps id="519">
                    <long>251320</long>
                  </steps>
                  <actions class="linked-hash-map" id="520" />
                  <tags id="521" />
                  <requiredTags id="522" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="523">
                    <string>31-76-63841</string>
                    <string>30-76-63841</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>288</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multiple-constructors-Phone-63841</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63841</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="524">
                <StepNode id="525">
                  <parent class="LessonNode" reference="510" />
                  <data class="Step" id="526">
                    <id>251320</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-251320</progress>
                    <createDate id="527">2017-12-14 19:04:16.0 UTC</createDate>
                    <updateDate id="528">2017-12-14 19:06:39.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-251320-1</discussionProxy>
                    <discussionThreads id="529">
                      <string>77-251320-1</string>
                      <string>77-251320-2</string>
                    </discussionThreads>
                    <lesson>63841</lesson>
                    <status>ready</status>
                    <block id="530">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Phone&lt;/code&gt;. It has four fields: &lt;code&gt;ownerName&lt;/code&gt;, &lt;code&gt;countryCode&lt;/code&gt;, &lt;code&gt;cityCode&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Add two constructor to the class:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;the first one takes &lt;code&gt;ownerName&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt; and initialize the corresponding fields;&lt;/li&gt;&lt;li&gt;the second one takes &lt;code&gt;ownerName&lt;/code&gt;, &lt;code&gt;countryCode&lt;/code&gt;, &lt;code&gt;cityCode&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt; and initializes all fields.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Do not make the fields and constructors &lt;code&gt;private&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="531">
                        <samples id="532">
                          <Sample id="533">&lt;input&gt;J. J. Abrams
A100
B200
12345678&lt;/input&gt;&lt;output&gt;J. J. Abrams 12345678
J. J. Abrams A100 B200 12345678&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="534" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Phone {

    String ownerName;
    String countryCode;
    String cityCode;
    String number;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="535" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="536">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="537" />
                    </block>
                    <actions class="linked-hash-map" id="538">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="539">
                      <string>31-77-251320</string>
                      <string>30-77-251320</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.6875</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="540">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="541">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="542">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="543">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="544">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="545">
                  <id>63839</id>
                  <title>Multiple constructors # Time</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63839</progress>
                  <createDate id="546">2017-12-14 17:19:17.0 UTC</createDate>
                  <updateDate id="547">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63839-1</discussionProxy>
                  <discussionThreads id="548">
                    <string>76-63839-1</string>
                  </discussionThreads>
                  <steps id="549">
                    <long>251310</long>
                  </steps>
                  <actions class="linked-hash-map" id="550" />
                  <tags id="551" />
                  <requiredTags id="552" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="553">
                    <string>31-76-63839</string>
                    <string>30-76-63839</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>204</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multiple-constructors-Time-63839</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63839</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="554">
                <StepNode id="555">
                  <parent class="LessonNode" reference="540" />
                  <data class="Step" id="556">
                    <id>251310</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-251310</progress>
                    <createDate id="557">2017-12-14 17:36:12.0 UTC</createDate>
                    <updateDate id="558">2017-12-14 17:50:45.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-251310-1</discussionProxy>
                    <discussionThreads id="559">
                      <string>77-251310-1</string>
                      <string>77-251310-2</string>
                    </discussionThreads>
                    <lesson>63839</lesson>
                    <status>ready</status>
                    <block id="560">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Time&lt;/code&gt; with three fields: &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt; and &lt;code&gt;seconds&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Add three constructors to the class.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;The first one takes only hours and initializes the field;&lt;br&gt;&lt;/li&gt;&lt;li&gt;The second one takes hours and minutes and initializes the corresponding fields;&lt;/li&gt;&lt;li&gt;The third one takes hours, minutes and seconds and initializes all fields.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Do not make the fields and constructors &lt;code&gt;private&lt;/code&gt;.&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</text>
                      <options id="561">
                        <samples id="562">
                          <Sample id="563">&lt;input&gt;23 59 59&lt;/input&gt;&lt;output&gt;23
23 59
23 59 59&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="564" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Time {

    int hours;
    int minutes;
    int seconds;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="565" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="566">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="567" />
                    </block>
                    <actions class="linked-hash-map" id="568">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="569">
                      <string>31-77-251310</string>
                      <string>30-77-251310</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.71875</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="570">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="571">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="572">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="573">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="574">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="575">
                  <id>64057</id>
                  <title>Getters and setters # Account</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64057</progress>
                  <createDate id="576">2017-12-16 13:15:45.0 UTC</createDate>
                  <updateDate id="577">2018-02-19 18:16:42.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64057-1</discussionProxy>
                  <discussionThreads id="578">
                    <string>76-64057-1</string>
                  </discussionThreads>
                  <steps id="579">
                    <long>252233</long>
                  </steps>
                  <actions class="linked-hash-map" id="580" />
                  <tags id="581" />
                  <requiredTags id="582" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="583">
                    <string>31-76-64057</string>
                    <string>30-76-64057</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>225</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Getters-and-setters-Account-64057</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64057</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="584">
                <StepNode id="585">
                  <parent class="LessonNode" reference="570" />
                  <data class="Step" id="586">
                    <id>252233</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-252233</progress>
                    <createDate id="587">2017-12-16 14:01:50.0 UTC</createDate>
                    <updateDate id="588">2017-12-16 14:04:20.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-252233-1</discussionProxy>
                    <discussionThreads id="589">
                      <string>77-252233-1</string>
                      <string>77-252233-2</string>
                    </discussionThreads>
                    <lesson>64057</lesson>
                    <status>ready</status>
                    <block id="590">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Account&lt;/code&gt;. It has three fields: a long field &lt;code&gt;balance&lt;/code&gt;, string field &lt;code&gt;ownerName&lt;/code&gt;, and boolean flag &lt;code&gt;locked&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write getters and setters for all fields.&lt;/div&gt;</text>
                      <options id="591">
                        <samples id="592" />
                        <codeTemplates class="LinkedTreeMap" id="593" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Account {

    private long balance;
    private String ownerName;
    private boolean locked;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="594" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="595">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="596" />
                    </block>
                    <actions class="linked-hash-map" id="597">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="598">
                      <string>31-77-252233</string>
                      <string>30-77-252233</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>26</passedBy>
                    <correctRatio>0.6829268292682927</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="599">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="600">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="601">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="602">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="603">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="604">
                  <id>64058</id>
                  <title>Getters and setters # Book</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64058</progress>
                  <createDate id="605">2017-12-16 13:15:52.0 UTC</createDate>
                  <updateDate id="606">2018-02-19 18:17:02.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64058-1</discussionProxy>
                  <discussionThreads id="607">
                    <string>76-64058-1</string>
                  </discussionThreads>
                  <steps id="608">
                    <long>252234</long>
                  </steps>
                  <actions class="linked-hash-map" id="609" />
                  <tags id="610" />
                  <requiredTags id="611" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="612">
                    <string>31-76-64058</string>
                    <string>30-76-64058</string>
                  </subscriptions>
                  <viewedBy>29</viewedBy>
                  <passedBy>27</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>201</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Getters-and-setters-Book-64058</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64058</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="613">
                <StepNode id="614">
                  <parent class="LessonNode" reference="599" />
                  <data class="Step" id="615">
                    <id>252234</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-252234</progress>
                    <createDate id="616">2017-12-16 14:11:57.0 UTC</createDate>
                    <updateDate id="617">2017-12-16 14:15:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-252234-1</discussionProxy>
                    <discussionThreads id="618">
                      <string>77-252234-1</string>
                      <string>77-252234-2</string>
                    </discussionThreads>
                    <lesson>64058</lesson>
                    <status>ready</status>
                    <block id="619">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Book&lt;/code&gt;. It has three fields: string field &lt;code&gt;title&lt;/code&gt;, int field &lt;code&gt;yearOfPublishing&lt;/code&gt; and an array of strings &lt;code&gt;authors&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write getters and setters for all fields.&lt;/div&gt;</text>
                      <options id="620">
                        <samples id="621" />
                        <codeTemplates class="LinkedTreeMap" id="622" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Book {

    private String title;
    private int yearOfPublishing;
    private String[] authors;   
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="623" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="624">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="625" />
                    </block>
                    <actions class="linked-hash-map" id="626">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="627">
                      <string>31-77-252234</string>
                      <string>30-77-252234</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>29</viewedBy>
                    <passedBy>27</passedBy>
                    <correctRatio>0.36</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="628">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="629">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="630">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="631">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="632">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="633">
                  <id>64056</id>
                  <title>Getters and setters # Complex</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64056</progress>
                  <createDate id="634">2017-12-16 13:08:55.0 UTC</createDate>
                  <updateDate id="635">2018-02-19 18:07:17.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64056-1</discussionProxy>
                  <discussionThreads id="636">
                    <string>76-64056-1</string>
                  </discussionThreads>
                  <steps id="637">
                    <long>252232</long>
                  </steps>
                  <actions class="linked-hash-map" id="638" />
                  <tags id="639" />
                  <requiredTags id="640" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="641">
                    <string>31-76-64056</string>
                    <string>30-76-64056</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>149</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Getters-and-setters-Complex-64056</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64056</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="642">
                <StepNode id="643">
                  <parent class="LessonNode" reference="628" />
                  <data class="Step" id="644">
                    <id>252232</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-252232</progress>
                    <createDate id="645">2017-12-16 13:53:57.0 UTC</createDate>
                    <updateDate id="646">2017-12-16 13:56:56.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-252232-1</discussionProxy>
                    <discussionThreads id="647">
                      <string>77-252232-1</string>
                      <string>77-252232-2</string>
                    </discussionThreads>
                    <lesson>64056</lesson>
                    <status>ready</status>
                    <block id="648">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Complex&lt;/code&gt; with two double fields &lt;code&gt;real&lt;/code&gt; and &lt;code&gt;image&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write getters and setters for both fields.&lt;/div&gt;</text>
                      <options id="649">
                        <samples id="650" />
                        <codeTemplates class="LinkedTreeMap" id="651" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Complex {

    private double real;
    private double image;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="652" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="653">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="654" />
                    </block>
                    <actions class="linked-hash-map" id="655">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="656">
                      <string>31-77-252232</string>
                      <string>30-77-252232</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>26</passedBy>
                    <correctRatio>0.675</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="657">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="658">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="659">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="660">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="661">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="662">
                  <id>56083</id>
                  <title>Inheritance # Employees</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56083</progress>
                  <createDate id="663">2017-09-12 14:45:57.0 UTC</createDate>
                  <updateDate id="664">2018-02-19 18:44:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56083-1</discussionProxy>
                  <discussionThreads id="665">
                    <string>76-56083-1</string>
                  </discussionThreads>
                  <steps id="666">
                    <long>206445</long>
                  </steps>
                  <actions class="linked-hash-map" id="667" />
                  <tags id="668" />
                  <requiredTags id="669" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="670">
                    <string>31-76-56083</string>
                    <string>30-76-56083</string>
                  </subscriptions>
                  <viewedBy>36</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1374</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Inheritance-Employees-56083</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56083</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="671">
                <StepNode id="672">
                  <parent class="LessonNode" reference="657" />
                  <data class="Step" id="673">
                    <id>206445</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206445</progress>
                    <createDate id="674">2017-07-31 09:53:00.0 UTC</createDate>
                    <updateDate id="675">2018-02-19 18:44:30.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206445-1</discussionProxy>
                    <discussionThreads id="676">
                      <string>77-206445-1</string>
                      <string>77-206445-2</string>
                    </discussionThreads>
                    <lesson>56083</lesson>
                    <status>ready</status>
                    <block id="677">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Develop a class hierarchy of employees. The hierarchy should include three classes:&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Employee&lt;/b&gt; is the base class. It includes three fields (name, email and experience), one constructor with three arguments and three getters: getName(), getEmail(), getExperience().&lt;/li&gt;&lt;li&gt;&lt;b&gt;Developer&lt;/b&gt; is a subclass. It includes fields from the base class and two additional fields (mainLanguage, skills), one constructor with five arguments and two getters: getMainLanguage(), getSkills().&lt;/li&gt;&lt;li&gt;&lt;b&gt;DataAnalyst&lt;/b&gt; is another subclass. It includes fields from the base class and two additional fields (phd, methods), one constructor with five arguments and two getters: isPhD(), getMethods().&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;You need to define types of the fields and write suitable constructors. To understand it see the code below.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;String[] skills = { &quot;git&quot;, &quot;Scala&quot;, &quot;JBoss&quot;, &quot;UML&quot; };&lt;br&gt;Developer developer = new Developer(&quot;Mary&quot;, &quot;mary@mail.com&quot;, 3, &quot;Java&quot;, skills);&lt;br&gt;&lt;br&gt;String[] mlMethods = { &quot;neural networks&quot;, &quot;decision tree&quot;, &quot;bayesian algorithms&quot; };&lt;br&gt;DataAnalyst analyst = new DataAnalyst(&quot;John&quot;, &quot;john@gmail.com&quot;, 2, true, mlMethods);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;It should work correctly with your class hierarchy. Do not forget write getters with the specified name (otherwise the test system won't be able to check your solution).&lt;/p&gt;&lt;p&gt;Do not make your classes &lt;code&gt;public&lt;/code&gt;!&lt;/p&gt;</text>
                      <options id="678">
                        <samples id="679" />
                        <codeTemplates class="LinkedTreeMap" id="680" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Employee {

    // write fields

    // write constructor

    // write getters
}

class Developer extends Employee {

    // write fields

    // write constructor

    // write getters
}

class DataAnalyst extends Employee {

    // write fields

    // write constructor

    // write getters
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="681" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="682">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="683" />
                    </block>
                    <actions class="linked-hash-map" id="684">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="685">
                      <string>31-77-206445</string>
                      <string>30-77-206445</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>36</viewedBy>
                    <passedBy>26</passedBy>
                    <correctRatio>0.26851851851851855</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="686">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="687">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="688">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="689">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="690">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="691">
                  <id>64227</id>
                  <title>The keyword super # Bank account</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64227</progress>
                  <createDate id="692">2017-12-18 16:58:26.0 UTC</createDate>
                  <updateDate id="693">2018-02-19 23:49:57.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64227-1</discussionProxy>
                  <discussionThreads id="694">
                    <string>76-64227-1</string>
                  </discussionThreads>
                  <steps id="695">
                    <long>252945</long>
                  </steps>
                  <actions class="linked-hash-map" id="696" />
                  <tags id="697" />
                  <requiredTags id="698" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="699">
                    <string>31-76-64227</string>
                    <string>30-76-64227</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>628</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-keyword-super-Bank-account-64227</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64227</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="700">
                <StepNode id="701">
                  <parent class="LessonNode" reference="686" />
                  <data class="Step" id="702">
                    <id>252945</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-252945</progress>
                    <createDate id="703">2017-12-18 19:01:32.0 UTC</createDate>
                    <updateDate id="704">2017-12-28 11:52:54.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-252945-1</discussionProxy>
                    <discussionThreads id="705">
                      <string>77-252945-1</string>
                      <string>77-252945-2</string>
                    </discussionThreads>
                    <lesson>64227</lesson>
                    <status>ready</status>
                    <block id="706">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;BankAccount&lt;/code&gt;. The class has two fields: &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;balance&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Define two classes which inherit the given one:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;CheckingAccount&lt;/code&gt; containing the double field &lt;code&gt;fee&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;SavingAccount&lt;/code&gt; containing the double field &lt;code&gt;interestRate&lt;/code&gt;.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Each new class should have a constructor with three parameters to initialize all fields. Do not forget to invoke the superclass constructor when creating objects.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Do not make the fields &lt;code&gt;private&lt;/code&gt;.&lt;/div&gt;</text>
                      <options id="707">
                        <samples id="708">
                          <Sample id="709">&lt;input&gt;11-11 10000 0.01
22-22 20000 0.02&lt;/input&gt;&lt;output&gt;11-11 10000 0.01
22-22 20000 0.02&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="710" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class BankAccount {

    protected String number;
    protected Long balance;

    public BankAccount(String number, Long balance) {
        this.number = number;
        this.balance = balance;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="711" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="712">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="713" />
                    </block>
                    <actions class="linked-hash-map" id="714">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="715">
                      <string>31-77-252945</string>
                      <string>30-77-252945</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.38095238095238093</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="716">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="717">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="718">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="719">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="720">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="721">
                  <id>64226</id>
                  <title>The keyword super # Fix the non-compiled hierarchy</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64226</progress>
                  <createDate id="722">2017-12-18 16:58:20.0 UTC</createDate>
                  <updateDate id="723">2018-02-19 23:49:44.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64226-1</discussionProxy>
                  <discussionThreads id="724">
                    <string>76-64226-1</string>
                  </discussionThreads>
                  <steps id="725">
                    <long>252930</long>
                  </steps>
                  <actions class="linked-hash-map" id="726" />
                  <tags id="727" />
                  <requiredTags id="728" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="729">
                    <string>31-76-64226</string>
                    <string>30-76-64226</string>
                  </subscriptions>
                  <viewedBy>25</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>217</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-keyword-super-Fix-the-non-compiled-hierarchy-64226</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64226</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="730">
                <StepNode id="731">
                  <parent class="LessonNode" reference="716" />
                  <data class="Step" id="732">
                    <id>252930</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-252930</progress>
                    <createDate id="733">2017-12-18 18:23:14.0 UTC</createDate>
                    <updateDate id="734">2017-12-18 18:42:33.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-252930-1</discussionProxy>
                    <discussionThreads id="735">
                      <string>77-252930-1</string>
                      <string>77-252930-2</string>
                    </discussionThreads>
                    <lesson>64226</lesson>
                    <status>ready</status>
                    <block id="736">
                      <name>code</name>
                      <text>A developer wrote a hierarchy consisting of the three classes: &lt;code&gt;Employee&lt;/code&gt;, &lt;code&gt;RegularEmployee&lt;/code&gt; and &lt;code&gt;ContractEmployee&lt;/code&gt;.&lt;div&gt;But here is one problem, it's not compiled.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Fix the code to make it compiled. You cannot remove lines of code, just fix the use of &lt;code&gt;super&lt;/code&gt; and &lt;code&gt;this&lt;/code&gt; keywords where it's incorrect.&lt;/div&gt;</text>
                      <options id="737">
                        <samples id="738" />
                        <codeTemplates class="LinkedTreeMap" id="739" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Employee {

    protected String name;
    protected String birthDate;

    public Employee(String name, String birthDate) {
        super.name = name;
        super.birthDate = birthDate;
    }
}

class RegularEmployee extends Employee {

    protected long salary;
    protected String hireDate;

    public RegularEmployee(String name, String birthDate, long salary, String hireDate) {
        this(name, birthDate);
        super.salary = salary;
        this.hireDate = hireDate;
    }
}

class ContractEmployee extends Employee {

    protected long payPerHour;
    protected String contractPeriod;

    public ContractEmployee(String name, String birthDate, long payPerHour, String contractPeriod) {
        this.payPerHour = payPerHour;
        super.contractPeriod = contractPeriod;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="740" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="741">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="742" />
                    </block>
                    <actions class="linked-hash-map" id="743">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="744">
                      <string>31-77-252930</string>
                      <string>30-77-252930</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>25</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.4642857142857143</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="745">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="746">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="747">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="748">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="749">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="750">
                  <id>56088</id>
                  <title>Hiding and overriding # Saying animals</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56088</progress>
                  <createDate id="751">2017-09-12 14:45:59.0 UTC</createDate>
                  <updateDate id="752">2018-02-20 16:01:24.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56088-1</discussionProxy>
                  <discussionThreads id="753">
                    <string>76-56088-1</string>
                  </discussionThreads>
                  <steps id="754">
                    <long>206513</long>
                  </steps>
                  <actions class="linked-hash-map" id="755" />
                  <tags id="756" />
                  <requiredTags id="757" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="758">
                    <string>31-76-56088</string>
                    <string>30-76-56088</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>158</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Hiding-and-overriding-Saying-animals-56088</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56088</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="759">
                <StepNode id="760">
                  <parent class="LessonNode" reference="745" />
                  <data class="Step" id="761">
                    <id>206513</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206513</progress>
                    <createDate id="762">2017-07-31 12:52:06.0 UTC</createDate>
                    <updateDate id="763">2018-02-20 16:01:23.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206513-1</discussionProxy>
                    <discussionThreads id="764">
                      <string>77-206513-1</string>
                      <string>77-206513-2</string>
                    </discussionThreads>
                    <lesson>56088</lesson>
                    <status>ready</status>
                    <block id="765">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;You have four classes: Animal, Cat, Dog &lt;/span&gt;and&lt;span&gt; Duck. &lt;/span&gt;&lt;span&gt;The class animal has a method say(). The method do nothing.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Override the method in all subclasses. &lt;span&gt;Overridden methods should output what these animals say (using System.out.println).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Cat:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;meow-meow&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Dog:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;arf-arf&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Duck:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quack-quack&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="766">
                        <samples id="767" />
                        <codeTemplates class="LinkedTreeMap" id="768" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Animal {

    public void say() {}
}

class Cat extends Animal {

}

class Dog extends Animal {

}

class Duck extends Animal {

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="769" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="770">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="771" />
                    </block>
                    <actions class="linked-hash-map" id="772">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="773">
                      <string>31-77-206513</string>
                      <string>30-77-206513</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.7027027027027027</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="774">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="775">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="776">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="777">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="778">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="779">
                  <id>59077</id>
                  <title>Generics basics - Practice 4</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-59077</progress>
                  <createDate id="780">2017-10-20 06:13:51.0 UTC</createDate>
                  <updateDate id="781">2018-01-23 13:47:07.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-59077-1</discussionProxy>
                  <discussionThreads id="782">
                    <string>76-59077-1</string>
                  </discussionThreads>
                  <steps id="783">
                    <long>233237</long>
                  </steps>
                  <actions class="linked-hash-map" id="784" />
                  <tags id="785" />
                  <requiredTags id="786" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="787">
                    <string>31-76-59077</string>
                    <string>30-76-59077</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>267</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>9526</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Generics-basics-Practice-4-59077</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-59077</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="788">
                <StepNode id="789">
                  <parent class="LessonNode" reference="774" />
                  <data class="Step" id="790">
                    <id>233237</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-233237</progress>
                    <createDate id="791">2017-10-20 06:40:12.0 UTC</createDate>
                    <updateDate id="792">2017-10-20 06:40:46.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-233237-1</discussionProxy>
                    <discussionThreads id="793">
                      <string>77-233237-1</string>
                      <string>77-233237-2</string>
                    </discussionThreads>
                    <lesson>59077</lesson>
                    <status>ready</status>
                    <block id="794">
                      <name>code</name>
                      <text>&lt;p&gt;You are asked to help with Java programming in a Pie company. At the moment they bake and sell pies, cakes, and tarts packed in a nice box. Unfortunately, approach to boxes programming is quite outdated – each pie type requires its own box class. This approach is poorly scalable and will turn the situation into a nightmare with product range growth (imagine all these ApplePieBox, StrawberryPieBox, etc.).&lt;/p&gt;&lt;p&gt;To avoid this implement universal Box class that will accommodate anything with &lt;i&gt;put&lt;/i&gt; and give it back with &lt;i&gt;get&lt;/i&gt; methods.&lt;/p&gt;</text>
                      <options id="795">
                        <samples id="796">
                          <Sample id="797">&lt;input&gt;Magical Box class
&lt;/input&gt;&lt;output&gt;Well done!&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="798" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>/**
    Box for cakes
*/
class CakeBox {

    private Cake cake;

    public void put(Cake cake) {
    	this.cake = cake;
    }

    public Cake get() {
        return this.cake;
    }
}

/**
    Box for pies
*/
class PieBox {

    private Pie pie;

    public void put(Pie pie) {
    	this.pie = pie;
    }

    public Pie get() {
        return this.pie;
    }
}


/**
    Box for tarts
*/
class TartBox {

    private Tart tart;

    public void put(Tart tart) {
    	this.tart = tart;
    }

    public Tart get() {
        return this.tart;
    }
}

/*
    Hundred more such boring classes OR ...
    magic class for everything everybody is waiting for
*/
class Box ...</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="799" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="800">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="801" />
                    </block>
                    <actions class="linked-hash-map" id="802">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="803">
                      <string>31-77-233237</string>
                      <string>30-77-233237</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.6571428571428571</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="804">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="805">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="806">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="807">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="808">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="809">
                  <id>59078</id>
                  <title>Generics basics - Practice 5</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-59078</progress>
                  <createDate id="810">2017-10-20 06:13:55.0 UTC</createDate>
                  <updateDate id="811">2018-01-23 13:47:07.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-59078-1</discussionProxy>
                  <discussionThreads id="812">
                    <string>76-59078-1</string>
                  </discussionThreads>
                  <steps id="813">
                    <long>233238</long>
                  </steps>
                  <actions class="linked-hash-map" id="814" />
                  <tags id="815" />
                  <requiredTags id="816" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="817">
                    <string>31-76-59078</string>
                    <string>30-76-59078</string>
                  </subscriptions>
                  <viewedBy>29</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>121</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>9526</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Generics-basics-Practice-5-59078</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-59078</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="818">
                <StepNode id="819">
                  <parent class="LessonNode" reference="804" />
                  <data class="Step" id="820">
                    <id>233238</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-233238</progress>
                    <createDate id="821">2017-10-20 06:41:16.0 UTC</createDate>
                    <updateDate id="822">2017-10-20 06:41:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-233238-1</discussionProxy>
                    <discussionThreads id="823">
                      <string>77-233238-1</string>
                      <string>77-233238-2</string>
                    </discussionThreads>
                    <lesson>59078</lesson>
                    <status>ready</status>
                    <block id="824">
                      <name>code</name>
                      <text>&lt;p&gt;You are asked to help with Java programming in a company that makes boxes. Their former Java programmer created Box class that uses objects and requires casting. Casting is &lt;a title=&quot;Link: http://www.javaworld.com/article/2076555/build-ci-sdlc/java-performance-programming--part-2--the-cost-of-casting.html&quot; href=&quot;http://www.javaworld.com/article/2076555/build-ci-sdlc/java-performance-programming--part-2--the-cost-of-casting.html&quot;&gt;slow&lt;/a&gt; and error-prone (which is not good, so they decide to fire him), so could you create Box implementation that will not require casting but provide type-checking at a compile time?&lt;/p&gt;</text>
                      <options id="825">
                        <samples id="826">
                          <Sample id="827">&lt;input&gt;Magical Box class
&lt;/input&gt;&lt;output&gt;Well done!&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="828" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>/**

Object-based box class that requires casting every time you want to get some specific stuff from it, e.g.:

    Box cakeBox = new Box();
    cakeBox.put(new Cake());
    // Without casting only object can be retrieved out of the box
    Cake cake = (Cake) cakeBox.get();

Casting is not desirable and can fall at runtime, could you create more... generic solution?

*/
class Box {

    private Object item;

    public void put(Object item) {
    	this.item = item;
    }

    public Object get() {
        return this.item;
    }

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="829" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="830">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="831" />
                    </block>
                    <actions class="linked-hash-map" id="832">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="833">
                      <string>31-77-233238</string>
                      <string>30-77-233238</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>29</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.9629629629629629</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="834">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="835">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="836">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="837">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="838">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="839">
                  <id>59075</id>
                  <title>Generics basics - Practice 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-59075</progress>
                  <createDate id="840">2017-10-20 06:13:39.0 UTC</createDate>
                  <updateDate id="841">2018-01-23 13:47:06.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-59075-1</discussionProxy>
                  <discussionThreads id="842">
                    <string>76-59075-1</string>
                  </discussionThreads>
                  <steps id="843">
                    <long>233234</long>
                  </steps>
                  <actions class="linked-hash-map" id="844" />
                  <tags id="845" />
                  <requiredTags id="846" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="847">
                    <string>31-76-59075</string>
                    <string>30-76-59075</string>
                  </subscriptions>
                  <viewedBy>38</viewedBy>
                  <passedBy>32</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>37</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>9526</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Generics-basics-Practice-2-59075</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-59075</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="848">
                <StepNode id="849">
                  <parent class="LessonNode" reference="834" />
                  <data class="Step" id="850">
                    <id>233234</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-233234</progress>
                    <createDate id="851">2017-10-20 06:31:35.0 UTC</createDate>
                    <updateDate id="852">2017-10-20 06:35:51.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-233234-1</discussionProxy>
                    <discussionThreads id="853">
                      <string>77-233234-1</string>
                      <string>77-233234-2</string>
                    </discussionThreads>
                    <lesson>59075</lesson>
                    <status>ready</status>
                    <block id="854">
                      <name>choice</name>
                      <text>&lt;p&gt;Imagine generic class:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;public class Example&amp;lt;X&amp;gt; {
    ...
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;What can be used as the X parameter value?&lt;/p&gt;</text>
                      <options id="855" />
                      <subtitleFiles id="856" />
                    </block>
                    <actions class="linked-hash-map" id="857">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="858">
                      <string>31-77-233234</string>
                      <string>30-77-233234</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>38</viewedBy>
                    <passedBy>32</passedBy>
                    <correctRatio>0.3269230769230769</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastReply id="859">
                    <choices id="860">
                      <boolean>false</boolean>
                      <boolean>false</boolean>
                      <boolean>false</boolean>
                      <boolean>false</boolean>
                      <boolean>false</boolean>
                      <boolean>false</boolean>
                    </choices>
                  </lastReply>
                  <lastReplyTime id="861">2018-03-20 12:01:19.175 UTC</lastReplyTime>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="862">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="863">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="864">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="865">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="866">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="867">
                  <id>59076</id>
                  <title>Generics basics - Practice 3</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-59076</progress>
                  <createDate id="868">2017-10-20 06:13:45.0 UTC</createDate>
                  <updateDate id="869">2018-01-23 13:47:07.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-59076-1</discussionProxy>
                  <discussionThreads id="870">
                    <string>76-59076-1</string>
                  </discussionThreads>
                  <steps id="871">
                    <long>233236</long>
                  </steps>
                  <actions class="linked-hash-map" id="872" />
                  <tags id="873" />
                  <requiredTags id="874" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="875">
                    <string>31-76-59076</string>
                    <string>30-76-59076</string>
                  </subscriptions>
                  <viewedBy>41</viewedBy>
                  <passedBy>24</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>2512</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>9526</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Generics-basics-Practice-3-59076</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-59076</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="876">
                <StepNode id="877">
                  <parent class="LessonNode" reference="862" />
                  <data class="Step" id="878">
                    <id>233236</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-233236</progress>
                    <createDate id="879">2017-10-20 06:39:06.0 UTC</createDate>
                    <updateDate id="880">2017-10-20 06:39:07.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-233236-1</discussionProxy>
                    <discussionThreads id="881">
                      <string>77-233236-1</string>
                      <string>77-233236-2</string>
                    </discussionThreads>
                    <lesson>59076</lesson>
                    <status>ready</status>
                    <block id="882">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;b&gt;Generic pairs&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Implement the generic class &lt;i&gt;Pair&lt;/i&gt; which contains a pair of objects (of any types). The objects can be null.&lt;/p&gt;&lt;p&gt;You should implement the methods &lt;i&gt;getFirst()&lt;/i&gt;, &lt;i&gt;getSecond()&lt;/i&gt;, &lt;i&gt;equals()&lt;/i&gt; and &lt;i&gt;hashCode() &lt;/i&gt;and the static method &lt;i&gt;of()&lt;/i&gt; for creating instances as well. The constructor must be private.&lt;/p&gt;&lt;p&gt;Be careful with nulls when implementing &lt;i&gt;equals()&lt;/i&gt; and &lt;i&gt;hashCode().&lt;/i&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If your class has been implemented correctly, the following code should be compiled and work successfully.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;pre&gt;Pair&amp;lt;Integer, String&amp;gt; pair = Pair.of(1, &quot;hello&quot;);&lt;br&gt;Integer i = pair.getFirst(); // 1&lt;br&gt;String s = pair.getSecond(); // &quot;hello&quot;&lt;br&gt;&lt;br&gt;Pair&amp;lt;Integer, String&amp;gt; pair2 = Pair.of(1, &quot;hello&quot;);&lt;br&gt;boolean mustBeTrue = pair.equals(pair2); // true!&lt;br&gt;boolean mustAlsoBeTrue = pair.hashCode() == pair2.hashCode(); // true!&lt;/pre&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not change the access modifier of the class Pair.&lt;/p&gt;</text>
                      <options id="883">
                        <samples id="884" />
                        <codeTemplates class="LinkedTreeMap" id="885" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Pair {

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="886" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="887">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="888" />
                    </block>
                    <actions class="linked-hash-map" id="889">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="890">
                      <string>31-77-233236</string>
                      <string>30-77-233236</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>41</viewedBy>
                    <passedBy>24</passedBy>
                    <correctRatio>0.1308411214953271</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="891">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="892">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="893">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="894">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="895">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="896">
                  <id>56097</id>
                  <title>Abstract class # Shape hierarchy</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56097</progress>
                  <createDate id="897">2017-09-12 14:46:03.0 UTC</createDate>
                  <updateDate id="898">2018-02-20 17:57:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56097-1</discussionProxy>
                  <discussionThreads id="899">
                    <string>76-56097-1</string>
                  </discussionThreads>
                  <steps id="900">
                    <long>206591</long>
                  </steps>
                  <actions class="linked-hash-map" id="901" />
                  <tags id="902" />
                  <requiredTags id="903" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="904">
                    <string>31-76-56097</string>
                    <string>30-76-56097</string>
                  </subscriptions>
                  <viewedBy>34</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>891</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Abstract-class-Shape-hierarchy-56097</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56097</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="905">
                <StepNode id="906">
                  <parent class="LessonNode" reference="891" />
                  <data class="Step" id="907">
                    <id>206591</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206591</progress>
                    <createDate id="908">2017-07-31 15:25:41.0 UTC</createDate>
                    <updateDate id="909">2018-01-02 14:14:27.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206591-1</discussionProxy>
                    <discussionThreads id="910">
                      <string>77-206591-1</string>
                      <string>77-206591-2</string>
                    </discussionThreads>
                    <lesson>56097</lesson>
                    <status>ready</status>
                    <block id="911">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;You have the abstract class &lt;/span&gt;&lt;b&gt;Shape&lt;/b&gt;&lt;span&gt; with two abstract methods: getPerimeter() and getArea(). See the provided code template.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You need to declare and implement three classes: &lt;b&gt;Triangle&lt;/b&gt;, &lt;b&gt;Rectangle&lt;/b&gt; and &lt;b&gt;Circle&lt;/b&gt;. The classes must extend the Shape class and implement all abstract methods. To implement the methods the standard class Math may help you. Do not make your classes public.&lt;/p&gt;&lt;p&gt;The class Triangle must have a constructor with three double arguments for setting the length of each side. To calculate the area of this shape you may use the Heron's formula.&lt;/p&gt;&lt;p&gt;The class Rectangle must have a constructor with two double arguments for setting the length of different sides.&lt;/p&gt;&lt;p&gt;The class Circle must have a constructor with one double argument for setting the radius. You may use Math.PI as the PI constant or declare it yourself.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Examples&lt;/b&gt;&lt;/p&gt;&lt;p&gt;A circle has a radius = 10: perimeter = 62.831853..., area = 314.159265....&lt;/p&gt;&lt;p&gt;A triangle has three sides a = 3, b = 4 and c = 5: perimeter = 12.0, area = 6.0.&lt;/p&gt;&lt;p&gt;A rectangle has two different sides a = 5, b = 10: perimeter = 30.0, area = 50.0.&lt;/p&gt;</text>
                      <options id="912">
                        <samples id="913" />
                        <codeTemplates class="LinkedTreeMap" id="914" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>abstract class Shape {

    abstract double getPerimeter();

    abstract double getArea();
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="915" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="916">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="917" />
                    </block>
                    <actions class="linked-hash-map" id="918">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="919">
                      <string>31-77-206591</string>
                      <string>30-77-206591</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>34</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.5454545454545454</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="920">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="921">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="922">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="923">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="924">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="925">
                  <id>64932</id>
                  <title>Abstract class # IntBinaryOperation</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64932</progress>
                  <createDate id="926">2017-12-24 10:09:23.0 UTC</createDate>
                  <updateDate id="927">2018-02-20 17:58:38.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64932-1</discussionProxy>
                  <discussionThreads id="928">
                    <string>76-64932-1</string>
                  </discussionThreads>
                  <steps id="929">
                    <long>254975</long>
                  </steps>
                  <actions class="linked-hash-map" id="930" />
                  <tags id="931" />
                  <requiredTags id="932" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="933">
                    <string>31-76-64932</string>
                    <string>30-76-64932</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>401</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Abstract-class-IntBinaryOperation-64932</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64932</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="934">
                <StepNode id="935">
                  <parent class="LessonNode" reference="920" />
                  <data class="Step" id="936">
                    <id>254975</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-254975</progress>
                    <createDate id="937">2017-12-24 10:11:31.0 UTC</createDate>
                    <updateDate id="938">2017-12-25 13:24:12.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-254975-1</discussionProxy>
                    <discussionThreads id="939">
                      <string>77-254975-1</string>
                      <string>77-254975-2</string>
                    </discussionThreads>
                    <lesson>64932</lesson>
                    <status>ready</status>
                    <block id="940">
                      <name>code</name>
                      <text>&lt;p&gt;Given an abstract class &lt;code&gt;IntBinaryOperation&lt;/code&gt;. It has one abstract method &lt;code&gt;perform&lt;/code&gt; and two fields representing the operation arguments. The fields are initialized in the constructor. See the provided code template.&lt;/p&gt;&lt;p&gt;You need to declare and implement two classes representing concrete operations: &lt;code&gt;Plus&lt;/code&gt; and &lt;code&gt;Multiplication&lt;/code&gt;. The classes must extend the abstract class and implement the method &lt;code&gt;perform&lt;/code&gt;. The implementation should work in accordance with the class name. Do not forget to write two-argument constructors in your classes.&lt;/p&gt;&lt;p&gt;Do not make your classes &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;</text>
                      <options id="941">
                        <samples id="942">
                          <Sample id="943">&lt;input&gt;plus 2 3
&lt;/input&gt;&lt;output&gt;5&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="944" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>abstract class IntBinaryOperation {

    protected int firstArg;
    protected int secondArg;

    public IntBinaryOperation(int firstArg, int secondArg) {
        this.firstArg = firstArg;
        this.secondArg = secondArg;
    }

    public abstract int perform();
}

// declare and implement your classes here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="945" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="946">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="947" />
                    </block>
                    <actions class="linked-hash-map" id="948">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="949">
                      <string>31-77-254975</string>
                      <string>30-77-254975</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.43859649122807015</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="950">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="951">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="952">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="953">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="954">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="955">
                  <id>64934</id>
                  <title>Abstract class # Users and WebSites</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64934</progress>
                  <createDate id="956">2017-12-24 10:09:38.0 UTC</createDate>
                  <updateDate id="957">2018-02-13 17:43:49.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64934-1</discussionProxy>
                  <discussionThreads id="958">
                    <string>76-64934-1</string>
                  </discussionThreads>
                  <steps id="959">
                    <long>254987</long>
                  </steps>
                  <actions class="linked-hash-map" id="960" />
                  <tags id="961" />
                  <requiredTags id="962" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="963">
                    <string>31-76-64934</string>
                    <string>30-76-64934</string>
                  </subscriptions>
                  <viewedBy>29</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>546</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Abstract-class-Users-and-WebSites-64934</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64934</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="964">
                <StepNode id="965">
                  <parent class="LessonNode" reference="950" />
                  <data class="Step" id="966">
                    <id>254987</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-254987</progress>
                    <createDate id="967">2017-12-24 11:17:03.0 UTC</createDate>
                    <updateDate id="968">2017-12-24 11:36:45.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-254987-1</discussionProxy>
                    <discussionThreads id="969">
                      <string>77-254987-1</string>
                      <string>77-254987-2</string>
                    </discussionThreads>
                    <lesson>64934</lesson>
                    <status>ready</status>
                    <block id="970">
                      <name>code</name>
                      <text>You write the application which collects information what sites were visited by what users.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;There are three classes: &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;WebSite&lt;/code&gt; and &lt;code&gt;Visit&lt;/code&gt;. The classes have a lot of the same fields and methods.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write a new base &lt;b&gt;abstract&lt;/b&gt; class named &lt;code&gt;BaseEntity&lt;/code&gt;. Provided classes must extend it. Move all repeating fields and methods to the new class.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;After your modifications, the following code must work correctly:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code&gt;User user = new User();&lt;br&gt;user.setName(&quot;John Grant&quot;);&lt;br&gt;&lt;br&gt;BaseEntity userEntity = user;&lt;br&gt;userEntity.setId(100);&lt;br&gt;userEntity.setVersion(1);&lt;br&gt;&lt;br&gt;WebSite site = new WebSite();&lt;br&gt;site.setUrl(&quot;https://stepik.org&quot;);&lt;br&gt;        &lt;br&gt;BaseEntity siteEntity = site;&lt;br&gt;siteEntity.setId(101);&lt;br&gt;siteEntity.setVersion(1);&lt;br&gt;        &lt;br&gt;Visit visit = new Visit();&lt;br&gt;visit.setUser(user);&lt;br&gt;visit.setSite(site);&lt;br&gt;        &lt;br&gt;BaseEntity baseVisit = visit;&lt;br&gt;baseVisit.setId(102);&lt;br&gt;baseVisit.setVersion(103);﻿&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</text>
                      <options id="971">
                        <samples id="972" />
                        <codeTemplates class="LinkedTreeMap" id="973" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class User {

    protected long id;

    protected long version;

    protected String name;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public long getVersion() {
        return version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

class Visit {

    protected long id;

    protected long version;

    protected User user;

    protected WebSite site;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public long getVersion() {
        return version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public WebSite getSite() {
        return site;
    }

    public void setSite(WebSite site) {
        this.site = site;
    }
}

class WebSite {

    protected long id;

    protected long version;

    protected String url;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public long getVersion() {
        return version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="974" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="975">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="976" />
                    </block>
                    <actions class="linked-hash-map" id="977">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="978">
                      <string>31-77-254987</string>
                      <string>30-77-254987</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>29</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.4084507042253521</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="979">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="980">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="981">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="982">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="983">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="984">
                  <id>64963</id>
                  <title>Interface # Mutable geometric shapes</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64963</progress>
                  <createDate id="985">2017-12-24 13:12:31.0 UTC</createDate>
                  <updateDate id="986">2018-03-20 18:20:50.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64963-1</discussionProxy>
                  <discussionThreads id="987">
                    <string>76-64963-1</string>
                  </discussionThreads>
                  <steps id="988">
                    <long>255031</long>
                  </steps>
                  <actions class="linked-hash-map" id="989" />
                  <tags id="990" />
                  <requiredTags id="991" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="992">
                    <string>31-76-64963</string>
                    <string>30-76-64963</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>647</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Interface-Mutable-geometric-shapes-64963</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-64963</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="993">
                <StepNode id="994">
                  <parent class="LessonNode" reference="979" />
                  <data class="Step" id="995">
                    <id>255031</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-255031</progress>
                    <createDate id="996">2017-12-24 13:20:14.0 UTC</createDate>
                    <updateDate id="997">2018-03-20 18:20:49.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-255031-1</discussionProxy>
                    <discussionThreads id="998">
                      <string>77-255031-1</string>
                      <string>77-255031-2</string>
                    </discussionThreads>
                    <lesson>64963</lesson>
                    <status>ready</status>
                    <block id="999">
                      <name>code</name>
                      <text>&lt;p&gt;Suppose, you write a geometric engine. Now it includes classes and interfaces &lt;code&gt;Circle&lt;/code&gt;, &lt;code&gt;Rectangle&lt;/code&gt;, &lt;code&gt;Moveable&lt;/code&gt; and &lt;code&gt;Scalable&lt;/code&gt;.&lt;/p&gt;&lt;b&gt;You need:&lt;/b&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;to write a new interface &lt;code&gt;MutableShape&lt;/code&gt; that extends both existing interfaces;&lt;br&gt;&lt;/li&gt;&lt;li&gt;to implement the new interface by each class;&lt;/li&gt;&lt;li&gt;to override methods &lt;code&gt;move&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; in both classes:&lt;ul&gt;&lt;li&gt;&lt;code&gt;scale&lt;/code&gt; should multiply the &lt;code&gt;radius&lt;/code&gt; of a circle by the specified &lt;code&gt;factor&lt;/code&gt;;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;scale&lt;/code&gt; should multiple &lt;code&gt;weight&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; of a rectangle by the specified &lt;code&gt;factor&lt;/code&gt;;&lt;/li&gt;&lt;li&gt;&lt;code&gt;move&lt;/code&gt; should add &lt;code&gt;dx&lt;/code&gt; and &lt;code&gt;dy&lt;/code&gt; to the centre of a circle;&lt;/li&gt;&lt;li&gt;&lt;code&gt;move&lt;/code&gt; should add &lt;code&gt;dx&lt;/code&gt; and &lt;code&gt;dy&lt;/code&gt; to the upper-left corner of a rectangle.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;See the provided code and read comments to understand your task better. Now the code is not compiled.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;do not remove existing classes and their members (including getters and constructors).&lt;/li&gt;&lt;li&gt;do not make your classes and interfaces &lt;code&gt;public&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;After your changes, the following code should be compiled:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;MutableShape circle = new Circle(2.0f, 3.5f, 10.1f);

circle.move(10.1f, 20.2f);&lt;br&gt;circle.scale(2.2f);

((Circle) circle).getRadius();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</text>
                      <options id="1000">
                        <samples id="1001" />
                        <codeTemplates class="LinkedTreeMap" id="1002" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>interface Moveable {

    void move(float dx, float dy);
}

interface Scalable {

    void scale(float factor);
}

final class Circle {

    /**
     * Defines the horizontal position of the center of the circle.
     */
    private float centerX;

    /**
     * Defines the radius of the circle
     */
    private float centerY;

    /**
     * Defines the radius of the circle
     */
    private float radius;

    public Circle(float centerX, float centerY, float radius) {
        this.centerX = centerX;
        this.centerY = centerY;
        this.radius = radius;
    }

    public float getCenterX() {
        return centerX;
    }

    public float getCenterY() {
        return centerY;
    }

    public float getRadius() {
        return radius;
    }
}

final class Rectangle {

    /**
     * Defines the X coordinate of the upper-left corner of the rectangle.
     */
    private float x;

    /**
     * Defines the Y coordinate of the upper-left corner of the rectangle.
     */
    private float y;

    /**
     * Defines the width of the rectangle.
     */
    private float width;

    /**
     * Defines the height of the rectangle.
     */
    private float height;

    public Rectangle(float x, float y, float w, float h) {
        this.x = x;
        this.y = y;
        this.width = w;
        this.height = h;
    }

    public float getX() {
        return x;
    }

    public float getY() {
        return y;
    }

    public float getWidth() {
        return width;
    }

    public float getHeight() {
        return height;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1003" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1004">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1005" />
                    </block>
                    <actions class="linked-hash-map" id="1006">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1007">
                      <string>31-77-255031</string>
                      <string>30-77-255031</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.625</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1008">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1009">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1010">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1011">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1012">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1013">
                  <id>56098</id>
                  <title>Interface # Account Service</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56098</progress>
                  <createDate id="1014">2017-09-12 14:46:03.0 UTC</createDate>
                  <updateDate id="1015">2018-03-14 04:57:57.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56098-1</discussionProxy>
                  <discussionThreads id="1016">
                    <string>76-56098-1</string>
                  </discussionThreads>
                  <steps id="1017">
                    <long>206641</long>
                  </steps>
                  <actions class="linked-hash-map" id="1018" />
                  <tags id="1019" />
                  <requiredTags id="1020" />
                  <playlists id="1021" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1022">
                    <string>31-76-56098</string>
                    <string>30-76-56098</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>18</passedBy>
                  <dependencies id="1023" />
                  <followers id="1024" />
                  <timeToComplete>981</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Interface-Account-Service-56098</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56098</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1025">
                <StepNode id="1026">
                  <parent class="LessonNode" reference="1008" />
                  <data class="Step" id="1027">
                    <id>206641</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206641</progress>
                    <createDate id="1028">2017-07-31 16:57:00.0 UTC</createDate>
                    <updateDate id="1029">2018-03-14 04:57:57.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206641-1</discussionProxy>
                    <discussionThreads id="1030">
                      <string>77-206641-1</string>
                      <string>77-206641-2</string>
                    </discussionThreads>
                    <lesson>56098</lesson>
                    <status>ready</status>
                    <block id="1031">
                      <name>code</name>
                      <text>&lt;p&gt;Given an interface named &lt;code&gt;AccountService&lt;/code&gt;. The interface has two abstract methods:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;findAccountByOwnerId(long id)&lt;/code&gt; returns &lt;code&gt;Account&lt;/code&gt; found by owner id or &lt;code&gt;null&lt;/code&gt;.&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;countAccountsWithBalanceGreaterThan(long balance)&lt;/code&gt; returns number of accounts with the balance greater than the passed value.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also there are two another classes: &lt;code&gt;Account&lt;/code&gt; (id, balance, owner) and &lt;code&gt;User&lt;/code&gt; (id, firstName, lastName). See the provided code template.&lt;/p&gt;&lt;p&gt;You need to implement the &lt;code&gt;AccountService&lt;/code&gt; interface and its two methods. Your implementation must be named &lt;code&gt;AccountServiceImpl&lt;/code&gt;. It should have a constructor with one argument - an array of accounts. The implementation must keep the array inside. The first method should search an account by owner id in the array, the second one - count number of accounts by condition in the array.&lt;/p&gt;&lt;p&gt;An example of creating an instance:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Account[] accounts = ...&lt;br&gt;AccountService service = new AccountServiceImpl(accounts);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not make classes and the interface &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="1032">
                        <samples id="1033" />
                        <codeTemplates class="LinkedTreeMap" id="1034" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>interface AccountService {
    /**
     * It finds an account by owner id
     * @param id owner unique identifier
     * @return account or null
     */
    Account findAccountByOwnerId(long id);
    /**
     * It count the number of account with balance &gt; the given value
     * @param value
     * @return the number of accounts
     */
    long countAccountsWithBalanceGreaterThan(long value);
}

// Declare and implement your AccountServiceImpl here

class Account {

    private long id;
    private long balance;
    private User owner;

    public Account(long id, long balance, User owner) {
        this.id = id;
        this.balance = balance;
        this.owner = owner;
    }

    public long getId() { return id; }

    public long getBalance() { return balance; }

    public User getOwner() { return owner; }
}

class User {

    private long id;
    private String firstName;
    private String lastName;

    public User(long id, String firstName, String lastName) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public long getId() { return id; }

    public String getFirstName() { return firstName; }

    public String getLastName() { return lastName; }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1035" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1036">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1037" />
                    </block>
                    <actions class="linked-hash-map" id="1038">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1039">
                      <string>31-77-206641</string>
                      <string>30-77-206641</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>35</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.2916666666666667</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1040">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1041">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1042">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1043">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1044">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1045">
                  <id>55999</id>
                  <title>Iterating over arrays # Check if an array is sorted ascending</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55999</progress>
                  <createDate id="1046">2017-09-12 14:45:26.0 UTC</createDate>
                  <updateDate id="1047">2018-02-26 03:47:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55999-1</discussionProxy>
                  <discussionThreads id="1048">
                    <string>76-55999-1</string>
                  </discussionThreads>
                  <steps id="1049">
                    <long>216242</long>
                  </steps>
                  <actions class="linked-hash-map" id="1050" />
                  <tags id="1051" />
                  <requiredTags id="1052" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1053">
                    <string>31-76-55999</string>
                    <string>30-76-55999</string>
                  </subscriptions>
                  <viewedBy>36</viewedBy>
                  <passedBy>30</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>544</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Check-if-an-array-is-sorted-ascending-55999</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55999</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1054">
                <StepNode id="1055">
                  <parent class="LessonNode" reference="1040" />
                  <data class="Step" id="1056">
                    <id>216242</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216242</progress>
                    <createDate id="1057">2017-09-04 02:35:25.0 UTC</createDate>
                    <updateDate id="1058">2018-02-26 03:47:29.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216242-1</discussionProxy>
                    <discussionThreads id="1059">
                      <string>77-216242-1</string>
                      <string>77-216242-2</string>
                    </discussionThreads>
                    <lesson>55999</lesson>
                    <status>ready</status>
                    <block id="1060">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that reads an array of int's and checks the array is sorted ascending (from smallest to largest number).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;The first line contains the size of an array.&lt;br&gt;The second line contains elements of the array separated by spaces.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;Only a single value: &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="1061">
                        <samples id="1062">
                          <Sample id="1063">&lt;input&gt;4
1 2 3 4
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="1064">&lt;input&gt;4
1 2 3 0
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1065" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1066" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="1067">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1068" />
                    </block>
                    <actions class="linked-hash-map" id="1069">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1070">
                      <string>31-77-216242</string>
                      <string>30-77-216242</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>36</viewedBy>
                    <passedBy>30</passedBy>
                    <correctRatio>0.43661971830985913</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1071">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1072">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1073">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1074">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1075">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1076">
                  <id>55991</id>
                  <title>Iterating over arrays # Count how many times a number occurs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55991</progress>
                  <createDate id="1077">2017-09-12 14:45:23.0 UTC</createDate>
                  <updateDate id="1078">2018-02-04 17:16:24.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55991-1</discussionProxy>
                  <discussionThreads id="1079">
                    <string>76-55991-1</string>
                  </discussionThreads>
                  <steps id="1080">
                    <long>216234</long>
                  </steps>
                  <actions class="linked-hash-map" id="1081" />
                  <tags id="1082" />
                  <requiredTags id="1083" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1084">
                    <string>31-76-55991</string>
                    <string>30-76-55991</string>
                  </subscriptions>
                  <viewedBy>37</viewedBy>
                  <passedBy>31</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>223</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Count-how-many-times-a-number-occurs-55991</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55991</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1085">
                <StepNode id="1086">
                  <parent class="LessonNode" reference="1071" />
                  <data class="Step" id="1087">
                    <id>216234</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216234</progress>
                    <createDate id="1088">2017-09-04 01:31:21.0 UTC</createDate>
                    <updateDate id="1089">2018-02-04 16:39:48.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216234-1</discussionProxy>
                    <discussionThreads id="1090">
                      <string>77-216234-1</string>
                      <string>77-216234-2</string>
                    </discussionThreads>
                    <lesson>55991</lesson>
                    <status>ready</status>
                    <block id="1091">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that read an array of ints and an integer number &lt;b&gt;n&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The program must check how many times n occurs in the array.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;The first line contains the size of the input array.&lt;/div&gt;&lt;div&gt;The second line contains elements of the array separated by spaces.&lt;br&gt;The third line contains &lt;b&gt;n&lt;/b&gt;.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The result is only a single non-negative integer number.&lt;/div&gt;</text>
                      <options id="1092">
                        <samples id="1093">
                          <Sample id="1094">&lt;input&gt;6
1 2 3 4 2 1
2
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1095" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1096" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="1097">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1098" />
                    </block>
                    <actions class="linked-hash-map" id="1099">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1100">
                      <string>31-77-216234</string>
                      <string>30-77-216234</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>37</viewedBy>
                    <passedBy>31</passedBy>
                    <correctRatio>0.4852941176470588</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1101">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1102">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1103">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1104">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1105">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1106">
                  <id>57484</id>
                  <title>Exception handling # Catching exceptions of custom types</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57484</progress>
                  <createDate id="1107">2017-09-26 04:30:06.0 UTC</createDate>
                  <updateDate id="1108">2018-02-18 13:58:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57484-1</discussionProxy>
                  <discussionThreads id="1109">
                    <string>76-57484-1</string>
                  </discussionThreads>
                  <steps id="1110">
                    <long>225148</long>
                  </steps>
                  <actions class="linked-hash-map" id="1111" />
                  <tags id="1112" />
                  <requiredTags id="1113" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1114">
                    <string>31-76-57484</string>
                    <string>30-76-57484</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>621</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Exception-handling-Catching-exceptions-of-custom-types-57484</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57484</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1115">
                <StepNode id="1116">
                  <parent class="LessonNode" reference="1101" />
                  <data class="Step" id="1117">
                    <id>225148</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-225148</progress>
                    <createDate id="1118">2017-09-26 09:50:36.0 UTC</createDate>
                    <updateDate id="1119">2018-02-18 13:58:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-225148-1</discussionProxy>
                    <discussionThreads id="1120">
                      <string>77-225148-1</string>
                      <string>77-225148-2</string>
                    </discussionThreads>
                    <lesson>57484</lesson>
                    <status>ready</status>
                    <block id="1121">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given two methods: &lt;/span&gt;&lt;b&gt;methodThrowingExceptions &lt;/b&gt;&lt;span&gt;and &lt;/span&gt;&lt;b&gt;methodCatchingSomeExceptions.&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first method throws checked exceptions of different types. Here is its declaration:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;public static void methodThrowingExceptions() throws RootException&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Here is &lt;b&gt;RootException&lt;/b&gt; and its subclasses:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;class RootException extends Exception { }&lt;br&gt;&lt;br&gt;class AException extends RootException { }&lt;br&gt;&lt;br&gt;class BException extends AException { }&lt;br&gt;&lt;br&gt;class CException extends AException { }&lt;br&gt;&lt;br&gt;class DException extends RootException { }&lt;/code&gt;&lt;/pre&gt; &lt;br&gt;&lt;/div&gt;&lt;div&gt;Implement the second method. It must invoke the first method and catch custom checked exceptions. When the method catches an exception it prints a text to the standard output.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Here are rules for exception handling:&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;when the method catches AException or BException it must print &quot;A OR B&quot;&lt;br&gt;&lt;/li&gt;&lt;li&gt;when the method catches CException it must print &quot;C&quot;&lt;/li&gt;&lt;li&gt;when the method catches DException or RootException it must print &quot;ROOT OR D&quot;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For example, &lt;b&gt;methodCatchingSomeExceptions&lt;/b&gt; caught &lt;b&gt;BException&lt;/b&gt;. In this case, it should print:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;A OR B&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Implement the listen rules using the exception handling mechanism (&lt;b&gt;try-catch&lt;/b&gt;). Write as little as possible catch blocks.&lt;/div&gt;</text>
                      <options id="1122">
                        <samples id="1123" />
                        <codeTemplates class="LinkedTreeMap" id="1124" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void methodCatchingExceptions() {
    // rewrite the method body using the given rules

    try {
        methodThrowingExceptions();
    } catch (RootException e) {
        System.out.println(&quot;SOME MESSAGE&quot;);
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1125" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1126">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1127" />
                    </block>
                    <actions class="linked-hash-map" id="1128">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1129">
                      <string>31-77-225148</string>
                      <string>30-77-225148</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.38235294117647056</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1130">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1131">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1132">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1133">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1134">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1135">
                  <id>57483</id>
                  <title>Exception handling # Catching exceptions of the specified types</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57483</progress>
                  <createDate id="1136">2017-09-26 04:30:01.0 UTC</createDate>
                  <updateDate id="1137">2018-02-18 13:57:42.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57483-1</discussionProxy>
                  <discussionThreads id="1138">
                    <string>76-57483-1</string>
                  </discussionThreads>
                  <steps id="1139">
                    <long>225115</long>
                  </steps>
                  <actions class="linked-hash-map" id="1140" />
                  <tags id="1141" />
                  <requiredTags id="1142" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1143">
                    <string>31-76-57483</string>
                    <string>30-76-57483</string>
                  </subscriptions>
                  <viewedBy>25</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>360</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Exception-handling-Catching-exceptions-of-the-specified-types-57483</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57483</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1144">
                <StepNode id="1145">
                  <parent class="LessonNode" reference="1130" />
                  <data class="Step" id="1146">
                    <id>225115</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-225115</progress>
                    <createDate id="1147">2017-09-26 06:39:54.0 UTC</createDate>
                    <updateDate id="1148">2018-02-18 13:57:41.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-225115-1</discussionProxy>
                    <discussionThreads id="1149">
                      <string>77-225115-1</string>
                      <string>77-225115-2</string>
                    </discussionThreads>
                    <lesson>57483</lesson>
                    <status>ready</status>
                    <block id="1150">
                      <name>code</name>
                      <text>&lt;div&gt;Given two methods: &lt;code&gt;methodThrowingExceptions&lt;/code&gt; and &lt;code&gt;methodCatchingSomeExceptions&lt;/code&gt;.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first method throws unchecked exceptions of different types.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Implement the second method. It must call the first method and catch only two types of exceptions:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;IndexOutOfBoundsException&lt;br&gt;&lt;/li&gt;&lt;li&gt;NumberFormatException&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Inside the catch block (or blocks) you should print the name of the handled exception class (only name, without packages) in the standard input, like:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;IndexOutOfBoundsException&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Other types of exception must not be caught in &lt;b&gt;methodCatchingSomeExceptions&lt;/b&gt;.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="1151">
                        <samples id="1152" />
                        <codeTemplates class="LinkedTreeMap" id="1153" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void methodCatchingSomeExceptions() {
    // invoke methodThrowingExceptions here and catch some types of exceptions
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1154" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1155">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1156" />
                    </block>
                    <actions class="linked-hash-map" id="1157">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1158">
                      <string>31-77-225115</string>
                      <string>30-77-225115</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>25</viewedBy>
                    <passedBy>19</passedBy>
                    <correctRatio>0.37735849056603776</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1159">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1160">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1161">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1162">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1163">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1164">
                  <id>55990</id>
                  <title>Iterating over arrays # Does an array contain N?</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55990</progress>
                  <createDate id="1165">2017-09-12 14:45:23.0 UTC</createDate>
                  <updateDate id="1166">2018-02-04 16:32:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55990-1</discussionProxy>
                  <discussionThreads id="1167">
                    <string>76-55990-1</string>
                  </discussionThreads>
                  <steps id="1168">
                    <long>216233</long>
                  </steps>
                  <actions class="linked-hash-map" id="1169" />
                  <tags id="1170" />
                  <requiredTags id="1171" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1172">
                    <string>31-76-55990</string>
                    <string>30-76-55990</string>
                  </subscriptions>
                  <viewedBy>36</viewedBy>
                  <passedBy>29</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>236</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Does-an-array-contain-N-55990</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55990</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1173">
                <StepNode id="1174">
                  <parent class="LessonNode" reference="1159" />
                  <data class="Step" id="1175">
                    <id>216233</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216233</progress>
                    <createDate id="1176">2017-09-04 01:25:15.0 UTC</createDate>
                    <updateDate id="1177">2018-02-04 16:32:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216233-1</discussionProxy>
                    <discussionThreads id="1178">
                      <string>77-216233-1</string>
                      <string>77-216233-2</string>
                    </discussionThreads>
                    <lesson>55990</lesson>
                    <status>ready</status>
                    <block id="1179">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;div&gt;Write a program that reads an array of integers and an integer number &lt;b&gt;n&lt;/b&gt;. The program must check that array contain &lt;b&gt;n&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the size of an array.&lt;/div&gt;&lt;div&gt;The second line contains elements of the array separated by the space.&lt;br&gt;&lt;/div&gt;&lt;div&gt;The third line contains one integer number &lt;b&gt;n&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Only a single value: &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="1180">
                        <samples id="1181">
                          <Sample id="1182">&lt;input&gt;3
1 3 2
3
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="1183">&lt;input&gt;5
1 3 2 5 4
7
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1184" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1185" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="1186">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1187" />
                    </block>
                    <actions class="linked-hash-map" id="1188">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1189">
                      <string>31-77-216233</string>
                      <string>30-77-216233</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>43</viewedBy>
                    <passedBy>36</passedBy>
                    <correctRatio>0.4111111111111111</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1190">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1191">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1192">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1193">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1194">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1195">
                  <id>56116</id>
                  <title>List # Converting the list - 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56116</progress>
                  <createDate id="1196">2017-09-12 14:46:10.0 UTC</createDate>
                  <updateDate id="1197">2018-02-18 04:40:20.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56116-1</discussionProxy>
                  <discussionThreads id="1198">
                    <string>76-56116-1</string>
                  </discussionThreads>
                  <steps id="1199">
                    <long>211696</long>
                  </steps>
                  <actions class="linked-hash-map" id="1200" />
                  <tags id="1201" />
                  <requiredTags id="1202" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1203">
                    <string>31-76-56116</string>
                    <string>30-76-56116</string>
                  </subscriptions>
                  <viewedBy>40</viewedBy>
                  <passedBy>33</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>143</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Converting-the-list-2-56116</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56116</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1204">
                <StepNode id="1205">
                  <parent class="LessonNode" reference="1190" />
                  <data class="Step" id="1206">
                    <id>211696</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211696</progress>
                    <createDate id="1207">2017-08-26 12:20:34.0 UTC</createDate>
                    <updateDate id="1208">2018-02-18 04:40:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211696-1</discussionProxy>
                    <discussionThreads id="1209">
                      <string>77-211696-1</string>
                      <string>77-211696-2</string>
                    </discussionThreads>
                    <lesson>56116</lesson>
                    <status>ready</status>
                    <block id="1210">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;The list of GreekLetter objects is given.&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span&gt; &lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;List&amp;lt;GreekLetter&amp;gt; letterList = new ArrayList&amp;lt;&amp;gt;();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;b&gt;&lt;/b&gt;Convert it to the object array by name &lt;span class=&quot;wysiwyg-color-red&quot;&gt;objArray&lt;/span&gt;.&lt;b&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt; &lt;/b&gt;The code for displaying the array is already written. &lt;b&gt;&lt;/b&gt;&lt;br&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="1211">
                        <samples id="1212">
                          <Sample id="1213">&lt;input&gt;&lt;/input&gt;&lt;output&gt;{letter='Gamma', position=3}
{letter='Omega', position=24}
{letter='Alpha', position=1}
&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1214" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {

        List&lt;GreekLetter&gt; letterList = new ArrayList&lt;&gt;();
        letterList.add(new GreekLetter(&quot;Gamma&quot;,  3));
        letterList.add(new GreekLetter(&quot;Omega&quot;, 24));
        letterList.add(new GreekLetter(&quot;Alpha&quot;,  1));


        //write your code here


        for (int i = 0; i &lt; objArray.length; i++) {
            System.out.println(objArray[i]);
        }        
    }

    static class GreekLetter {

        private String letter;
        private Integer position;

        public GreekLetter(String letter, Integer position) {
            this.letter = letter;
            this.position = position;
        }

        @Override
        public String toString() {
            return &quot;{&quot; +
                    &quot;letter='&quot; + letter + '\'' +
                    &quot;, position=&quot; + position +
                    '}';
        }
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1215" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1216">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1217" />
                    </block>
                    <actions class="linked-hash-map" id="1218">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1219">
                      <string>31-77-211696</string>
                      <string>30-77-211696</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>40</viewedBy>
                    <passedBy>33</passedBy>
                    <correctRatio>0.7291666666666666</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1220">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1221">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1222">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1223">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1224">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1225">
                  <id>57715</id>
                  <title>List # Check the value occurs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57715</progress>
                  <createDate id="1226">2017-09-29 17:34:20.0 UTC</createDate>
                  <updateDate id="1227">2018-02-18 05:02:24.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57715-1</discussionProxy>
                  <discussionThreads id="1228">
                    <string>76-57715-1</string>
                  </discussionThreads>
                  <steps id="1229">
                    <long>226169</long>
                  </steps>
                  <actions class="linked-hash-map" id="1230" />
                  <tags id="1231" />
                  <requiredTags id="1232" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1233">
                    <string>31-76-57715</string>
                    <string>30-76-57715</string>
                  </subscriptions>
                  <viewedBy>26</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>672</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Check-the-value-occurs-57715</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57715</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1234">
                <StepNode id="1235">
                  <parent class="LessonNode" reference="1220" />
                  <data class="Step" id="1236">
                    <id>226169</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-226169</progress>
                    <createDate id="1237">2017-09-29 17:41:33.0 UTC</createDate>
                    <updateDate id="1238">2017-09-29 18:57:04.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-226169-1</discussionProxy>
                    <discussionThreads id="1239">
                      <string>77-226169-1</string>
                      <string>77-226169-2</string>
                    </discussionThreads>
                    <lesson>57715</lesson>
                    <status>ready</status>
                    <block id="1240">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Implement a method that takes an integer value and two lists of numbers. It must check the value occurs the same number of times in both sequences.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;In the following input example, the first line contains the value, the second line is one list, the third line is another list. All numbers are separated by whitespaces.&lt;/p&gt;</text>
                      <options id="1241">
                        <samples id="1242">
                          <Sample id="1243">&lt;input&gt;3
8 8 3 3 2
1 3 3 2
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1244" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static boolean checkTheSameNumberOfTimes(int elem, List&lt;Integer&gt; list1, List&lt;Integer&gt; list2) {
    // implement the method
    return false;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1245" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1246">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1247" />
                    </block>
                    <actions class="linked-hash-map" id="1248">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1249">
                      <string>31-77-226169</string>
                      <string>30-77-226169</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>26</viewedBy>
                    <passedBy>19</passedBy>
                    <correctRatio>0.28</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1250">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1251">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1252">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1253">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1254">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1255">
                  <id>57740</id>
                  <title>List # Companies</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57740</progress>
                  <createDate id="1256">2017-09-29 19:06:00.0 UTC</createDate>
                  <updateDate id="1257">2018-02-18 05:03:25.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57740-1</discussionProxy>
                  <discussionThreads id="1258">
                    <string>76-57740-1</string>
                  </discussionThreads>
                  <steps id="1259">
                    <long>226367</long>
                  </steps>
                  <actions class="linked-hash-map" id="1260" />
                  <tags id="1261" />
                  <requiredTags id="1262" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1263">
                    <string>31-76-57740</string>
                    <string>30-76-57740</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>644</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Companies-57740</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57740</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1264">
                <StepNode id="1265">
                  <parent class="LessonNode" reference="1250" />
                  <data class="Step" id="1266">
                    <id>226367</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-226367</progress>
                    <createDate id="1267">2017-09-29 19:09:45.0 UTC</createDate>
                    <updateDate id="1268">2018-02-18 05:03:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-226367-1</discussionProxy>
                    <discussionThreads id="1269">
                      <string>77-226367-1</string>
                      <string>77-226367-2</string>
                    </discussionThreads>
                    <lesson>57740</lesson>
                    <status>ready</status>
                    <block id="1270">
                      <name>code</name>
                      <text>&lt;p&gt;Given a sequence of strings separated by spaces. Read the sequence from the standard input and store all strings to the list. Output the list to the standard output using &lt;code&gt;System.out.println(yourList)&lt;/code&gt;. &lt;span&gt;The order of elements must be the same as in the input.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="1271">
                        <samples id="1272">
                          <Sample id="1273">&lt;input&gt;Google Oracle JetBrains
&lt;/input&gt;&lt;output&gt;[Google, Oracle, JetBrains]&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1274" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1275" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1276">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1277" />
                    </block>
                    <actions class="linked-hash-map" id="1278">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1279">
                      <string>31-77-226367</string>
                      <string>30-77-226367</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>19</passedBy>
                    <correctRatio>0.2702702702702703</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1280">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1281">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1282">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1283">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1284">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1285">
                  <id>56115</id>
                  <title>List # Converting the list - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56115</progress>
                  <createDate id="1286">2017-09-12 14:46:10.0 UTC</createDate>
                  <updateDate id="1287">2018-02-18 04:39:23.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56115-1</discussionProxy>
                  <discussionThreads id="1288">
                    <string>76-56115-1</string>
                  </discussionThreads>
                  <steps id="1289">
                    <long>211695</long>
                  </steps>
                  <actions class="linked-hash-map" id="1290" />
                  <tags id="1291" />
                  <requiredTags id="1292" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1293">
                    <string>31-76-56115</string>
                    <string>30-76-56115</string>
                  </subscriptions>
                  <viewedBy>35</viewedBy>
                  <passedBy>28</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>172</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Converting-the-list-1-56115</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56115</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1294">
                <StepNode id="1295">
                  <parent class="LessonNode" reference="1280" />
                  <data class="Step" id="1296">
                    <id>211695</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211695</progress>
                    <createDate id="1297">2017-08-26 12:20:34.0 UTC</createDate>
                    <updateDate id="1298">2018-02-18 04:39:22.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211695-1</discussionProxy>
                    <discussionThreads id="1299">
                      <string>77-211695-1</string>
                      <string>77-211695-2</string>
                    </discussionThreads>
                    <lesson>56115</lesson>
                    <status>ready</status>
                    <block id="1300">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;The list of strings is given.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;List&amp;lt;String&amp;gt; nameList = new ArrayList&amp;lt;&amp;gt;(Arrays.asList(&quot;Mr.Green&quot;, &quot;Mr.Yellow&quot;, &quot;Mr.Red&quot;));&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;b&gt;&lt;/b&gt;Convert it to the string array by name &lt;span class=&quot;wysiwyg-color-red&quot;&gt;strArray&lt;/span&gt;.&lt;br&gt;&lt;br&gt;The code for displaying the array is already written.&lt;b&gt;&lt;br&gt;&lt;/b&gt; &lt;br&gt;</text>
                      <options id="1301">
                        <samples id="1302">
                          <Sample id="1303">&lt;input&gt;&lt;/input&gt;&lt;output&gt;Mr.Green
Mr.Yellow
Mr.Red
&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1304" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {

        List&lt;String&gt; nameList = new ArrayList&lt;&gt;(Arrays.asList(&quot;Mr.Green&quot;, &quot;Mr.Yellow&quot;, &quot;Mr.Red&quot;));


        //write your code here


        for (int i = 0; i &lt; strArray.length; i++) {
            System.out.println(strArray[i]);
        }        

    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1305" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1306">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1307" />
                    </block>
                    <actions class="linked-hash-map" id="1308">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1309">
                      <string>31-77-211695</string>
                      <string>30-77-211695</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>35</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.5423728813559322</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1310">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1311">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1312">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1313">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1314">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1315">
                  <id>56117</id>
                  <title>List # Filtering the list</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56117</progress>
                  <createDate id="1316">2017-09-12 14:46:10.0 UTC</createDate>
                  <updateDate id="1317">2018-03-20 19:29:57.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-56117-1</discussionProxy>
                  <discussionThreads id="1318">
                    <string>76-56117-1</string>
                  </discussionThreads>
                  <steps id="1319">
                    <long>211715</long>
                  </steps>
                  <actions class="linked-hash-map" id="1320" />
                  <tags id="1321" />
                  <requiredTags id="1322" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1323">
                    <string>31-76-56117</string>
                    <string>30-76-56117</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1472</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Filtering-the-list-56117</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56117</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1324">
                <StepNode id="1325">
                  <parent class="LessonNode" reference="1310" />
                  <data class="Step" id="1326">
                    <id>211715</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211715</progress>
                    <createDate id="1327">2017-08-26 13:53:20.0 UTC</createDate>
                    <updateDate id="1328">2018-03-20 19:29:56.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-211715-1</discussionProxy>
                    <discussionThreads id="1329">
                      <string>77-211715-1</string>
                      <string>77-211715-2</string>
                    </discussionThreads>
                    <lesson>56117</lesson>
                    <status>ready</status>
                    <block id="1330">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that reads the list of integer number separated by spaces from the standard input and then remove all numbers with even indexes (0, 2, 4, and so on). After, the program should output the result sequence in the reverse order.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="1331">
                        <samples id="1332">
                          <Sample id="1333">&lt;input&gt;1 2 3 4 5 6 7&lt;/input&gt;&lt;output&gt;6 4 2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1334" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public class Main {
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1335" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1336">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1337" />
                    </block>
                    <actions class="linked-hash-map" id="1338">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1339">
                      <string>31-77-211715</string>
                      <string>30-77-211715</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.09836065573770492</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1340">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1341">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1342">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1343">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1344">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1345">
                  <id>56114</id>
                  <title>List # Output the list's elements</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56114</progress>
                  <createDate id="1346">2017-09-12 14:46:09.0 UTC</createDate>
                  <updateDate id="1347">2018-02-18 04:38:05.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56114-1</discussionProxy>
                  <discussionThreads id="1348">
                    <string>76-56114-1</string>
                  </discussionThreads>
                  <steps id="1349">
                    <long>211692</long>
                  </steps>
                  <actions class="linked-hash-map" id="1350" />
                  <tags id="1351" />
                  <requiredTags id="1352" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1353">
                    <string>31-76-56114</string>
                    <string>30-76-56114</string>
                  </subscriptions>
                  <viewedBy>31</viewedBy>
                  <passedBy>27</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>84</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Output-the-lists-elements-56114</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56114</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1354">
                <StepNode id="1355">
                  <parent class="LessonNode" reference="1340" />
                  <data class="Step" id="1356">
                    <id>211692</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211692</progress>
                    <createDate id="1357">2017-08-26 12:20:01.0 UTC</createDate>
                    <updateDate id="1358">2018-02-18 04:38:04.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211692-1</discussionProxy>
                    <discussionThreads id="1359">
                      <string>77-211692-1</string>
                      <string>77-211692-2</string>
                    </discussionThreads>
                    <lesson>56114</lesson>
                    <status>ready</status>
                    <block id="1360">
                      <name>code</name>
                      <text>&lt;p&gt;The list of strings is given.&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;List&amp;lt;String&amp;gt; nameList = new ArrayList&amp;lt;&amp;gt;(Arrays.asList(&quot;Mr.Green&quot;, &quot;Mr.Yellow&quot;, &quot;Mr.Red&quot;));&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;Output each its element in the loop. Each element must be in new line.&lt;/p&gt;</text>
                      <options id="1361">
                        <samples id="1362">
                          <Sample id="1363">&lt;input&gt;&lt;/input&gt;&lt;output&gt;Mr.Green
Mr.Yellow
Mr.Red
&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1364" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {


        List&lt;String&gt; nameList = new ArrayList&lt;&gt;(Arrays.asList(&quot;Mr.Green&quot;, &quot;Mr.Yellow&quot;, &quot;Mr.Red&quot;));

        //write your code here


    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1365" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1366">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1367" />
                    </block>
                    <actions class="linked-hash-map" id="1368">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1369">
                      <string>31-77-211692</string>
                      <string>30-77-211692</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>31</viewedBy>
                    <passedBy>27</passedBy>
                    <correctRatio>0.6666666666666666</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1370">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1371">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1372">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1373">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1374">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <assignments id="1375" />
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1376">
                  <id>56119</id>
                  <title>List # Processing lists</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56119</progress>
                  <createDate id="1377">2017-09-12 14:46:11.0 UTC</createDate>
                  <updateDate id="1378">2018-02-18 04:57:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56119-1</discussionProxy>
                  <discussionThreads id="1379">
                    <string>76-56119-1</string>
                  </discussionThreads>
                  <steps id="1380">
                    <long>211694</long>
                  </steps>
                  <actions class="linked-hash-map" id="1381" />
                  <tags id="1382" />
                  <requiredTags id="1383" />
                  <playlists id="1384" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1385">
                    <string>31-76-56119</string>
                    <string>30-76-56119</string>
                  </subscriptions>
                  <viewedBy>20</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies id="1386" />
                  <followers id="1387" />
                  <timeToComplete>833</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Processing-lists-56119</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56119</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1388">
                <StepNode id="1389">
                  <parent class="LessonNode" reference="1370" />
                  <data class="Step" id="1390">
                    <id>211694</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211694</progress>
                    <createDate id="1391">2017-08-26 12:20:33.0 UTC</createDate>
                    <updateDate id="1392">2017-09-12 14:46:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211694-1</discussionProxy>
                    <discussionThreads id="1393">
                      <string>77-211694-1</string>
                      <string>77-211694-2</string>
                    </discussionThreads>
                    <lesson>56119</lesson>
                    <status>ready</status>
                    <block id="1394">
                      <name>code</name>
                      <text>&lt;pre&gt;&lt;pre&gt;&lt;b&gt;Processing lists&lt;/b&gt;

Given a string like &quot;1 2 3 4 5....&quot;. reader read this string.

1.Separate elements with a space from str;
2.add all this numbers to head of Linkedlist;
3.remove 3 times the element at index 0;
4.sort the resulting list in ascending order and print all of its elements each on a new line;&lt;/pre&gt;&lt;/pre&gt;</text>
                      <options id="1395">
                        <samples id="1396">
                          <Sample id="1397">&lt;input&gt;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
&lt;/input&gt;&lt;output&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1398" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    String str = reader.readLine();
    LinkedList&lt;Integer&gt; ll;
    //your code


}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1399" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1400">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1401" />
                    </block>
                    <actions class="linked-hash-map" id="1402">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1403">
                      <string>31-77-211694</string>
                      <string>30-77-211694</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.18518518518518517</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1404">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1405">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1406">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1407">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1408">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1409">
                  <id>56119</id>
                  <title>List # Processing lists</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56119</progress>
                  <createDate id="1410">2017-09-12 14:46:11.0 UTC</createDate>
                  <updateDate id="1411">2018-02-18 04:57:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56119-1</discussionProxy>
                  <discussionThreads id="1412">
                    <string>76-56119-1</string>
                  </discussionThreads>
                  <steps id="1413">
                    <long>211694</long>
                  </steps>
                  <actions class="linked-hash-map" id="1414" />
                  <tags id="1415" />
                  <requiredTags id="1416" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1417">
                    <string>31-76-56119</string>
                    <string>30-76-56119</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1556</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Processing-lists-56119</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56119</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1418">
                <StepNode id="1419">
                  <parent class="LessonNode" reference="1404" />
                  <data class="Step" id="1420">
                    <id>211694</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211694</progress>
                    <createDate id="1421">2017-08-26 12:20:33.0 UTC</createDate>
                    <updateDate id="1422">2017-09-12 14:46:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211694-1</discussionProxy>
                    <discussionThreads id="1423">
                      <string>77-211694-1</string>
                      <string>77-211694-2</string>
                    </discussionThreads>
                    <lesson>56119</lesson>
                    <status>ready</status>
                    <block id="1424">
                      <name>code</name>
                      <text>&lt;pre&gt;&lt;pre&gt;&lt;b&gt;Processing lists&lt;/b&gt;

Given a string like &quot;1 2 3 4 5....&quot;. reader read this string.

1.Separate elements with a space from str;
2.add all this numbers to head of Linkedlist;
3.remove 3 times the element at index 0;
4.sort the resulting list in ascending order and print all of its elements each on a new line;&lt;/pre&gt;&lt;/pre&gt;</text>
                      <options id="1425">
                        <samples id="1426">
                          <Sample id="1427">&lt;input&gt;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
&lt;/input&gt;&lt;output&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1428" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    String str = reader.readLine();
    LinkedList&lt;Integer&gt; ll;
    //your code


}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1429" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1430">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1431" />
                    </block>
                    <actions class="linked-hash-map" id="1432">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1433">
                      <string>31-77-211694</string>
                      <string>30-77-211694</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.18518518518518517</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1434">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1435">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1436">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1437">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1438">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1439">
                  <id>56121</id>
                  <title>List # Split a list into sublists</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56121</progress>
                  <createDate id="1440">2017-09-12 14:46:12.0 UTC</createDate>
                  <updateDate id="1441">2018-02-18 05:00:18.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-56121-1</discussionProxy>
                  <discussionThreads id="1442">
                    <string>76-56121-1</string>
                  </discussionThreads>
                  <steps id="1443">
                    <long>214719</long>
                  </steps>
                  <actions class="linked-hash-map" id="1444" />
                  <tags id="1445" />
                  <requiredTags id="1446" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1447">
                    <string>31-76-56121</string>
                    <string>30-76-56121</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>18</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1709</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-Split-a-list-into-sublists-56121</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56121</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1448">
                <StepNode id="1449">
                  <parent class="LessonNode" reference="1434" />
                  <data class="Step" id="1450">
                    <id>214719</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-214719</progress>
                    <createDate id="1451">2017-08-30 06:15:59.0 UTC</createDate>
                    <updateDate id="1452">2018-02-18 05:00:17.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-214719-1</discussionProxy>
                    <discussionThreads id="1453">
                      <string>77-214719-1</string>
                      <string>77-214719-2</string>
                    </discussionThreads>
                    <lesson>56121</lesson>
                    <status>ready</status>
                    <block id="1454">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Implement a method for splitting (partitioning) a generic list into sublists. The methods takes two arguments: a generic list and a size of sublists. The specified size of sublists can be greater than the size of the given list.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Each sublist except the last one must have the specified size. The last sublist can have smaller number of elements.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Example 1&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the input list: [1, 2, 3, 4, 5, 6, 7]&lt;/li&gt;&lt;li&gt;the specified size of sublists: 4&lt;/li&gt;&lt;li&gt;in this case, the implemented method should return the following list of sublists: [[1, 2, 3, 4], [5, 6, 7]]&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Example 2&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the input list: [7, 4, 3, 2, 8, 1]&lt;/li&gt;&lt;li&gt;the specified size of sublists: 8&lt;/li&gt;&lt;li&gt;in this case, the implemented method should return a list consisting of one sublist: [[7, 4, 3, 2, 8, 1]]&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;</text>
                      <options id="1455">
                        <samples id="1456" />
                        <codeTemplates class="LinkedTreeMap" id="1457" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static &lt;T&gt; List&lt;List&lt;T&gt;&gt; splitListIntoSubLists(List&lt;T&gt; list, int subListSize) {
    List&lt;List&lt;T&gt;&gt; sublists = new ArrayList&lt;&gt;();

    // write your code here

    return sublists;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1458" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1459">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1460" />
                    </block>
                    <actions class="linked-hash-map" id="1461">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1462">
                      <string>31-77-214719</string>
                      <string>30-77-214719</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>18</passedBy>
                    <correctRatio>0.18421052631578946</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1463">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1464">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1465">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1466">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1467">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1468">
                  <id>56118</id>
                  <title>List # The longest string in the list</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56118</progress>
                  <createDate id="1469">2017-09-12 14:46:11.0 UTC</createDate>
                  <updateDate id="1470">2018-02-18 04:44:08.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56118-1</discussionProxy>
                  <discussionThreads id="1471">
                    <string>76-56118-1</string>
                  </discussionThreads>
                  <steps id="1472">
                    <long>211693</long>
                  </steps>
                  <actions class="linked-hash-map" id="1473" />
                  <tags id="1474" />
                  <requiredTags id="1475" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1476">
                    <string>31-76-56118</string>
                    <string>30-76-56118</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1132</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>List-The-longest-string-in-the-list-56118</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56118</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1477">
                <StepNode id="1478">
                  <parent class="LessonNode" reference="1463" />
                  <data class="Step" id="1479">
                    <id>211693</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211693</progress>
                    <createDate id="1480">2017-08-26 12:20:33.0 UTC</createDate>
                    <updateDate id="1481">2018-01-07 17:46:40.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211693-1</discussionProxy>
                    <discussionThreads id="1482">
                      <string>77-211693-1</string>
                      <string>77-211693-2</string>
                    </discussionThreads>
                    <lesson>56118</lesson>
                    <status>ready</status>
                    <block id="1483">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;b&gt;The longest string in the list&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Inside the given method you should:&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;find the longest string in the list&lt;/li&gt;&lt;li&gt;replace all list items with the found string&lt;/li&gt;&lt;li&gt;return the modified list&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="1484">
                        <samples id="1485">
                          <Sample id="1486">&lt;input&gt;hi hello goodmorning&lt;/input&gt;&lt;output&gt;goodmorning
goodmorning
goodmorning&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1487" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>static List&lt;String&gt; changeList(List&lt;String&gt; list){
    //paste your code here

    return list;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1488" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1489">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1490" />
                    </block>
                    <actions class="linked-hash-map" id="1491">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1492">
                      <string>31-77-211693</string>
                      <string>30-77-211693</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.22115384615384615</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1493">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1494">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1495">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1496">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1497">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1498">
                  <id>56123</id>
                  <title>Queue and Stack # Working with queue</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56123</progress>
                  <createDate id="1499">2017-09-12 14:46:13.0 UTC</createDate>
                  <updateDate id="1500">2018-02-18 08:00:10.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56123-1</discussionProxy>
                  <discussionThreads id="1501">
                    <string>76-56123-1</string>
                  </discussionThreads>
                  <steps id="1502">
                    <long>211856</long>
                  </steps>
                  <actions class="linked-hash-map" id="1503" />
                  <tags id="1504" />
                  <requiredTags id="1505" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1506">
                    <string>31-76-56123</string>
                    <string>30-76-56123</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>138</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Working-with-queue-56123</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56123</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1507">
                <StepNode id="1508">
                  <parent class="LessonNode" reference="1493" />
                  <data class="Step" id="1509">
                    <id>211856</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211856</progress>
                    <createDate id="1510">2017-08-27 17:26:47.0 UTC</createDate>
                    <updateDate id="1511">2018-02-18 08:00:09.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211856-1</discussionProxy>
                    <discussionThreads id="1512">
                      <string>77-211856-1</string>
                      <string>77-211856-2</string>
                    </discussionThreads>
                    <lesson>56123</lesson>
                    <status>ready</status>
                    <block id="1513">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;There is a queue of 4 elements. Put in it one more element - the number &lt;/span&gt;&lt;span class=&quot;wysiwyg-color-blue&quot;&gt;5&lt;/span&gt;&lt;span&gt;, and then get 2 items out of the queue.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="1514">
                        <samples id="1515">
                          <Sample id="1516">&lt;input&gt;&lt;/input&gt;&lt;output&gt;[3, 4, 5]&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1517" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {

        Deque&lt;Integer&gt; queue = new ArrayDeque&lt;&gt;(Arrays.asList(1,2,3,4));

        //write your code here


        System.out.println(queue);

    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1518" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1519">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1520" />
                    </block>
                    <actions class="linked-hash-map" id="1521">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1522">
                      <string>31-77-211856</string>
                      <string>30-77-211856</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.7575757575757576</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1523">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1524">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1525">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1526">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1527">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1528">
                  <id>56122</id>
                  <title>Queue and Stack # Creating queue</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56122</progress>
                  <createDate id="1529">2017-09-12 14:46:12.0 UTC</createDate>
                  <updateDate id="1530">2018-02-18 07:59:11.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56122-1</discussionProxy>
                  <discussionThreads id="1531">
                    <string>76-56122-1</string>
                  </discussionThreads>
                  <steps id="1532">
                    <long>211855</long>
                  </steps>
                  <actions class="linked-hash-map" id="1533" />
                  <tags id="1534" />
                  <requiredTags id="1535" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1536">
                    <string>31-76-56122</string>
                    <string>30-76-56122</string>
                  </subscriptions>
                  <viewedBy>31</viewedBy>
                  <passedBy>28</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>169</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Creating-queue-56122</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56122</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1537">
                <StepNode id="1538">
                  <parent class="LessonNode" reference="1523" />
                  <data class="Step" id="1539">
                    <id>211855</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211855</progress>
                    <createDate id="1540">2017-08-27 17:26:39.0 UTC</createDate>
                    <updateDate id="1541">2018-02-18 07:58:29.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211855-1</discussionProxy>
                    <discussionThreads id="1542">
                      <string>77-211855-1</string>
                      <string>77-211855-2</string>
                    </discussionThreads>
                    <lesson>56122</lesson>
                    <status>ready</status>
                    <block id="1543">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Create ArrayDeque by name &lt;/span&gt;&lt;span class=&quot;wysiwyg-color-red&quot;&gt;queue&lt;/span&gt;&lt;span&gt; in any way known to you and push the following four numbers &lt;/span&gt;&lt;span class=&quot;wysiwyg-color-blue&quot;&gt;2, 0, 1, 7&lt;/span&gt;.&lt;br&gt;&lt;/div&gt;&lt;br&gt;The code for displaying the queue is already written.&lt;br&gt;</text>
                      <options id="1544">
                        <samples id="1545">
                          <Sample id="1546">&lt;input&gt;&lt;/input&gt;&lt;output&gt;[2, 0, 1, 7]&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1547" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {


        //write your code here


        System.out.println(queue);

    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1548" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1549">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1550" />
                    </block>
                    <actions class="linked-hash-map" id="1551">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1552">
                      <string>31-77-211855</string>
                      <string>30-77-211855</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>31</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.6981132075471698</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1553">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1554">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1555">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1556">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1557">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1558">
                  <id>60803</id>
                  <title>Queue and Stack # Even numbers go first</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60803</progress>
                  <createDate id="1559">2017-11-08 16:54:23.0 UTC</createDate>
                  <updateDate id="1560">2018-03-04 17:53:20.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60803-1</discussionProxy>
                  <discussionThreads id="1561">
                    <string>76-60803-1</string>
                  </discussionThreads>
                  <steps id="1562">
                    <long>239357</long>
                  </steps>
                  <actions class="linked-hash-map" id="1563" />
                  <tags id="1564" />
                  <requiredTags id="1565" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1566">
                    <string>31-76-60803</string>
                    <string>30-76-60803</string>
                  </subscriptions>
                  <viewedBy>26</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>444</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Even-numbers-go-first-60803</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60803</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1567">
                <StepNode id="1568">
                  <parent class="LessonNode" reference="1553" />
                  <data class="Step" id="1569">
                    <id>239357</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239357</progress>
                    <createDate id="1570">2017-11-08 17:19:16.0 UTC</createDate>
                    <updateDate id="1571">2018-03-04 17:53:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-239357-1</discussionProxy>
                    <discussionThreads id="1572">
                      <string>77-239357-1</string>
                      <string>77-239357-2</string>
                    </discussionThreads>
                    <lesson>60803</lesson>
                    <status>ready</status>
                    <block id="1573">
                      <name>code</name>
                      <text>Write a program that reads numbers and stores them to a deque. An even number should be added as the first element, an odd number - as the last. After, the program must output all elements from the first to the last.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first string contains the number of elements. Each line followed the first one contains an element.&lt;/div&gt;</text>
                      <options id="1574">
                        <samples id="1575">
                          <Sample id="1576">&lt;input&gt;4
1
2
3
4&lt;/input&gt;&lt;output&gt;4
2
1
3&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1577" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1578" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1579">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1580" />
                    </block>
                    <actions class="linked-hash-map" id="1581">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1582">
                      <string>31-77-239357</string>
                      <string>30-77-239357</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>26</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.28</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1583">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1584">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1585">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1586">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1587">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1588">
                  <id>60943</id>
                  <title>Queue and Stack # Getting the max element of a stack</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60943</progress>
                  <createDate id="1589">2017-11-10 17:50:40.0 UTC</createDate>
                  <updateDate id="1590">2018-02-18 08:13:58.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60943-1</discussionProxy>
                  <discussionThreads id="1591">
                    <string>76-60943-1</string>
                  </discussionThreads>
                  <steps id="1592">
                    <long>239927</long>
                  </steps>
                  <actions class="linked-hash-map" id="1593" />
                  <tags id="1594" />
                  <requiredTags id="1595" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1596">
                    <string>31-76-60943</string>
                    <string>30-76-60943</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>7</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Getting-the-max-element-of-a-stack-60943</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60943</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1597">
                <StepNode id="1598">
                  <parent class="LessonNode" reference="1583" />
                  <data class="Step" id="1599">
                    <id>239927</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239927</progress>
                    <createDate id="1600">2017-11-10 18:07:03.0 UTC</createDate>
                    <updateDate id="1601">2018-02-18 08:13:56.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-239927-1</discussionProxy>
                    <discussionThreads id="1602">
                      <string>77-239927-1</string>
                      <string>77-239927-2</string>
                    </discussionThreads>
                    <lesson>60943</lesson>
                    <status>ready</status>
                    <block id="1603">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program simulating a stack that can effectively return the current max element. Your program should read a sequence of commands of different types from the standard input.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;There are three types of commands:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;push v&lt;/b&gt; - add an element (v) to a top of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;pop&lt;/b&gt; - remove the top element of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;max&lt;/b&gt; - return the current max in the stack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The time complexity of these operations should not depend on the stack size (&lt;b&gt;&lt;/b&gt;&lt;b&gt;constant time, &lt;/b&gt;&lt;b&gt;O(1)&lt;/b&gt;).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Hint: &lt;/b&gt;you may use several standard stacks to write a solution.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the number of commands. Next lines contain one of the following commands:&lt;b&gt; push v, pop, max&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output the current max for each command &lt;b&gt;max&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="1604">
                        <samples id="1605">
                          <Sample id="1606">&lt;input&gt;5
push 2
push 1
max
pop
max
&lt;/input&gt;&lt;output&gt;2
2&lt;/output&gt;</Sample>
                          <Sample id="1607">&lt;input&gt;5
push 1
push 2
max
pop
max
&lt;/input&gt;&lt;output&gt;2
1&lt;/output&gt;</Sample>
                          <Sample id="1608">&lt;input&gt;10
push 2
push 3
push 9
push 7
push 2
max
max
max
pop
max
&lt;/input&gt;&lt;output&gt;9
9
9
9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1609" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1610" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1611">
                              <time>2</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1612" />
                    </block>
                    <actions class="linked-hash-map" id="1613">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1614">
                      <string>31-77-239927</string>
                      <string>30-77-239927</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.05063291139240506</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1615">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1616">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1617">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1618">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1619">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1620">
                  <id>63317</id>
                  <title>Enum # Danger levels</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63317</progress>
                  <createDate id="1621">2017-12-10 10:58:09.0 UTC</createDate>
                  <updateDate id="1622">2018-02-13 17:43:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63317-1</discussionProxy>
                  <discussionThreads id="1623">
                    <string>76-63317-1</string>
                  </discussionThreads>
                  <steps id="1624">
                    <long>249571</long>
                  </steps>
                  <actions class="linked-hash-map" id="1625" />
                  <tags id="1626" />
                  <requiredTags id="1627" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1628">
                    <string>31-76-63317</string>
                    <string>30-76-63317</string>
                  </subscriptions>
                  <viewedBy>34</viewedBy>
                  <passedBy>27</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>434</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Enum-Danger-levels-63317</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63317</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1629">
                <StepNode id="1630">
                  <parent class="LessonNode" reference="1615" />
                  <data class="Step" id="1631">
                    <id>249571</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249571</progress>
                    <createDate id="1632">2017-12-10 11:17:56.0 UTC</createDate>
                    <updateDate id="1633">2017-12-10 11:36:40.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249571-1</discussionProxy>
                    <discussionThreads id="1634">
                      <string>77-249571-1</string>
                      <string>77-249571-2</string>
                    </discussionThreads>
                    <lesson>63317</lesson>
                    <status>ready</status>
                    <block id="1635">
                      <name>code</name>
                      <text>Given an enum named &lt;code&gt;DangerLevel&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Add an integer field to store danger level and associate the number to each constant:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;HIGH&lt;/code&gt; - 3&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;MEDIUM&lt;/code&gt; - 2&lt;/li&gt;&lt;li&gt;&lt;code&gt;LOW&lt;/code&gt; - 1&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Also, you should add the instance method &lt;code&gt;getLevel&lt;/code&gt; that returns the associated integer number.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;After your modifications, the following code should be compiled and work correctly:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;DangerLevel high = DangerLevel.HIGH;&lt;br&gt;DangerLevel medium = DangerLevel.MEDIUM;&lt;br&gt;&lt;br&gt;System.out.println(high.getLevel() &amp;gt; medium.getLevel()); // true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</text>
                      <options id="1636">
                        <samples id="1637" />
                        <codeTemplates class="LinkedTreeMap" id="1638" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>enum DangerLevel {
    HIGH,
    MEDIUM,
    LOW;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1639" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1640">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1641" />
                    </block>
                    <actions class="linked-hash-map" id="1642">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1643">
                      <string>31-77-249571</string>
                      <string>30-77-249571</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>34</viewedBy>
                    <passedBy>27</passedBy>
                    <correctRatio>0.625</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1644">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1645">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1646">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1647">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1648">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1649">
                  <id>63315</id>
                  <title>Enum # Days of week</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63315</progress>
                  <createDate id="1650">2017-12-10 09:40:18.0 UTC</createDate>
                  <updateDate id="1651">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63315-1</discussionProxy>
                  <discussionThreads id="1652">
                    <string>76-63315-1</string>
                  </discussionThreads>
                  <steps id="1653">
                    <long>249553</long>
                  </steps>
                  <actions class="linked-hash-map" id="1654" />
                  <tags id="1655" />
                  <requiredTags id="1656" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1657">
                    <string>31-76-63315</string>
                    <string>30-76-63315</string>
                  </subscriptions>
                  <viewedBy>39</viewedBy>
                  <passedBy>34</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>92</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Enum-Days-of-week-63315</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63315</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1658">
                <StepNode id="1659">
                  <parent class="LessonNode" reference="1644" />
                  <data class="Step" id="1660">
                    <id>249553</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249553</progress>
                    <createDate id="1661">2017-12-10 09:46:19.0 UTC</createDate>
                    <updateDate id="1662">2017-12-10 09:47:16.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249553-1</discussionProxy>
                    <discussionThreads id="1663">
                      <string>77-249553-1</string>
                      <string>77-249553-2</string>
                    </discussionThreads>
                    <lesson>63315</lesson>
                    <status>ready</status>
                    <block id="1664">
                      <name>code</name>
                      <text>&lt;p&gt;Define an enum named &lt;code&gt;DayOfWeek&lt;/code&gt;. It should include all days of weak in uppercase: &lt;code&gt;SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY.&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The constants can be declared in any order.&lt;/p&gt;</text>
                      <options id="1665">
                        <samples id="1666" />
                        <codeTemplates class="LinkedTreeMap" id="1667" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// declare your enum here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1668" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1669">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1670" />
                    </block>
                    <actions class="linked-hash-map" id="1671">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1672">
                      <string>31-77-249553</string>
                      <string>30-77-249553</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>39</viewedBy>
                    <passedBy>34</passedBy>
                    <correctRatio>0.7446808510638298</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1673">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1674">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1675">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1676">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1677">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1678">
                  <id>56077</id>
                  <title>Enum # Balance management</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56077</progress>
                  <createDate id="1679">2017-09-12 14:45:55.0 UTC</createDate>
                  <updateDate id="1680">2018-02-14 09:18:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56077-1</discussionProxy>
                  <discussionThreads id="1681">
                    <string>76-56077-1</string>
                  </discussionThreads>
                  <steps id="1682">
                    <long>206398</long>
                  </steps>
                  <actions class="linked-hash-map" id="1683" />
                  <tags id="1684" />
                  <requiredTags id="1685" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1686">
                    <string>31-76-56077</string>
                    <string>30-76-56077</string>
                  </subscriptions>
                  <viewedBy>50</viewedBy>
                  <passedBy>31</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>914</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Enum-Balance-management-56077</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56077</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1687">
                <StepNode id="1688">
                  <parent class="LessonNode" reference="1673" />
                  <data class="Step" id="1689">
                    <id>206398</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206398</progress>
                    <createDate id="1690">2017-07-31 05:16:41.0 UTC</createDate>
                    <updateDate id="1691">2017-12-26 11:50:09.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206398-1</discussionProxy>
                    <discussionThreads id="1692">
                      <string>77-206398-1</string>
                      <string>77-206398-2</string>
                    </discussionThreads>
                    <lesson>56077</lesson>
                    <status>ready</status>
                    <block id="1693">
                      <name>code</name>
                      <text>&lt;p&gt;Given the enum &lt;code&gt;Operation&lt;/code&gt; and the class &lt;code&gt;Account&lt;/code&gt;. Their implementations are shown below.&lt;br&gt;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;Operation&lt;/code&gt; enum:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;enum Operation {&lt;br&gt;    /**&lt;br&gt;     * deposit (add) an amount into an Account&lt;br&gt;     */&lt;br&gt;    WITHDRAW,&lt;br&gt;    /**&lt;br&gt;     * withdraw (subtract) an amount from an Account&lt;br&gt;     */&lt;br&gt;    DEPOSIT&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;The &lt;code&gt;Account&lt;/code&gt; class:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;class Account {&lt;br&gt;&lt;br&gt;    private String code;&lt;br&gt;    private Long balance;&lt;br&gt;&lt;br&gt;    public String getCode() {&lt;br&gt;        return code;&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    public Long getBalance() {&lt;br&gt;        return balance;&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    public void setBalance(Long balance) {&lt;br&gt;        this.balance = balance;&lt;br&gt;    }&lt;br&gt;} &lt;/code&gt;&lt;/pre&gt; &lt;div&gt;&lt;br&gt;Implement the method &lt;b&gt;changeBalance &lt;/b&gt;to control balances. It has the following declaration:&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;pre&gt;&lt;code&gt;public static boolean changeBalance(Account account, Operation operation, Long sum)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;If the given operation is DEPOSIT the method adds the sum to the account's balance.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the operation is WITHDRAW the method subtracts the given sum from the account's balance. If the given sum is greater than the balance, the method shouldn't change it. Instead, the method must output the string &lt;b&gt;&quot;Not enough money to withdraw.&quot;&lt;/b&gt; (without &quot;&quot;).&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In any case, the method returns a boolean value - true if the balance has changed, otherwise - false.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template, do not remove the class and the enum for this template.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;b&gt;Example 1&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The following values are passed to the method: operation = Operation.DEPOSIT, sum = 2000. The initial balance of the account is 1000.&lt;/p&gt;&lt;p&gt;In this case, the method returns &quot;true&quot; and the new account balance is 3000.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Example 2&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The following values are passed to the method: operation = Operation.WITHDRAW, sum = 5000. The initial balance of the account is 2000.&lt;/p&gt;&lt;p&gt;In this case, the method returns &quot;false&quot;, the account's balance is not changed (2000) and method prints &quot;Not enough money to withdraw.&quot;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="1694">
                        <samples id="1695" />
                        <codeTemplates class="LinkedTreeMap" id="1696" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>/**
 * The method change the balance of the given account according to an operation.
 * @param account
 * @param operation
 * @return true if the balance has changed, otherwise - false.
 */
public static boolean changeBalance(Account account, Operation operation, Long sum) {
    // write your implementation here
}


enum Operation {
    /**
     * deposit (add) an amount into an Account
     */
    WITHDRAW,
    /**
     * withdraw (subtract) an amount from an Account
     */
    DEPOSIT
}

static class Account {

    private String code;
    private Long balance;

    public String getCode() {
        return code;
    }

    public Long getBalance() {
        return balance;
    }

    public void setBalance(Long balance) {
        this.balance = balance;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1697" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1698">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1699" />
                    </block>
                    <actions class="linked-hash-map" id="1700">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1701">
                      <string>31-77-206398</string>
                      <string>30-77-206398</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>50</viewedBy>
                    <passedBy>31</passedBy>
                    <correctRatio>0.17073170731707318</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1702">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1703">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1704">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1705">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1706">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1707">
                  <id>63316</id>
                  <title>Enum # The secret enumeration</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63316</progress>
                  <createDate id="1708">2017-12-10 10:05:10.0 UTC</createDate>
                  <updateDate id="1709">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63316-1</discussionProxy>
                  <discussionThreads id="1710">
                    <string>76-63316-1</string>
                  </discussionThreads>
                  <steps id="1711">
                    <long>249560</long>
                  </steps>
                  <actions class="linked-hash-map" id="1712" />
                  <tags id="1713" />
                  <requiredTags id="1714" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1715">
                    <string>31-76-63316</string>
                    <string>30-76-63316</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>577</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Enum-The-secret-enumeration-63316</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63316</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1716">
                <StepNode id="1717">
                  <parent class="LessonNode" reference="1702" />
                  <data class="Step" id="1718">
                    <id>249560</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-249560</progress>
                    <createDate id="1719">2017-12-10 10:45:02.0 UTC</createDate>
                    <updateDate id="1720">2017-12-26 03:51:27.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-249560-1</discussionProxy>
                    <discussionThreads id="1721">
                      <string>77-249560-1</string>
                      <string>77-249560-2</string>
                    </discussionThreads>
                    <lesson>63316</lesson>
                    <status>ready</status>
                    <block id="1722">
                      <name>code</name>
                      <text>Given an enum named &lt;code&gt;Secret&lt;/code&gt; with some constants in uppercase.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write a program that counts a number of constants starting with &lt;b&gt;&quot;STAR&quot;&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The enum is accessible during testing.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The small enum for tests:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code&gt;enum Secret {&lt;br&gt;    STAR, CRASH, // ...&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</text>
                      <options id="1723">
                        <samples id="1724" />
                        <codeTemplates class="LinkedTreeMap" id="1725" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public class Main {

    public static void main(String[] args) {

    }
}

/* 
enum Secret { 
    STAR, CRASH, // ...             
} 
*/</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1726" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1727">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1728" />
                    </block>
                    <actions class="linked-hash-map" id="1729">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1730">
                      <string>31-77-249560</string>
                      <string>30-77-249560</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.34177215189873417</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1731">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1732">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1733">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1734">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1735">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1736">
                  <id>55988</id>
                  <title>Iterating over arrays # Check if an array contains two numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55988</progress>
                  <createDate id="1737">2017-09-12 14:45:23.0 UTC</createDate>
                  <updateDate id="1738">2018-02-04 16:03:56.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55988-1</discussionProxy>
                  <discussionThreads id="1739">
                    <string>76-55988-1</string>
                  </discussionThreads>
                  <steps id="1740">
                    <long>216230</long>
                  </steps>
                  <actions class="linked-hash-map" id="1741" />
                  <tags id="1742" />
                  <requiredTags id="1743" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1744">
                    <string>31-76-55988</string>
                    <string>30-76-55988</string>
                  </subscriptions>
                  <viewedBy>52</viewedBy>
                  <passedBy>35</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>2227</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Check-if-an-array-contains-two-numbers-55988</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55988</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1745">
                <StepNode id="1746">
                  <parent class="LessonNode" reference="1731" />
                  <data class="Step" id="1747">
                    <id>216230</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216230</progress>
                    <createDate id="1748">2017-09-04 01:24:47.0 UTC</createDate>
                    <updateDate id="1749">2018-02-04 16:03:56.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216230-1</discussionProxy>
                    <discussionThreads id="1750">
                      <string>77-216230-1</string>
                      <string>77-216230-2</string>
                    </discussionThreads>
                    <lesson>55988</lesson>
                    <status>ready</status>
                    <block id="1751">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that reads an unsorted array of integers and two numbers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;. The program must check if &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt; occur next to each other in the array (in any order).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the size of an array.&lt;/div&gt;&lt;div&gt;The second line contains elements of the array.&lt;/div&gt;&lt;div&gt;The third line contains two integer numbers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;All numbers in the same line are separated by the space character.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Only a single value: &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;/div&gt;</text>
                      <options id="1752">
                        <samples id="1753">
                          <Sample id="1754">&lt;input&gt;3
1 3 2
2 3
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="1755">&lt;input&gt;3
1 2 3
3 4
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1756" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1757" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1758">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1759" />
                    </block>
                    <actions class="linked-hash-map" id="1760">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1761">
                      <string>31-77-216230</string>
                      <string>30-77-216230</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>56</viewedBy>
                    <passedBy>40</passedBy>
                    <correctRatio>0.1862348178137652</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1762">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1763">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1764">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1765">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1766">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1767">
                  <id>60807</id>
                  <title>Queue and Stack # Greedy load balance</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60807</progress>
                  <createDate id="1768">2017-11-08 18:19:30.0 UTC</createDate>
                  <updateDate id="1769">2018-02-18 08:11:57.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60807-1</discussionProxy>
                  <discussionThreads id="1770">
                    <string>76-60807-1</string>
                  </discussionThreads>
                  <steps id="1771">
                    <long>239365</long>
                  </steps>
                  <actions class="linked-hash-map" id="1772" />
                  <tags id="1773" />
                  <requiredTags id="1774" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1775">
                    <string>31-76-60807</string>
                    <string>30-76-60807</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>9</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Greedy-load-balance-60807</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60807</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1776">
                <StepNode id="1777">
                  <parent class="LessonNode" reference="1762" />
                  <data class="Step" id="1778">
                    <id>239365</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239365</progress>
                    <createDate id="1779">2017-11-08 18:33:57.0 UTC</createDate>
                    <updateDate id="1780">2018-02-18 08:11:56.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-239365-1</discussionProxy>
                    <discussionThreads id="1781">
                      <string>77-239365-1</string>
                      <string>77-239365-2</string>
                    </discussionThreads>
                    <lesson>60807</lesson>
                    <status>ready</status>
                    <block id="1782">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a program that implements a simple load balancer.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The program must read tasks from the standard input and distribute them between two queues. Tasks will be processed by a system (in future). Each task has a unique identifier and a number indicating the load on the system (in parrots).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The balancer should distribute tasks between queues by the following rule - the task is added to the lower-load queue (by the total load). If both queues have the same total load indicator, the task must be added to the first queue.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It's guaranteed, the input data contain at least two tasks.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the number of tasks. Other lines consist of task descriptions - an identifier and a load indicator (separated by a space).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data form&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line should contain identifiers of tasks in the first queue, the second line - in the second queue.&lt;/div&gt;</text>
                      <options id="1783">
                        <samples id="1784">
                          <Sample id="1785">&lt;input&gt;6
1 1
2 1
3 1
4 3
5 1
6 1&lt;/input&gt;&lt;output&gt;1 3 5 6
2 4&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1786" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1787" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1788">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1789" />
                    </block>
                    <actions class="linked-hash-map" id="1790">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1791">
                      <string>31-77-239365</string>
                      <string>30-77-239365</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.3939393939393939</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1792">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1793">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1794">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1795">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1796">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1797">
                  <id>57105</id>
                  <title>Standard functional interfaces # Accounts</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57105</progress>
                  <createDate id="1798">2017-09-20 17:05:39.0 UTC</createDate>
                  <updateDate id="1799">2018-02-20 22:52:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57105-1</discussionProxy>
                  <discussionThreads id="1800">
                    <string>76-57105-1</string>
                  </discussionThreads>
                  <steps id="1801">
                    <long>223269</long>
                  </steps>
                  <actions class="linked-hash-map" id="1802" />
                  <tags id="1803" />
                  <requiredTags id="1804" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1805">
                    <string>31-76-57105</string>
                    <string>30-76-57105</string>
                  </subscriptions>
                  <viewedBy>18</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>847</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Standard-functional-interfaces-Accounts-57105</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57105</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1806">
                <StepNode id="1807">
                  <parent class="LessonNode" reference="1792" />
                  <data class="Step" id="1808">
                    <id>223269</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-223269</progress>
                    <createDate id="1809">2017-09-20 17:08:30.0 UTC</createDate>
                    <updateDate id="1810">2017-09-20 17:08:30.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-223269-1</discussionProxy>
                    <discussionThreads id="1811">
                      <string>77-223269-1</string>
                      <string>77-223269-2</string>
                    </discussionThreads>
                    <lesson>57105</lesson>
                    <status>ready</status>
                    <block id="1812">
                      <name>code</name>
                      <text>&lt;p&gt;You have a class &lt;b&gt;Account (number: String, balance: Long, isLocked: boolean)&lt;/b&gt;, the list &lt;b&gt;accounts &lt;/b&gt;of type &lt;b&gt;List&amp;lt;Account&amp;gt;&lt;/b&gt; and the method &lt;b&gt;filter(List&amp;lt;T&amp;gt; elems, Predicate&amp;lt;T&amp;gt; predicate)&lt;/b&gt; for filtering the given list of type T by the predicate.&lt;/p&gt;&lt;p&gt;The class &lt;b&gt;Account&lt;/b&gt; has the next methods: getNumber(), getBalance(), isLocked() for getting the values of the corresponding fields.&lt;/p&gt;&lt;p&gt;Write a code for filtering the &lt;b&gt;accounts &lt;/b&gt;list&lt;b&gt; &lt;/b&gt;in two ways:&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;get list with &lt;b&gt;all non-empty&lt;/b&gt; accounts (balance &amp;gt; 0) and save it to the variable &lt;b&gt;nonEmptyAccounts&lt;/b&gt;&lt;/li&gt;&lt;li&gt;get&lt;b&gt; all non-locked&lt;/b&gt; accounts&lt;b&gt; with too much money&lt;/b&gt; (balance &amp;gt;= 100 000 000) and save it to the variable &lt;b&gt;accountsWithTooMuchMoney&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;b&gt;&lt;/b&gt;&lt;/b&gt;The class &lt;b&gt;Account&lt;/b&gt;, the list &lt;b&gt;accounts (List&amp;lt;Account&amp;gt;) &lt;/b&gt;and the method&lt;b&gt; filter(...) &lt;/b&gt;will be available during testing.&lt;b&gt; &lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;b&gt;Important. &lt;/b&gt;&lt;/b&gt;Use the given code template for your solution. Do not change it!&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Example &lt;/b&gt;of use the filter method&lt;b&gt;.&lt;/b&gt; The code below gets only even number from the list.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;pre&gt;List&amp;lt;Integer&amp;gt; numbers = ...&lt;/pre&gt;List&amp;lt;Integer&amp;gt; evenNumbers = filter(numbers, number -&amp;gt; number % 2 == 0);&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;PS: &lt;/b&gt;it's often called &lt;b&gt;behaviour parametrization&lt;/b&gt; because behaviour of the method &lt;b&gt;filter &lt;/b&gt;is dependent of the given predicate.&lt;/div&gt;</text>
                      <options id="1813">
                        <samples id="1814" />
                        <codeTemplates class="LinkedTreeMap" id="1815" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// you need to filter List&lt;Account&gt; accounts

List&lt;Account&gt; nonEmptyAccounts = // write your code here

List&lt;Account&gt; accountsWithTooMuchMoney = // write your code here

// just an example
// List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4, 5, 6);
// List&lt;Integer&gt; evenNumbers = filter(numbers, number -&gt; number % 2 == 0);</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1816" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1817">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1818" />
                    </block>
                    <actions class="linked-hash-map" id="1819">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1820">
                      <string>31-77-223269</string>
                      <string>30-77-223269</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>18</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.16666666666666666</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1821">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1822">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1823">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1824">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1825">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1826">
                  <id>57110</id>
                  <title>Function composition # The chain of responsibility</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57110</progress>
                  <createDate id="1827">2017-09-20 17:12:53.0 UTC</createDate>
                  <updateDate id="1828">2018-02-21 15:19:50.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57110-1</discussionProxy>
                  <discussionThreads id="1829">
                    <string>76-57110-1</string>
                  </discussionThreads>
                  <steps id="1830">
                    <long>223274</long>
                    <long>223278</long>
                    <long>223279</long>
                  </steps>
                  <actions class="linked-hash-map" id="1831" />
                  <tags id="1832" />
                  <requiredTags id="1833" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1834">
                    <string>31-76-57110</string>
                    <string>30-76-57110</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>5</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Function-composition-The-chain-of-responsibility-57110</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57110</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="java.util.Arrays$ArrayList" id="1835">
                <a id="1836">
                  <StepNode id="1837">
                    <parent class="LessonNode" reference="1821" />
                    <data class="Step" id="1838">
                      <id>223274</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>1</position>
                      <progress>77-223274</progress>
                      <createDate id="1839">2017-09-20 17:12:54.0 UTC</createDate>
                      <updateDate id="1840">2017-09-20 17:17:22.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223274-1</discussionProxy>
                      <discussionThreads id="1841">
                        <string>77-223274-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="1842">
                        <name>text</name>
                        <text>&lt;p&gt;&lt;b&gt;Overview. &lt;/b&gt;The chain of responsibility pattern is a object-oriented design pattern that processes a request through a series of handlers (a chain). The request (or something else) is sent from one handler to another and processed by one or all of these handlers in the chain.&lt;/p&gt;&lt;p&gt;In more detail: &lt;a href=&quot;https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&quot; rel=&quot;nofollow&quot; title=&quot;Link: https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&quot;&gt;https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Usually, to implement this design pattern follow classes and method are created:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;a general handler&lt;/b&gt; is an abstract class or interface with a &lt;b&gt;&lt;/b&gt;met﻿hod &lt;b&gt;handle/process/etc&lt;/b&gt; and a method to set a ﻿next handler&lt;/li&gt;&lt;li&gt;one or more &lt;b&gt;concrete handlers &lt;/b&gt;that implement the general handler&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Using functional style we can implement it more simple. &lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;Instead o&lt;/span&gt;&lt;span&gt;f &lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;writing all &lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;concrete &lt;/span&gt;&lt;span&gt;handlers &lt;/span&gt;&lt;span&gt;we &lt;/span&gt;&lt;span&gt;can &lt;/span&gt;&lt;span&gt;write l&lt;/span&gt;&lt;span&gt;ambda &lt;/span&gt;&lt;span&gt;expressions (or &lt;/span&gt;&lt;span&gt;method r&lt;/span&gt;&lt;span&gt;eferences). For &lt;/span&gt;&lt;span&gt;setting &lt;/span&gt;&lt;span&gt;next&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;handler it's possible &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;function &lt;/span&gt;&lt;span&gt;composition &lt;/span&gt;&lt;span&gt;﻿in &lt;/span&gt;&lt;span&gt;similar &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;functions &lt;/span&gt;&lt;span&gt;way.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                        <options id="1843" />
                        <subtitleFiles id="1844" />
                      </block>
                      <actions class="linked-hash-map" id="1845" />
                      <subscriptions id="1846">
                        <string>31-77-223274</string>
                        <string>30-77-223274</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>6</viewedBy>
                      <passedBy>6</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>true</wasDeleted>
                    <currentLang>invalid</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="1847">
                    <parent class="LessonNode" reference="1821" />
                    <data class="Step" id="1848">
                      <id>223278</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>2</position>
                      <progress>77-223278</progress>
                      <createDate id="1849">2017-09-20 17:17:22.0 UTC</createDate>
                      <updateDate id="1850">2017-09-20 17:17:23.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223278-1</discussionProxy>
                      <discussionThreads id="1851">
                        <string>77-223278-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="1852">
                        <name>code</name>
                        <text>&lt;p&gt;There is a class &lt;b&gt;Request(data: String) &lt;/b&gt;for representing some XML requests in a payment system. The class has a getter method &lt;b&gt;getData()&lt;/b&gt; and a constructor with one argument (&lt;b&gt;data)&lt;/b&gt;. See below.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Typically, the value of &lt;b&gt;data&lt;/b&gt; looks like shown below (in a human-readable format, in processing it's a single line string).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;request&amp;gt;&lt;br&gt;  &amp;lt;transaction&amp;gt;&lt;br&gt;    &amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&lt;br&gt;    &amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&lt;br&gt;    &amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&lt;br&gt;    &amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&lt;br&gt;  &amp;lt;/transaction&amp;gt;&lt;br&gt;  &amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&lt;br&gt;&amp;lt;/request&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;You should to write &lt;b&gt;the chain of responsibility pattern in functional style&lt;/b&gt; for stage-by-stage request creating.&lt;div&gt;For this:&lt;div&gt;1) write a functional interface &lt;b&gt;RequestHandler&lt;/b&gt; with a single abstract method &lt;b&gt;handle &lt;/b&gt;and a default method; the first is needed for using lambda expressions and should accept a Request and returns new Request with changed data, the second is for combining several handlers into the one.&lt;/div&gt;&lt;div&gt;2) create a &lt;b&gt;commonRequestHandler&lt;/b&gt; combined from three existing handlers: &lt;b&gt;wrapInTransactionTag&lt;/b&gt;, &lt;b&gt;createDigest&lt;/b&gt; and &lt;b&gt;wrapInRequestTag&lt;/b&gt;.&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Important. &lt;/b&gt;Use the provided template for your solution. Do not change it and read comments in the code. The template is long enough, scroll it to the bottom. &lt;b&gt;All comments where your code is expected start with !!!&lt;/b&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In the next step, you can read how the requests should be created. Keep in mind, all handlers with logic are already implemented and available for you. You need to write only a suitable functional interface and compose all existing handlers as functions into one &lt;b&gt;commonRequestHandler&lt;/b&gt; &lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;to follow the described algorithm.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                        <options id="1853">
                          <samples id="1854" />
                          <codeTemplates class="LinkedTreeMap" id="1855" resolves-to="linked-hash-map">
                            <entry>
                              <string>java8</string>
                              <string>/**
 * It represents a handler and has two methods: one for handling requests and other for combining handlers
 */
@FunctionalInterface
interface RequestHandler {

    // !!! write a method handle that accept request and returns new request here
    // it allows to use lambda expressions for creating handlers below

    // !!! write a default method for combining this and other handler single one
    // the order of execution may be any but you need to consider it when composing handlers
    // the method may has any name
}

/**
 * Accepts a request and returns new request with data wrapped in the tag &lt;transaction&gt;...&lt;/transaction&gt;
 */
final static RequestHandler wrapInTransactionTag =
        (req) -&gt; new Request(String.format(&quot;&lt;transaction&gt;%s&lt;/transaction&gt;&quot;, req.getData()));

/**
 * Accepts a request and returns a new request with calculated digest inside the tag &lt;digest&gt;...&lt;/digest&gt;
 */
final static RequestHandler createDigest =
        (req) -&gt; {
            String digest = &quot;&quot;;
            try {
                final MessageDigest md5 = MessageDigest.getInstance(&quot;MD5&quot;);
                final byte[] digestBytes = md5.digest(req.getData().getBytes(&quot;UTF-8&quot;));
                digest = new String(Base64.getEncoder().encode(digestBytes));
            } catch (Exception ignored) { }
            return new Request(req.getData() + String.format(&quot;&lt;digest&gt;%s&lt;/digest&gt;&quot;, digest));
        };

/**
 * Accepts a request and returns a new request with data wrapped in the tag &lt;request&gt;...&lt;/request&gt;
 */
final static RequestHandler wrapInRequestTag =
        (req) -&gt; new Request(String.format(&quot;&lt;request&gt;%s&lt;/request&gt;&quot;, req.getData()));

/**
 * It should represents a chain of responsibility combined from another handlers.
 * The format: commonRequestHandler = handler1.setSuccessor(handler2.setSuccessor(...))
 * The combining method setSuccessor may has another name
 */
final static RequestHandler commonRequestHandler = // !!! write the combining of existing handlers here

/**
 * Immutable class for representing requests.
 * If you need to change the request data then create new request.
 */
static class Request {
    private final String data;

    public Request(String requestData) {
        this.data = requestData;
    }

    public String getData() {
        return data;
    }
}</string>
                            </entry>
                          </codeTemplates>
                          <limits class="LinkedTreeMap" id="1856" resolves-to="linked-hash-map">
                            <entry>
                              <string>java8</string>
                              <Limit id="1857">
                                <time>8</time>
                                <memory>256</memory>
                              </Limit>
                            </entry>
                          </limits>
                        </options>
                        <subtitleFiles id="1858" />
                      </block>
                      <actions class="linked-hash-map" id="1859">
                        <entry>
                          <string>submit</string>
                          <string>#</string>
                        </entry>
                      </actions>
                      <subscriptions id="1860">
                        <string>31-77-223278</string>
                        <string>30-77-223278</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>16</viewedBy>
                      <passedBy>8</passedBy>
                      <correctRatio>0.25</correctRatio>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>true</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="1861">
                    <parent class="LessonNode" reference="1821" />
                    <data class="Step" id="1862">
                      <id>223279</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>3</position>
                      <progress>77-223279</progress>
                      <createDate id="1863">2017-09-20 17:17:36.0 UTC</createDate>
                      <updateDate id="1864">2017-09-20 17:17:36.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223279-1</discussionProxy>
                      <discussionThreads id="1865">
                        <string>77-223279-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="1866">
                        <name>text</name>
                        <text>&lt;p&gt;&lt;b&gt;The algorithm for creating a XML request.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;0) Initial request data looks like shown below (it contains only business data).&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1) First, a tag &lt;i&gt;&amp;lt;transaction&amp;gt;...&amp;lt;/transaction&amp;gt;&lt;/i&gt; is added as border of the data (data is wrapped in the tag). The result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2) Then, a digest (MD5) is calculated for entire data created on the previous stage and added as a new tag. The result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;&amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3) After that, the data is wrapped in a tag &lt;i&gt;&amp;lt;request&amp;gt;...&amp;lt;/request&amp;gt;&lt;/i&gt; as shown below. The request is completed.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;request&amp;gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-
63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;
&amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&amp;lt;/request&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;So, if you have a request data as shown in stage 0, the algorithm should to generate the result as shown in stage 3.&lt;/p&gt;&lt;p&gt;Note, each stage is already implemented for you in a specific &lt;b&gt;RequestHandler&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;</text>
                        <options id="1867" />
                        <subtitleFiles id="1868" />
                      </block>
                      <actions class="linked-hash-map" id="1869" />
                      <subscriptions id="1870">
                        <string>31-77-223279</string>
                        <string>30-77-223279</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>5</viewedBy>
                      <passedBy>5</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>true</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                </a>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1871">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1872">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1873">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1874">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1875">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1876">
                  <id>56001</id>
                  <title>Iterating over arrays # Cyclically shifting elements</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56001</progress>
                  <createDate id="1877">2017-09-12 14:45:27.0 UTC</createDate>
                  <updateDate id="1878">2018-02-04 17:20:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56001-1</discussionProxy>
                  <discussionThreads id="1879">
                    <string>76-56001-1</string>
                  </discussionThreads>
                  <steps id="1880">
                    <long>205843</long>
                  </steps>
                  <actions class="linked-hash-map" id="1881" />
                  <tags id="1882" />
                  <requiredTags id="1883" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1884">
                    <string>31-76-56001</string>
                    <string>30-76-56001</string>
                  </subscriptions>
                  <viewedBy>40</viewedBy>
                  <passedBy>30</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>852</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Cyclically-shifting-elements-56001</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56001</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1885">
                <StepNode id="1886">
                  <parent class="LessonNode" reference="1871" />
                  <data class="Step" id="1887">
                    <id>205843</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205843</progress>
                    <createDate id="1888">2017-07-26 17:11:49.0 UTC</createDate>
                    <updateDate id="1889">2018-02-04 17:20:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205843-1</discussionProxy>
                    <discussionThreads id="1890">
                      <string>77-205843-1</string>
                      <string>77-205843-2</string>
                    </discussionThreads>
                    <lesson>56001</lesson>
                    <status>ready</status>
                    <block id="1891">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that reads an array of ints named &lt;code&gt;A&lt;/code&gt; and cyclically shift the elements of the array to the right: &lt;code&gt;A[0]&lt;/code&gt; goes to the place of &lt;code&gt;A[1]&lt;/code&gt;, &lt;code&gt;A[1]&lt;/code&gt; - to the place of &lt;code&gt;A[2]&lt;/code&gt;, ..., and the last element goes to the place of &lt;code&gt;A[0]&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The first line of the input contains the number of elements in the array. The second line – the elements of the array.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The single line contains all shifted elements of the array. Elements must be separated by the space character.&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="1892">
                        <samples id="1893">
                          <Sample id="1894">&lt;input&gt;5
1 2 3 4 5&lt;/input&gt;&lt;output&gt;5 1 2 3 4&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1895" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1896" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="1897">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1898" />
                    </block>
                    <actions class="linked-hash-map" id="1899">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1900">
                      <string>31-77-205843</string>
                      <string>30-77-205843</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>40</viewedBy>
                    <passedBy>30</passedBy>
                    <correctRatio>0.3627450980392157</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1901">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1902">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1903">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1904">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1905">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1906">
                  <id>55990</id>
                  <title>Iterating over arrays # Does an array contain N?</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55990</progress>
                  <createDate id="1907">2017-09-12 14:45:23.0 UTC</createDate>
                  <updateDate id="1908">2018-02-04 16:32:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55990-1</discussionProxy>
                  <discussionThreads id="1909">
                    <string>76-55990-1</string>
                  </discussionThreads>
                  <steps id="1910">
                    <long>216233</long>
                  </steps>
                  <actions class="linked-hash-map" id="1911" />
                  <tags id="1912" />
                  <requiredTags id="1913" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1914">
                    <string>31-76-55990</string>
                    <string>30-76-55990</string>
                  </subscriptions>
                  <viewedBy>43</viewedBy>
                  <passedBy>36</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>236</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Does-an-array-contain-N-55990</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55990</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1915">
                <StepNode id="1916">
                  <parent class="LessonNode" reference="1901" />
                  <data class="Step" id="1917">
                    <id>216233</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216233</progress>
                    <createDate id="1918">2017-09-04 01:25:15.0 UTC</createDate>
                    <updateDate id="1919">2018-02-04 16:32:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216233-1</discussionProxy>
                    <discussionThreads id="1920">
                      <string>77-216233-1</string>
                      <string>77-216233-2</string>
                    </discussionThreads>
                    <lesson>55990</lesson>
                    <status>ready</status>
                    <block id="1921">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;div&gt;Write a program that reads an array of integers and an integer number &lt;b&gt;n&lt;/b&gt;. The program must check that array contain &lt;b&gt;n&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the size of an array.&lt;/div&gt;&lt;div&gt;The second line contains elements of the array separated by the space.&lt;br&gt;&lt;/div&gt;&lt;div&gt;The third line contains one integer number &lt;b&gt;n&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Only a single value: &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="1922">
                        <samples id="1923">
                          <Sample id="1924">&lt;input&gt;3
1 3 2
3
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="1925">&lt;input&gt;5
1 3 2 5 4
7
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1926" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1927" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="1928">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1929" />
                    </block>
                    <actions class="linked-hash-map" id="1930">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1931">
                      <string>31-77-216233</string>
                      <string>30-77-216233</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>43</viewedBy>
                    <passedBy>36</passedBy>
                    <correctRatio>0.4111111111111111</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1932">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1933">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1934">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1935">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1936">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1937">
                  <id>55995</id>
                  <title>Iterating over arrays # The index of the first max in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55995</progress>
                  <createDate id="1938">2017-09-12 14:45:25.0 UTC</createDate>
                  <updateDate id="1939">2018-02-04 17:00:06.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55995-1</discussionProxy>
                  <discussionThreads id="1940">
                    <string>76-55995-1</string>
                  </discussionThreads>
                  <steps id="1941">
                    <long>205837</long>
                  </steps>
                  <actions class="linked-hash-map" id="1942" />
                  <tags id="1943" />
                  <requiredTags id="1944" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1945">
                    <string>31-76-55995</string>
                    <string>30-76-55995</string>
                  </subscriptions>
                  <viewedBy>39</viewedBy>
                  <passedBy>30</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>418</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-The-index-of-the-first-max-in-an-array-55995</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55995</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1946">
                <StepNode id="1947">
                  <parent class="LessonNode" reference="1932" />
                  <data class="Step" id="1948">
                    <id>205837</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205837</progress>
                    <createDate id="1949">2017-07-26 16:49:12.0 UTC</createDate>
                    <updateDate id="1950">2018-02-04 17:00:05.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205837-1</discussionProxy>
                    <discussionThreads id="1951">
                      <string>77-205837-1</string>
                      <string>77-205837-2</string>
                    </discussionThreads>
                    <lesson>55995</lesson>
                    <status>ready</status>
                    <block id="1952">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that read an array of ints and finds the index of the first maximum in an array.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the number of elements in the array.&lt;/p&gt;&lt;p&gt;The second line contains the array elements separated by spaces.&lt;/p&gt;&lt;p&gt;An array always has at least one element.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Only a single integer value - the index of the first maximum.&lt;/p&gt;</text>
                      <options id="1953">
                        <samples id="1954">
                          <Sample id="1955">&lt;input&gt;5
2 5 3 4 5&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                          <Sample id="1956">&lt;input&gt;6
1000 10 1000 10 10 1001&lt;/input&gt;&lt;output&gt;5&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1957" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1958" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="1959">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1960" />
                    </block>
                    <actions class="linked-hash-map" id="1961">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1962">
                      <string>31-77-205837</string>
                      <string>30-77-205837</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>39</viewedBy>
                    <passedBy>30</passedBy>
                    <correctRatio>0.21428571428571427</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1963">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1964">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1965">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1966">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1967">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1968">
                  <id>56000</id>
                  <title>Iterating over arrays # Triples</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56000</progress>
                  <createDate id="1969">2017-09-12 14:45:26.0 UTC</createDate>
                  <updateDate id="1970">2018-02-04 17:51:38.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56000-1</discussionProxy>
                  <discussionThreads id="1971">
                    <string>76-56000-1</string>
                  </discussionThreads>
                  <steps id="1972">
                    <long>216243</long>
                  </steps>
                  <actions class="linked-hash-map" id="1973" />
                  <tags id="1974" />
                  <requiredTags id="1975" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="1976">
                    <string>31-76-56000</string>
                    <string>30-76-56000</string>
                  </subscriptions>
                  <viewedBy>29</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>779</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Triples-56000</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56000</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="1977">
                <StepNode id="1978">
                  <parent class="LessonNode" reference="1963" />
                  <data class="Step" id="1979">
                    <id>216243</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216243</progress>
                    <createDate id="1980">2017-09-04 02:41:48.0 UTC</createDate>
                    <updateDate id="1981">2018-02-04 17:51:37.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216243-1</discussionProxy>
                    <discussionThreads id="1982">
                      <string>77-216243-1</string>
                      <string>77-216243-2</string>
                    </discussionThreads>
                    <lesson>56000</lesson>
                    <status>ready</status>
                    <block id="1983">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;b&gt;Triples&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write a program that reads an array of ints and outputs the number of &quot;triples&quot; in the array.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A &quot;triple&quot; is three consecutive ints in increasing order differing by 1 (i.e. &lt;code&gt;3,4,5&lt;/code&gt; is a triple, but &lt;code&gt;5,4,3&lt;/code&gt; and &lt;code&gt;2,4,6&lt;/code&gt; are not).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;The first line contains the size of an array.&lt;br&gt;The second line contains elements of the array separated by spaces.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;Only a single integer value - the number of &quot;triples&quot;.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="1984">
                        <samples id="1985">
                          <Sample id="1986">&lt;input&gt;6
1 2 4 5 6 7
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="1987" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="1988" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="1989">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="1990" />
                    </block>
                    <actions class="linked-hash-map" id="1991">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="1992">
                      <string>31-77-216243</string>
                      <string>30-77-216243</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>34</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.3373493975903614</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="1993">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="1994">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="1995">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="1996">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="1997">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="1998">
                  <id>60943</id>
                  <title>Queue and Stack # Getting the max element of a stack</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60943</progress>
                  <createDate id="1999">2017-11-10 17:50:40.0 UTC</createDate>
                  <updateDate id="2000">2018-02-18 08:13:58.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60943-1</discussionProxy>
                  <discussionThreads id="2001">
                    <string>76-60943-1</string>
                  </discussionThreads>
                  <steps id="2002">
                    <long>239927</long>
                  </steps>
                  <actions class="linked-hash-map" id="2003" />
                  <tags id="2004" />
                  <requiredTags id="2005" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2006">
                    <string>31-76-60943</string>
                    <string>30-76-60943</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>7</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Getting-the-max-element-of-a-stack-60943</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60943</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2007">
                <StepNode id="2008">
                  <parent class="LessonNode" reference="1993" />
                  <data class="Step" id="2009">
                    <id>239927</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239927</progress>
                    <createDate id="2010">2017-11-10 18:07:03.0 UTC</createDate>
                    <updateDate id="2011">2018-02-18 08:13:56.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-239927-1</discussionProxy>
                    <discussionThreads id="2012">
                      <string>77-239927-1</string>
                      <string>77-239927-2</string>
                    </discussionThreads>
                    <lesson>60943</lesson>
                    <status>ready</status>
                    <block id="2013">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program simulating a stack that can effectively return the current max element. Your program should read a sequence of commands of different types from the standard input.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;There are three types of commands:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;push v&lt;/b&gt; - add an element (v) to a top of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;pop&lt;/b&gt; - remove the top element of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;max&lt;/b&gt; - return the current max in the stack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The time complexity of these operations should not depend on the stack size (&lt;b&gt;&lt;/b&gt;&lt;b&gt;constant time, &lt;/b&gt;&lt;b&gt;O(1)&lt;/b&gt;).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Hint: &lt;/b&gt;you may use several standard stacks to write a solution.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the number of commands. Next lines contain one of the following commands:&lt;b&gt; push v, pop, max&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output the current max for each command &lt;b&gt;max&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="2014">
                        <samples id="2015">
                          <Sample id="2016">&lt;input&gt;5
push 2
push 1
max
pop
max
&lt;/input&gt;&lt;output&gt;2
2&lt;/output&gt;</Sample>
                          <Sample id="2017">&lt;input&gt;5
push 1
push 2
max
pop
max
&lt;/input&gt;&lt;output&gt;2
1&lt;/output&gt;</Sample>
                          <Sample id="2018">&lt;input&gt;10
push 2
push 3
push 9
push 7
push 2
max
max
max
pop
max
&lt;/input&gt;&lt;output&gt;9
9
9
9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2019" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2020" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2021">
                              <time>2</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2022" />
                    </block>
                    <actions class="linked-hash-map" id="2023">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2024">
                      <string>31-77-239927</string>
                      <string>30-77-239927</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.05063291139240506</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2025">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2026">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2027">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2028">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2029">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2030">
                  <id>60802</id>
                  <title>Queue and Stack # The LIFO principle in action</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60802</progress>
                  <createDate id="2031">2017-11-08 16:54:15.0 UTC</createDate>
                  <updateDate id="2032">2018-02-18 08:08:44.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60802-1</discussionProxy>
                  <discussionThreads id="2033">
                    <string>76-60802-1</string>
                  </discussionThreads>
                  <steps id="2034">
                    <long>239355</long>
                  </steps>
                  <actions class="linked-hash-map" id="2035" />
                  <tags id="2036" />
                  <requiredTags id="2037" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2038">
                    <string>31-76-60802</string>
                    <string>30-76-60802</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>479</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-The-LIFO-principle-in-action-60802</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60802</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2039">
                <StepNode id="2040">
                  <parent class="LessonNode" reference="2025" />
                  <data class="Step" id="2041">
                    <id>239355</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239355</progress>
                    <createDate id="2042">2017-11-08 17:04:17.0 UTC</createDate>
                    <updateDate id="2043">2018-02-18 08:08:43.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-239355-1</discussionProxy>
                    <discussionThreads id="2044">
                      <string>77-239355-1</string>
                      <string>77-239355-2</string>
                    </discussionThreads>
                    <lesson>60802</lesson>
                    <status>ready</status>
                    <block id="2045">
                      <name>code</name>
                      <text>Write a program that reads the input elements and outputs them in the reverse order.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first string contains the number of elements. Each line followed the first one contains an element.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="2046">
                        <samples id="2047">
                          <Sample id="2048">&lt;input&gt;3
1
2
3&lt;/input&gt;&lt;output&gt;3
2
1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2049" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2050" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2051">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2052" />
                    </block>
                    <actions class="linked-hash-map" id="2053">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2054">
                      <string>31-77-239355</string>
                      <string>30-77-239355</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.35</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2055">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2056">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2057">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2058">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2059">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2060">
                  <id>60943</id>
                  <title>Queue and Stack # Getting the max element of a stack</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60943</progress>
                  <createDate id="2061">2017-11-10 17:50:40.0 UTC</createDate>
                  <updateDate id="2062">2018-02-18 08:13:58.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-60943-1</discussionProxy>
                  <discussionThreads id="2063">
                    <string>76-60943-1</string>
                  </discussionThreads>
                  <steps id="2064">
                    <long>239927</long>
                  </steps>
                  <actions class="linked-hash-map" id="2065" />
                  <tags id="2066" />
                  <requiredTags id="2067" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2068">
                    <string>31-76-60943</string>
                    <string>30-76-60943</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>7</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Getting-the-max-element-of-a-stack-60943</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60943</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2069">
                <StepNode id="2070">
                  <parent class="LessonNode" reference="2055" />
                  <data class="Step" id="2071">
                    <id>239927</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239927</progress>
                    <createDate id="2072">2017-11-10 18:07:03.0 UTC</createDate>
                    <updateDate id="2073">2018-02-18 08:13:56.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-239927-1</discussionProxy>
                    <discussionThreads id="2074">
                      <string>77-239927-1</string>
                      <string>77-239927-2</string>
                    </discussionThreads>
                    <lesson>60943</lesson>
                    <status>ready</status>
                    <block id="2075">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program simulating a stack that can effectively return the current max element. Your program should read a sequence of commands of different types from the standard input.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;There are three types of commands:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;push v&lt;/b&gt; - add an element (v) to a top of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;pop&lt;/b&gt; - remove the top element of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;max&lt;/b&gt; - return the current max in the stack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The time complexity of these operations should not depend on the stack size (&lt;b&gt;&lt;/b&gt;&lt;b&gt;constant time, &lt;/b&gt;&lt;b&gt;O(1)&lt;/b&gt;).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Hint: &lt;/b&gt;you may use several standard stacks to write a solution.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the number of commands. Next lines contain one of the following commands:&lt;b&gt; push v, pop, max&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output the current max for each command &lt;b&gt;max&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="2076">
                        <samples id="2077">
                          <Sample id="2078">&lt;input&gt;5
push 2
push 1
max
pop
max
&lt;/input&gt;&lt;output&gt;2
2&lt;/output&gt;</Sample>
                          <Sample id="2079">&lt;input&gt;5
push 1
push 2
max
pop
max
&lt;/input&gt;&lt;output&gt;2
1&lt;/output&gt;</Sample>
                          <Sample id="2080">&lt;input&gt;10
push 2
push 3
push 9
push 7
push 2
max
max
max
pop
max
&lt;/input&gt;&lt;output&gt;9
9
9
9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2081" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2082" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2083">
                              <time>2</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2084" />
                    </block>
                    <actions class="linked-hash-map" id="2085">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2086">
                      <string>31-77-239927</string>
                      <string>30-77-239927</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.05063291139240506</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2087">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2088">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2089">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2090">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2091">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2092">
                  <id>60804</id>
                  <title>Queue and Stack # Which brackets are balanced</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60804</progress>
                  <createDate id="2093">2017-11-08 16:54:29.0 UTC</createDate>
                  <updateDate id="2094">2018-02-18 08:17:36.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-60804-1</discussionProxy>
                  <discussionThreads id="2095">
                    <string>76-60804-1</string>
                  </discussionThreads>
                  <steps id="2096">
                    <long>239358</long>
                  </steps>
                  <actions class="linked-hash-map" id="2097" />
                  <tags id="2098" />
                  <requiredTags id="2099" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2100">
                    <string>31-76-60804</string>
                    <string>30-76-60804</string>
                  </subscriptions>
                  <viewedBy>18</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Which-brackets-are-balanced-60804</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60804</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2101">
                <StepNode id="2102">
                  <parent class="LessonNode" reference="2087" />
                  <data class="Step" id="2103">
                    <id>239358</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239358</progress>
                    <createDate id="2104">2017-11-08 17:46:37.0 UTC</createDate>
                    <updateDate id="2105">2018-02-18 07:38:04.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-239358-1</discussionProxy>
                    <discussionThreads id="2106">
                      <string>77-239358-1</string>
                      <string>77-239358-2</string>
                    </discussionThreads>
                    <lesson>60804</lesson>
                    <status>ready</status>
                    <block id="2107">
                      <name>code</name>
                      <text>Given a string consisting of brackets, write a program to examine whether the pairs and the orders of &quot;{&quot;, &quot;}&quot;, &quot;(&quot;, &quot;)&quot;, &quot;[&quot;, &quot;]&quot; are correct (balanced). For example, the program should print &lt;code&gt;true&lt;/code&gt; for the string &lt;code&gt;[()]{}{[()()]()}&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;()[]}&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The classic algorithm for solving this problem relies on using a stack.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;create an instance of a stack;&lt;br&gt;&lt;/li&gt;&lt;li&gt;traverse the input string;&lt;ol&gt;&lt;li&gt;if the current character is a starting bracket &quot;(&quot; or &quot;{&quot; or &quot;{&quot; then push it to the stack;&lt;/li&gt;&lt;li&gt;if the current is a closing bracket &quot;)&quot; or &quot;}&quot; or &quot;]&quot; then remove (pop) the top element from the stack; if the popped bracket is the matching starting bracket then fine else parenthesis are not balanced;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;after completing traversal, if there are some starting brackets left in the stack, then the parenthesis are not balanced.&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="2108">
                        <samples id="2109">
                          <Sample id="2110">&lt;input&gt;([][])&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="2111">&lt;input&gt;([](){([])})&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="2112">&lt;input&gt;{{[()]]&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2113" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2114" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2115">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2116" />
                    </block>
                    <actions class="linked-hash-map" id="2117">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2118">
                      <string>31-77-239358</string>
                      <string>30-77-239358</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>20</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.25</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2119">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2120">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2121">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2122">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2123">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2124">
                  <id>61349</id>
                  <title>Throwing exceptions # Throwing financial exceptions</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61349</progress>
                  <createDate id="2125">2017-11-16 14:57:08.0 UTC</createDate>
                  <updateDate id="2126">2018-02-18 13:43:33.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61349-1</discussionProxy>
                  <discussionThreads id="2127">
                    <string>76-61349-1</string>
                  </discussionThreads>
                  <steps id="2128">
                    <long>241519</long>
                  </steps>
                  <actions class="linked-hash-map" id="2129" />
                  <tags id="2130" />
                  <requiredTags id="2131" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2132">
                    <string>31-76-61349</string>
                    <string>30-76-61349</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>687</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Throwing-exceptions-Throwing-financial-exceptions-61349</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61349</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2133">
                <StepNode id="2134">
                  <parent class="LessonNode" reference="2119" />
                  <data class="Step" id="2135">
                    <id>241519</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-241519</progress>
                    <createDate id="2136">2017-11-16 15:32:48.0 UTC</createDate>
                    <updateDate id="2137">2018-02-18 13:39:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-241519-1</discussionProxy>
                    <discussionThreads id="2138">
                      <string>77-241519-1</string>
                      <string>77-241519-2</string>
                    </discussionThreads>
                    <lesson>61349</lesson>
                    <status>ready</status>
                    <block id="2139">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Imagine you write a method in the core of a financial application. It allows users transfer money between two accounts. But there are some problems. To process them you have been developed a custom hierarchy of exception for your application.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;FinAppException&lt;/b&gt; is the base for a hierarchy of application exceptions; it extends &lt;b&gt;java.lang.Exception&lt;/b&gt;;&lt;/li&gt;&lt;li&gt;&lt;b&gt;NotEnoughMoneyException&lt;/b&gt; extends &lt;b&gt;FinAppException&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;AccountLockedException&lt;/b&gt; extends &lt;b&gt;FinAppException&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now you should implement the method &lt;b&gt;checkTransferMoney &lt;/b&gt;and&lt;b&gt; &lt;/b&gt;﻿perhabs modify its declaration. The has four parameters: &lt;b&gt;fromBalance&lt;/b&gt;, &lt;b&gt;fromLocked&lt;/b&gt;, &lt;b&gt;toLocked&lt;/b&gt; and &lt;b&gt;sum&lt;/b&gt;. If it's not possible to transfer money, the method must throw an exception.&lt;/p&gt;&lt;p&gt;If &lt;b&gt;from&lt;/b&gt; account has not enough money, the method should throw &lt;b&gt;NotEnoughMoneyException&lt;/b&gt;. If any account (from or to) is locked the method should throw &lt;b&gt;AccountLockedException&lt;/b&gt;. If the sum is negative or zero, it must throw &lt;b&gt;java.lang.IllegalArgumentException&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;&lt;p&gt;All classes for exceptions will be available during testing with the default constructor (no arguments). If you throw unsuitable exceptions a test will be failed.&lt;/p&gt;</text>
                      <options id="2140">
                        <samples id="2141" />
                        <codeTemplates class="LinkedTreeMap" id="2142" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void checkTransferMoney(long fromBalance, boolean fromLocked, boolean toLocked, long sum) {

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2143" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2144">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2145" />
                    </block>
                    <actions class="linked-hash-map" id="2146">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2147">
                      <string>31-77-241519</string>
                      <string>30-77-241519</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.3709677419354839</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2148">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2149">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2150">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2151">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2152">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2153">
                  <id>56098</id>
                  <title>Interface # Account Service</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56098</progress>
                  <createDate id="2154">2017-09-12 14:46:03.0 UTC</createDate>
                  <updateDate id="2155">2018-03-14 04:57:57.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56098-1</discussionProxy>
                  <discussionThreads id="2156">
                    <string>76-56098-1</string>
                  </discussionThreads>
                  <steps id="2157">
                    <long>206641</long>
                  </steps>
                  <actions class="linked-hash-map" id="2158" />
                  <tags id="2159" />
                  <requiredTags id="2160" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2161">
                    <string>31-76-56098</string>
                    <string>30-76-56098</string>
                  </subscriptions>
                  <viewedBy>35</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>981</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Interface-Account-Service-56098</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56098</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2162">
                <StepNode id="2163">
                  <parent class="LessonNode" reference="2148" />
                  <data class="Step" id="2164">
                    <id>206641</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206641</progress>
                    <createDate id="2165">2017-07-31 16:57:00.0 UTC</createDate>
                    <updateDate id="2166">2018-03-14 04:57:57.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206641-1</discussionProxy>
                    <discussionThreads id="2167">
                      <string>77-206641-1</string>
                      <string>77-206641-2</string>
                    </discussionThreads>
                    <lesson>56098</lesson>
                    <status>ready</status>
                    <block id="2168">
                      <name>code</name>
                      <text>&lt;p&gt;Given an interface named &lt;code&gt;AccountService&lt;/code&gt;. The interface has two abstract methods:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;findAccountByOwnerId(long id)&lt;/code&gt; returns &lt;code&gt;Account&lt;/code&gt; found by owner id or &lt;code&gt;null&lt;/code&gt;.&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;countAccountsWithBalanceGreaterThan(long balance)&lt;/code&gt; returns number of accounts with the balance greater than the passed value.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also there are two another classes: &lt;code&gt;Account&lt;/code&gt; (id, balance, owner) and &lt;code&gt;User&lt;/code&gt; (id, firstName, lastName). See the provided code template.&lt;/p&gt;&lt;p&gt;You need to implement the &lt;code&gt;AccountService&lt;/code&gt; interface and its two methods. Your implementation must be named &lt;code&gt;AccountServiceImpl&lt;/code&gt;. It should have a constructor with one argument - an array of accounts. The implementation must keep the array inside. The first method should search an account by owner id in the array, the second one - count number of accounts by condition in the array.&lt;/p&gt;&lt;p&gt;An example of creating an instance:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Account[] accounts = ...&lt;br&gt;AccountService service = new AccountServiceImpl(accounts);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not make classes and the interface &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="2169">
                        <samples id="2170" />
                        <codeTemplates class="LinkedTreeMap" id="2171" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>interface AccountService {
    /**
     * It finds an account by owner id
     * @param id owner unique identifier
     * @return account or null
     */
    Account findAccountByOwnerId(long id);
    /**
     * It count the number of account with balance &gt; the given value
     * @param value
     * @return the number of accounts
     */
    long countAccountsWithBalanceGreaterThan(long value);
}

// Declare and implement your AccountServiceImpl here

class Account {

    private long id;
    private long balance;
    private User owner;

    public Account(long id, long balance, User owner) {
        this.id = id;
        this.balance = balance;
        this.owner = owner;
    }

    public long getId() { return id; }

    public long getBalance() { return balance; }

    public User getOwner() { return owner; }
}

class User {

    private long id;
    private String firstName;
    private String lastName;

    public User(long id, String firstName, String lastName) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public long getId() { return id; }

    public String getFirstName() { return firstName; }

    public String getLastName() { return lastName; }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2172" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2173">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2174" />
                    </block>
                    <actions class="linked-hash-map" id="2175">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2176">
                      <string>31-77-206641</string>
                      <string>30-77-206641</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>35</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.2916666666666667</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2177">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2178">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2179">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2180">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2181">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2182">
                  <id>64941</id>
                  <title>Interface # Compact strings with AsciiCharSequence</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64941</progress>
                  <createDate id="2183">2017-12-24 12:22:52.0 UTC</createDate>
                  <updateDate id="2184">2018-02-13 17:43:49.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64941-1</discussionProxy>
                  <discussionThreads id="2185">
                    <string>76-64941-1</string>
                  </discussionThreads>
                  <steps id="2186">
                    <long>255001</long>
                  </steps>
                  <actions class="linked-hash-map" id="2187" />
                  <tags id="2188" />
                  <requiredTags id="2189" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2190">
                    <string>31-76-64941</string>
                    <string>30-76-64941</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>14</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1658</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Interface-Compact-strings-with-AsciiCharSequence-64941</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>1</abuseCount>
                  <vote>76-64941</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2191">
                <StepNode id="2192">
                  <parent class="LessonNode" reference="2177" />
                  <data class="Step" id="2193">
                    <id>255001</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-255001</progress>
                    <createDate id="2194">2017-12-24 12:42:48.0 UTC</createDate>
                    <updateDate id="2195">2017-12-24 12:51:54.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-255001-1</discussionProxy>
                    <discussionThreads id="2196">
                      <string>77-255001-1</string>
                      <string>77-255001-2</string>
                    </discussionThreads>
                    <lesson>64941</lesson>
                    <status>ready</status>
                    <block id="2197">
                      <name>code</name>
                      <text>Write a class named &lt;code&gt;AsciiCharSequence&lt;/code&gt; that implements compact storage ASCII-character sequences. Their codes can be stored in one single byte, unlike Unicode characters.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In comparison with the standard &lt;code&gt;String&lt;/code&gt; class, your class will require twice less memory (before Java 9).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The class &lt;code&gt;AsciiCharSequence&lt;/code&gt; must:&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;implement the interface &lt;code&gt;java.lang.CharSequence&lt;/code&gt;;&lt;br&gt;&lt;/li&gt;&lt;li&gt;have a constructor that takes a byte array;&lt;br&gt;&lt;/li&gt;&lt;li&gt;define methods &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;charAt&lt;/code&gt;, &lt;code&gt;subSequence&lt;/code&gt;, and &lt;code&gt;toString&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The declaration of methods and their behaviour see in the desription of &lt;code&gt;java.lang.CharSequence&lt;/code&gt; (JavaDoc or sources).&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; the testing system, will always pass correct input parameters to overridden methods.&lt;/p&gt;&lt;p&gt;P.S. The feature is supported since Java 9 in standard strings. For details, see: &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.baeldung.com/java-9-compact-string&quot;&gt;http://www.baeldung.com/java-9-compact-string&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</text>
                      <options id="2198">
                        <samples id="2199" />
                        <codeTemplates class="LinkedTreeMap" id="2200" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public class AsciiCharSequence /* extends/implements */ {
    // implementation
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2201" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2202">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2203" />
                    </block>
                    <actions class="linked-hash-map" id="2204">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2205">
                      <string>31-77-255001</string>
                      <string>30-77-255001</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.21296296296296297</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2206">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2207">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2208">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2209">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2210">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2211">
                  <id>58585</id>
                  <title>Anonymous classes # Returning values from an anonymous class</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58585</progress>
                  <createDate id="2212">2017-10-12 13:57:56.0 UTC</createDate>
                  <updateDate id="2213">2018-02-20 22:18:25.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58585-1</discussionProxy>
                  <discussionThreads id="2214">
                    <string>76-58585-1</string>
                  </discussionThreads>
                  <steps id="2215">
                    <long>231252</long>
                  </steps>
                  <actions class="linked-hash-map" id="2216" />
                  <tags id="2217" />
                  <requiredTags id="2218" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2219">
                    <string>31-76-58585</string>
                    <string>30-76-58585</string>
                  </subscriptions>
                  <viewedBy>19</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>208</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Anonymous-classes-Returning-values-from-an-anonymous-class-58585</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58585</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2220">
                <StepNode id="2221">
                  <parent class="LessonNode" reference="2206" />
                  <data class="Step" id="2222">
                    <id>231252</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-231252</progress>
                    <createDate id="2223">2017-10-13 04:16:56.0 UTC</createDate>
                    <updateDate id="2224">2018-02-20 22:18:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-231252-1</discussionProxy>
                    <discussionThreads id="2225">
                      <string>77-231252-1</string>
                      <string>77-231252-2</string>
                    </discussionThreads>
                    <lesson>58585</lesson>
                    <status>ready</status>
                    <block id="2226">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;There is an interface:&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;interface Returner {&lt;br&gt;    &lt;br&gt;    public String returnString();&lt;br&gt;    &lt;br&gt;    public int returnInt();&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;You should create an anonymous class that implements the interface and assign the instance to the variable &lt;b&gt;returner&lt;/b&gt;. The anonymous class must override both methods of the interface. The method &lt;b&gt;returnString&lt;/b&gt; should capture the string variable &lt;b&gt;str&lt;/b&gt; from the context and return it, the second method should capture the integer variable&lt;b&gt; number&lt;/b&gt; from the context and return it. These variables will be accessible during testing.&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;Use the provided code template, do not write the given interace.&lt;/div&gt;</text>
                      <options id="2227">
                        <samples id="2228" />
                        <codeTemplates class="LinkedTreeMap" id="2229" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>Returner returner = /* create an instance of an anonymous class here, 
                       do not forget ; on the end;
                       variables str and number will be accessible during testing */</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2230" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2231">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2232" />
                    </block>
                    <actions class="linked-hash-map" id="2233">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2234">
                      <string>31-77-231252</string>
                      <string>30-77-231252</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>19</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.8260869565217391</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2235">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2236">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2237">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2238">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2239">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2240">
                  <id>58584</id>
                  <title>Anonymous classes # A long process</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58584</progress>
                  <createDate id="2241">2017-10-12 13:57:52.0 UTC</createDate>
                  <updateDate id="2242">2018-02-20 22:17:28.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58584-1</discussionProxy>
                  <discussionThreads id="2243">
                    <string>76-58584-1</string>
                  </discussionThreads>
                  <steps id="2244">
                    <long>231000</long>
                  </steps>
                  <actions class="linked-hash-map" id="2245" />
                  <tags id="2246" />
                  <requiredTags id="2247" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2248">
                    <string>31-76-58584</string>
                    <string>30-76-58584</string>
                  </subscriptions>
                  <viewedBy>20</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1057</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Anonymous-classes-A-long-process-58584</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58584</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2249">
                <StepNode id="2250">
                  <parent class="LessonNode" reference="2235" />
                  <data class="Step" id="2251">
                    <id>231000</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-231000</progress>
                    <createDate id="2252">2017-10-12 14:34:51.0 UTC</createDate>
                    <updateDate id="2253">2018-02-20 22:17:28.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-231000-1</discussionProxy>
                    <discussionThreads id="2254">
                      <string>77-231000-1</string>
                      <string>77-231000-2</string>
                    </discussionThreads>
                    <lesson>58584</lesson>
                    <status>ready</status>
                    <block id="2255">
                      <name>code</name>
                      <text>A program system manages a long process. To start the process you should invoke the static method &lt;b&gt;startLongProcess&lt;/b&gt; that takes a callback. Here is the declaration of this method:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;public static void startLongProcess(Callback callback)&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The &lt;b&gt;Callback&lt;/b&gt; interface with three methods:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;interface Callback {&lt;br&gt;    &lt;br&gt;    void onStarted();&lt;br&gt;    &lt;br&gt;    void onStopped(String cause);&lt;br&gt;    &lt;br&gt;    void onFinished(int code);&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt; &lt;br&gt;&lt;/div&gt;&lt;div&gt;You should create an anonymous class that implements the &lt;b&gt;Callback&lt;/b&gt; interface and pass the instance to the method &lt;b&gt;startLongProcess&lt;/b&gt; as an argument. The method will call the passed callbacks at different stages of the process.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The anonymous class must override all methods of the &lt;b&gt;Callback&lt;/b&gt; interface (otherwise the code won't be compiled).&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;The method &lt;b&gt;onStarted&lt;/b&gt; must print the message &lt;b&gt;&quot;The process started&quot;&lt;/b&gt; in the standard output.&lt;br&gt;&lt;/li&gt;&lt;li&gt;The method &lt;b&gt;onStopped&lt;/b&gt; takes a cause and should print it to the standard output.&lt;/li&gt;&lt;li&gt;The method &lt;b&gt;onFinished&lt;/b&gt; takes a code of the process completion. It should print &lt;b&gt;&quot;The process successfully finished&quot;&lt;/b&gt; if the process is finished with the code 0, otherwise, the method should print the text &lt;b&gt;&quot;The process is finished with error: &quot;&lt;/b&gt; plus the given code (for example, &lt;b&gt;&quot;The process is finished with error: 43&quot;&lt;/b&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;All strings must be printed without &quot;&quot;. Each message in a new line.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided code template, do not write the given class and the method.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;If the instance (&lt;b&gt;callback&lt;/b&gt;) of your anonymous class is created correctly, after calling the following code:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;callback.onStarted();&lt;br&gt;callback.onFinished(0);&lt;/code&gt;&lt;/pre&gt; &lt;br&gt;&lt;/div&gt;&lt;div&gt;you will get the following output:&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;The process started&lt;br&gt;The process successfully finished&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</text>
                      <options id="2256">
                        <samples id="2257" />
                        <codeTemplates class="LinkedTreeMap" id="2258" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>startLongProcess(/* pass your callback here */);</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2259" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2260">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2261" />
                    </block>
                    <actions class="linked-hash-map" id="2262">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2263">
                      <string>31-77-231000</string>
                      <string>30-77-231000</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>20</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.2571428571428571</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2264">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2265">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2266">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2267">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2268">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2269">
                  <id>58673</id>
                  <title>Anonymous classes # Output names of the methods</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58673</progress>
                  <createDate id="2270">2017-10-13 15:04:46.0 UTC</createDate>
                  <updateDate id="2271">2018-02-20 22:20:34.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58673-1</discussionProxy>
                  <discussionThreads id="2272">
                    <string>76-58673-1</string>
                  </discussionThreads>
                  <steps id="2273">
                    <long>231390</long>
                  </steps>
                  <actions class="linked-hash-map" id="2274" />
                  <tags id="2275" />
                  <requiredTags id="2276" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2277">
                    <string>31-76-58673</string>
                    <string>30-76-58673</string>
                  </subscriptions>
                  <viewedBy>17</viewedBy>
                  <passedBy>14</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>454</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Anonymous-classes-Output-names-of-the-methods-58673</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58673</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2278">
                <StepNode id="2279">
                  <parent class="LessonNode" reference="2264" />
                  <data class="Step" id="2280">
                    <id>231390</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-231390</progress>
                    <createDate id="2281">2017-10-13 15:13:52.0 UTC</createDate>
                    <updateDate id="2282">2018-02-20 22:20:33.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-231390-1</discussionProxy>
                    <discussionThreads id="2283">
                      <string>77-231390-1</string>
                      <string>77-231390-2</string>
                    </discussionThreads>
                    <lesson>58673</lesson>
                    <status>ready</status>
                    <block id="2284">
                      <name>code</name>
                      <text>There is an abstract class:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;abstract class SuperClass {&lt;br&gt;    &lt;br&gt;    public static void method1() { }&lt;br&gt;    &lt;br&gt;    public void method2() { }&lt;br&gt;    &lt;br&gt;    public abstract void method3();&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt; &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;You should create an anonymous class that extends this abstract class and assign it to the &lt;b&gt;instance&lt;/b&gt; variable. The anonymous class should override methods which can be overridden. Each overridden method must print its name to the standard output in a new line without parentheses &quot;()&quot;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;An output example:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;method1
method2
...
methodN&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</text>
                      <options id="2285">
                        <samples id="2286" />
                        <codeTemplates class="LinkedTreeMap" id="2287" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>SuperClass instance = /* create an instance of an anonymous class here, 
                         do not forget ; on the end */</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2288" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2289">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2290" />
                    </block>
                    <actions class="linked-hash-map" id="2291">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2292">
                      <string>31-77-231390</string>
                      <string>30-77-231390</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>17</viewedBy>
                    <passedBy>14</passedBy>
                    <correctRatio>0.42424242424242425</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2293">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2294">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2295">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2296">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2297">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2298">
                  <id>58582</id>
                  <title>Anonymous classes # Iterations</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58582</progress>
                  <createDate id="2299">2017-10-12 13:57:39.0 UTC</createDate>
                  <updateDate id="2300">2018-04-04 15:34:16.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-58582-1</discussionProxy>
                  <discussionThreads id="2301">
                    <string>76-58582-1</string>
                  </discussionThreads>
                  <steps id="2302">
                    <long>231078</long>
                  </steps>
                  <actions class="linked-hash-map" id="2303" />
                  <tags id="2304" />
                  <requiredTags id="2305" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2306">
                    <string>31-76-58582</string>
                    <string>30-76-58582</string>
                  </subscriptions>
                  <viewedBy>18</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>510</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Anonymous-classes-Iterations-58582</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58582</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2307">
                <StepNode id="2308">
                  <parent class="LessonNode" reference="2293" />
                  <data class="Step" id="2309">
                    <id>231078</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-231078</progress>
                    <createDate id="2310">2017-10-12 15:09:44.0 UTC</createDate>
                    <updateDate id="2311">2018-04-04 15:34:12.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-231078-1</discussionProxy>
                    <discussionThreads id="2312">
                      <string>77-231078-1</string>
                      <string>77-231078-2</string>
                    </discussionThreads>
                    <lesson>58582</lesson>
                    <status>ready</status>
                    <block id="2313">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;There are two static methods:&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;1) static void performIterationsWithCallback(int numberOfIterations, LoopCallback callback)&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;2) static void startIterations(int numberOfIterations)&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first method takes a number of iterations for a loop and a callback that is called on each iteration. The second method takes a number of iterations, creates a callback and pass them to the first method.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;The &lt;b&gt;Callback&lt;/b&gt; interface with a single method:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;interface LoopCallback {&lt;br&gt;    &lt;br&gt;    void onNewIteration(int iteration);&lt;br&gt;}&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You should implement the second method. It must create an instance of an anonymous class that implements &lt;b&gt;LoopCallback&lt;/b&gt; and pass it to the first method. The overridden method &lt;b&gt;onNewIteration&lt;/b&gt; should output the number of iteration to the standard output in a new line. For example:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;Iteration: 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided code template.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="2314">
                        <samples id="2315" />
                        <codeTemplates class="LinkedTreeMap" id="2316" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>static void performIterationsWithCallback(int numberOfIterations, LoopCallback callback) {
    for (int i = 0; i &lt; numberOfIterations; i++) {
        callback.onNewIteration(i);
    }
}

static void startIterations(int numberOfIterations) {
    // invoke the method performIterationsWithCallback here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2317" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2318">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2319" />
                    </block>
                    <actions class="linked-hash-map" id="2320">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2321">
                      <string>31-77-231078</string>
                      <string>30-77-231078</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>18</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.2537313432835821</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2322">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2323">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2324">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2325">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2326">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2327">
                  <id>57482</id>
                  <title>Exception handling # String to double conversion</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57482</progress>
                  <createDate id="2328">2017-09-26 04:29:56.0 UTC</createDate>
                  <updateDate id="2329">2018-03-25 11:25:28.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57482-1</discussionProxy>
                  <discussionThreads id="2330">
                    <string>76-57482-1</string>
                  </discussionThreads>
                  <steps id="2331">
                    <long>225034</long>
                  </steps>
                  <actions class="linked-hash-map" id="2332" />
                  <tags id="2333" />
                  <requiredTags id="2334" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2335">
                    <string>31-76-57482</string>
                    <string>30-76-57482</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>24</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>209</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Exception-handling-String-to-double-conversion-57482</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57482</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2336">
                <StepNode id="2337">
                  <parent class="LessonNode" reference="2322" />
                  <data class="Step" id="2338">
                    <id>225034</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-225034</progress>
                    <createDate id="2339">2017-09-26 04:33:58.0 UTC</createDate>
                    <updateDate id="2340">2018-03-25 11:25:27.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-225034-1</discussionProxy>
                    <discussionThreads id="2341">
                      <string>77-225034-1</string>
                      <string>77-225034-2</string>
                    </discussionThreads>
                    <lesson>57482</lesson>
                    <status>ready</status>
                    <block id="2342">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a method that takes a string and converts it to a double. The input string may be null or has an unsuitable format. In this case, a runtime exception may occur and the program fails.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Fix the method. It should catch any exceptions and return the default value 0 (zero) if an exception occurred.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="2343">
                        <samples id="2344">
                          <Sample id="2345">&lt;input&gt;123.0
&lt;/input&gt;&lt;output&gt;123.0&lt;/output&gt;</Sample>
                          <Sample id="2346">&lt;input&gt;15.5
&lt;/input&gt;&lt;output&gt;15.5&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2347" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>/**
 * It returns a double value or 0.0 if an exception occurred
 */
public static double convertStringToDouble(String s) {
    double d = Double.parseDouble(s);
    return d;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2348" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2349">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2350" />
                    </block>
                    <actions class="linked-hash-map" id="2351">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2352">
                      <string>31-77-225034</string>
                      <string>30-77-225034</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>24</passedBy>
                    <correctRatio>0.4444444444444444</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2353">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2354">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2355">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2356">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2357">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2358">
                  <id>57512</id>
                  <title>Exception handling # Converting a sequence of numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57512</progress>
                  <createDate id="2359">2017-09-26 12:47:07.0 UTC</createDate>
                  <updateDate id="2360">2018-02-18 14:00:34.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57512-1</discussionProxy>
                  <discussionThreads id="2361">
                    <string>76-57512-1</string>
                  </discussionThreads>
                  <steps id="2362">
                    <long>225179</long>
                  </steps>
                  <actions class="linked-hash-map" id="2363" />
                  <tags id="2364" />
                  <requiredTags id="2365" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2366">
                    <string>31-76-57512</string>
                    <string>30-76-57512</string>
                  </subscriptions>
                  <viewedBy>25</viewedBy>
                  <passedBy>18</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1889</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Exception-handling-Converting-a-sequence-of-numbers-57512</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57512</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2367">
                <StepNode id="2368">
                  <parent class="LessonNode" reference="2353" />
                  <data class="Step" id="2369">
                    <id>225179</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-225179</progress>
                    <createDate id="2370">2017-09-26 12:49:33.0 UTC</createDate>
                    <updateDate id="2371">2018-02-18 14:00:33.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-225179-1</discussionProxy>
                    <discussionThreads id="2372">
                      <string>77-225179-1</string>
                      <string>77-225179-2</string>
                    </discussionThreads>
                    <lesson>57512</lesson>
                    <status>ready</status>
                    <block id="2373">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that reads a sequence of strings and converts them to integer numbers. Some input strings may &lt;/span&gt;have&lt;span&gt; an &lt;/span&gt;invalid&lt;span&gt; format, for instance: &quot;&lt;/span&gt;abc&lt;span&gt;&quot;. The sequence is ended by the 0 (zero).&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If a string can be converted to an integer number, output the number multiplied by 10, otherwise, output the string &lt;b&gt;&quot;Invalid user input: X&quot;&lt;/b&gt; where X is the input string. To better understand see examples below.&lt;/p&gt;&lt;p&gt;To implement this logic, use exception handling mechanism.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;A sequence of integer numbers and other strings, each in a new line&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;A sequence of integer numbers and warnings, each in a new line&lt;/p&gt;</text>
                      <options id="2374">
                        <samples id="2375">
                          <Sample id="2376">&lt;input&gt;11
12
13
0
&lt;/input&gt;&lt;output&gt;110
120
130&lt;/output&gt;</Sample>
                          <Sample id="2377">&lt;input&gt;11
abc
13
0
&lt;/input&gt;&lt;output&gt;110
Invalid user input: abc
130&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2378" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2379" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2380">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2381" />
                    </block>
                    <actions class="linked-hash-map" id="2382">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2383">
                      <string>31-77-225179</string>
                      <string>30-77-225179</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>25</viewedBy>
                    <passedBy>18</passedBy>
                    <correctRatio>0.32941176470588235</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2384">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2385">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2386">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2387">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2388">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2389">
                  <id>56025</id>
                  <title>Multi-dimensional array # Cinema</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56025</progress>
                  <createDate id="2390">2017-09-12 14:45:35.0 UTC</createDate>
                  <updateDate id="2391">2018-02-05 04:55:39.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56025-1</discussionProxy>
                  <discussionThreads id="2392">
                    <string>76-56025-1</string>
                  </discussionThreads>
                  <steps id="2393">
                    <long>216346</long>
                  </steps>
                  <actions class="linked-hash-map" id="2394" />
                  <tags id="2395" />
                  <requiredTags id="2396" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2397">
                    <string>31-76-56025</string>
                    <string>30-76-56025</string>
                  </subscriptions>
                  <viewedBy>41</viewedBy>
                  <passedBy>30</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1996</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Cinema-56025</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>2</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56025</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2398">
                <StepNode id="2399">
                  <parent class="LessonNode" reference="2384" />
                  <data class="Step" id="2400">
                    <id>216346</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216346</progress>
                    <createDate id="2401">2017-09-04 10:10:00.0 UTC</createDate>
                    <updateDate id="2402">2018-02-05 04:55:38.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216346-1</discussionProxy>
                    <discussionThreads id="2403">
                      <string>77-216346-1</string>
                      <string>77-216346-2</string>
                    </discussionThreads>
                    <lesson>56025</lesson>
                    <status>ready</status>
                    <block id="2404">
                      <name>code</name>
                      <text>&lt;p&gt;The cinema has n rows, each consisting of m seats (n and m do not exceed 20). The two-dimensional matrix stores the information on the sold tickets, number 1 means that the ticket for this place is already sold, the number 0 means that the place is available. You want to buy k tickets to the neighbouring seats in the same row. Find whether it can be done.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;On the input, the program gets the numbers n and m. Next go n lines, each containing m numbers (0 or 1), separated by spaces. Next goes the number k.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program should output the row number in which there are k consecutive available seats. If there are several such rows, output the number of the smallest such row. If there is no such row, output the number 0.&lt;/p&gt;</text>
                      <options id="2405">
                        <samples id="2406">
                          <Sample id="2407">&lt;input&gt;3 4
0 1 0 1
1 0 0 1
1 1 1 1
2&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2408" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2409" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2410">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2411" />
                    </block>
                    <actions class="linked-hash-map" id="2412">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2413">
                      <string>31-77-216346</string>
                      <string>30-77-216346</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>41</viewedBy>
                    <passedBy>30</passedBy>
                    <correctRatio>0.16666666666666666</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2414">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2415">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2416">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2417">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2418">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2419">
                  <id>56021</id>
                  <title>Multi-dimensional array # Fill the matrix by numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56021</progress>
                  <createDate id="2420">2017-09-12 14:45:34.0 UTC</createDate>
                  <updateDate id="2421">2018-02-05 04:48:00.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56021-1</discussionProxy>
                  <discussionThreads id="2422">
                    <string>76-56021-1</string>
                  </discussionThreads>
                  <steps id="2423">
                    <long>205424</long>
                  </steps>
                  <actions class="linked-hash-map" id="2424" />
                  <tags id="2425" />
                  <requiredTags id="2426" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2427">
                    <string>31-76-56021</string>
                    <string>30-76-56021</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1067</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Fill-the-matrix-by-numbers-56021</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56021</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2428">
                <StepNode id="2429">
                  <parent class="LessonNode" reference="2414" />
                  <data class="Step" id="2430">
                    <id>205424</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205424</progress>
                    <createDate id="2431">2017-07-23 12:54:23.0 UTC</createDate>
                    <updateDate id="2432">2017-09-12 14:45:34.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205424-1</discussionProxy>
                    <discussionThreads id="2433">
                      <string>77-205424-1</string>
                      <string>77-205424-2</string>
                    </discussionThreads>
                    <lesson>56021</lesson>
                    <status>ready</status>
                    <block id="2434">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;b&gt;Fill the matrix&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Given the number n, not greater than 100. Create the matrix of
size n×n and fill it by the following rule. Numbers 0 should be stored on the
primary diagonal. The two diagonals, adjacent to the primary one, should
contain numbers 1. The next two diagonals - numbers 2, etc.&lt;/p&gt;</text>
                      <options id="2435">
                        <samples id="2436">
                          <Sample id="2437">&lt;input&gt;5&lt;/input&gt;&lt;output&gt;0 1 2 3 4
1 0 1 2 3
2 1 0 1 2
3 2 1 0 1
4 3 2 1 0&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2438" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2439" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2440">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2441" />
                    </block>
                    <actions class="linked-hash-map" id="2442">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2443">
                      <string>31-77-205424</string>
                      <string>30-77-205424</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.417910447761194</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>2</variation>
                    <variationsCount>2</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2444">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2445">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2446">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2447">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2448">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2449">
                  <id>56019</id>
                  <title>Multi-dimensional array # Maximum element in a matrix</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56019</progress>
                  <createDate id="2450">2017-09-12 14:45:34.0 UTC</createDate>
                  <updateDate id="2451">2018-02-05 04:46:48.0 UTC</updateDate>
                  <discussionsCount>2</discussionsCount>
                  <discussionProxy>76-56019-1</discussionProxy>
                  <discussionThreads id="2452">
                    <string>76-56019-1</string>
                  </discussionThreads>
                  <steps id="2453">
                    <long>205420</long>
                  </steps>
                  <actions class="linked-hash-map" id="2454" />
                  <tags id="2455" />
                  <requiredTags id="2456" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2457">
                    <string>31-76-56019</string>
                    <string>30-76-56019</string>
                  </subscriptions>
                  <viewedBy>39</viewedBy>
                  <passedBy>29</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>751</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Maximum-element-in-a-matrix-56019</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56019</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2458">
                <StepNode id="2459">
                  <parent class="LessonNode" reference="2444" />
                  <data class="Step" id="2460">
                    <id>205420</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205420</progress>
                    <createDate id="2461">2017-07-23 12:52:11.0 UTC</createDate>
                    <updateDate id="2462">2018-02-05 04:46:47.0 UTC</updateDate>
                    <discussionsCount>2</discussionsCount>
                    <discussionProxy>77-205420-1</discussionProxy>
                    <discussionThreads id="2463">
                      <string>77-205420-1</string>
                      <string>77-205420-2</string>
                    </discussionThreads>
                    <lesson>56019</lesson>
                    <status>ready</status>
                    <block id="2464">
                      <name>code</name>
                      <text>&lt;p&gt;Find the indexes of the initial appearance of the maximum element
in a matrix.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Input
data format&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;On the input, the program receives the size of matrix n and m, and
then n lines having m integer numbers in each. n and m do not exceed 100.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Output
data format&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Output two numbers: the row number and the column number, in which
the greatest item in the two-dimensional array (matrix) is located. If there
are several such elements, output the one, which has the smaller row number;
and if row numbers are the same - the one having the smaller column number.&lt;/p&gt;</text>
                      <options id="2465">
                        <samples id="2466">
                          <Sample id="2467">&lt;input&gt;3 4
0 3 2 4
2 3 5 5
5 1 2 3&lt;/input&gt;&lt;output&gt;1 2&lt;/output&gt;</Sample>
                          <Sample id="2468">&lt;input&gt;2 2
-3 -2
-2 -1&lt;/input&gt;&lt;output&gt;1 1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2469" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2470" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2471">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2472" />
                    </block>
                    <actions class="linked-hash-map" id="2473">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2474">
                      <string>31-77-205420</string>
                      <string>30-77-205420</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>39</viewedBy>
                    <passedBy>29</passedBy>
                    <correctRatio>0.3333333333333333</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2475">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2476">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2477">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2478">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2479">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2480">
                  <id>56022</id>
                  <title>Multi-dimensional array # Rotate a rectange array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56022</progress>
                  <createDate id="2481">2017-09-12 14:45:34.0 UTC</createDate>
                  <updateDate id="2482">2018-02-05 04:53:37.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56022-1</discussionProxy>
                  <discussionThreads id="2483">
                    <string>76-56022-1</string>
                  </discussionThreads>
                  <steps id="2484">
                    <long>216351</long>
                  </steps>
                  <actions class="linked-hash-map" id="2485" />
                  <tags id="2486" />
                  <requiredTags id="2487" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2488">
                    <string>31-76-56022</string>
                    <string>30-76-56022</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>931</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Rotate-a-rectange-array-56022</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56022</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2489">
                <StepNode id="2490">
                  <parent class="LessonNode" reference="2475" />
                  <data class="Step" id="2491">
                    <id>216351</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216351</progress>
                    <createDate id="2492">2017-09-04 10:11:57.0 UTC</createDate>
                    <updateDate id="2493">2018-02-05 04:53:36.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216351-1</discussionProxy>
                    <discussionThreads id="2494">
                      <string>77-216351-1</string>
                      <string>77-216351-2</string>
                    </discussionThreads>
                    <lesson>56022</lesson>
                    <status>ready</status>
                    <block id="2495">
                      <name>code</name>
                      <text>&lt;p&gt;Given a rectangle array n×m in size. Rotate it by 90 degrees clockwise, by recording the result into the new array m×n in size.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Input the two numbers n and m, not exceeding 100, and then an array n×m in size.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Output the resulting array. Separate numbers by a single space in the output.&lt;/p&gt;</text>
                      <options id="2496">
                        <samples id="2497">
                          <Sample id="2498">&lt;input&gt;3 4
11 12 13 14
21 22 23 24
31 32 33 34&lt;/input&gt;&lt;output&gt;31 21 11 
32 22 12 
33 23 13 
34 24 14&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2499" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2500" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2501">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2502" />
                    </block>
                    <actions class="linked-hash-map" id="2503">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2504">
                      <string>31-77-216351</string>
                      <string>30-77-216351</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.45454545454545453</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2505">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2506">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2507">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2508">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2509">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2510">
                  <id>56026</id>
                  <title>Multi-dimensional array # Spiral</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56026</progress>
                  <createDate id="2511">2017-09-12 14:45:36.0 UTC</createDate>
                  <updateDate id="2512">2018-02-05 04:58:39.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56026-1</discussionProxy>
                  <discussionThreads id="2513">
                    <string>76-56026-1</string>
                  </discussionThreads>
                  <steps id="2514">
                    <long>216367</long>
                  </steps>
                  <actions class="linked-hash-map" id="2515" />
                  <tags id="2516" />
                  <requiredTags id="2517" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2518">
                    <string>31-76-56026</string>
                    <string>30-76-56026</string>
                  </subscriptions>
                  <viewedBy>20</viewedBy>
                  <passedBy>9</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Spiral-56026</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56026</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2519">
                <StepNode id="2520">
                  <parent class="LessonNode" reference="2505" />
                  <data class="Step" id="2521">
                    <id>216367</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216367</progress>
                    <createDate id="2522">2017-09-04 10:15:13.0 UTC</createDate>
                    <updateDate id="2523">2018-02-05 04:56:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216367-1</discussionProxy>
                    <discussionThreads id="2524">
                      <string>77-216367-1</string>
                    </discussionThreads>
                    <lesson>56026</lesson>
                    <status>ready</status>
                    <block id="2525">
                      <name>code</name>
                      <text>&lt;p&gt;Output the matrix of size $n \times n$, filled by the integers from $1$ to $n^2$ in a spiral, coming from the top left corner and
twisted clockwise, as shown in the example (here $n=5$).&lt;/p&gt;</text>
                      <options id="2526">
                        <samples id="2527">
                          <Sample id="2528">&lt;input&gt;5&lt;/input&gt;&lt;output&gt;1 2 3 4 5
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2529" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2530" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2531">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2532" />
                    </block>
                    <actions class="linked-hash-map" id="2533">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2534">
                      <string>31-77-216367</string>
                      <string>30-77-216367</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.38235294117647056</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2535">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2536">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2537">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2538">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2539">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2540">
                  <id>56023</id>
                  <title>Multi-dimensional array # Swap the columns</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56023</progress>
                  <createDate id="2541">2017-09-12 14:45:35.0 UTC</createDate>
                  <updateDate id="2542">2018-02-05 04:54:20.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56023-1</discussionProxy>
                  <discussionThreads id="2543">
                    <string>76-56023-1</string>
                  </discussionThreads>
                  <steps id="2544">
                    <long>205423</long>
                  </steps>
                  <actions class="linked-hash-map" id="2545" />
                  <tags id="2546" />
                  <requiredTags id="2547" />
                  <playlists id="2548" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2549">
                    <string>31-76-56023</string>
                    <string>30-76-56023</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies id="2550" />
                  <followers id="2551" />
                  <timeToComplete>559</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Swap-the-columns-56023</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56023</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2552">
                <StepNode id="2553">
                  <parent class="LessonNode" reference="2535" />
                  <data class="Step" id="2554">
                    <id>205423</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205423</progress>
                    <createDate id="2555">2017-07-23 12:53:49.0 UTC</createDate>
                    <updateDate id="2556">2018-02-05 04:54:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205423-1</discussionProxy>
                    <discussionThreads id="2557">
                      <string>77-205423-1</string>
                      <string>77-205423-2</string>
                    </discussionThreads>
                    <lesson>56023</lesson>
                    <status>ready</status>
                    <block id="2558">
                      <name>code</name>
                      <text>&lt;p&gt;Given a two-dimensional array (matrix) and
the two numbers: i and j. Swap the columns with indices i and j within the
matrix.&lt;/p&gt;

&lt;p&gt;Input contains matrix dimensions n and m,
not exceeding 100, then the elements of the matrix, then the indices i and j.&lt;/p&gt;</text>
                      <options id="2559">
                        <samples id="2560">
                          <Sample id="2561">&lt;input&gt;3 4
11 12 13 14
21 22 23 24
31 32 33 34
0 1&lt;/input&gt;&lt;output&gt;12 11 13 14
22 21 23 24
32 31 33 34&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2562" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2563" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2564">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2565" />
                    </block>
                    <actions class="linked-hash-map" id="2566">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2567">
                      <string>31-77-205423</string>
                      <string>30-77-205423</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.4772727272727273</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2568">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2569">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2570">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2571">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2572">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2573">
                  <id>56023</id>
                  <title>Multi-dimensional array # Swap the columns</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56023</progress>
                  <createDate id="2574">2017-09-12 14:45:35.0 UTC</createDate>
                  <updateDate id="2575">2018-02-05 04:54:20.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56023-1</discussionProxy>
                  <discussionThreads id="2576">
                    <string>76-56023-1</string>
                  </discussionThreads>
                  <steps id="2577">
                    <long>205423</long>
                  </steps>
                  <actions class="linked-hash-map" id="2578" />
                  <tags id="2579" />
                  <requiredTags id="2580" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2581">
                    <string>31-76-56023</string>
                    <string>30-76-56023</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>553</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Swap-the-columns-56023</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56023</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2582">
                <StepNode id="2583">
                  <parent class="LessonNode" reference="2568" />
                  <data class="Step" id="2584">
                    <id>205423</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205423</progress>
                    <createDate id="2585">2017-07-23 12:53:49.0 UTC</createDate>
                    <updateDate id="2586">2018-02-05 04:54:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205423-1</discussionProxy>
                    <discussionThreads id="2587">
                      <string>77-205423-1</string>
                      <string>77-205423-2</string>
                    </discussionThreads>
                    <lesson>56023</lesson>
                    <status>ready</status>
                    <block id="2588">
                      <name>code</name>
                      <text>&lt;p&gt;Given a two-dimensional array (matrix) and
the two numbers: i and j. Swap the columns with indices i and j within the
matrix.&lt;/p&gt;

&lt;p&gt;Input contains matrix dimensions n and m,
not exceeding 100, then the elements of the matrix, then the indices i and j.&lt;/p&gt;</text>
                      <options id="2589">
                        <samples id="2590">
                          <Sample id="2591">&lt;input&gt;3 4
11 12 13 14
21 22 23 24
31 32 33 34
0 1&lt;/input&gt;&lt;output&gt;12 11 13 14
22 21 23 24
32 31 33 34&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2592" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2593" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2594">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2595" />
                    </block>
                    <actions class="linked-hash-map" id="2596">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2597">
                      <string>31-77-205423</string>
                      <string>30-77-205423</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.4772727272727273</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2598">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2599">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2600">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2601">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2602">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2603">
                  <id>56018</id>
                  <title>Multi-dimensional array # Symmetric matrix</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56018</progress>
                  <createDate id="2604">2017-09-12 14:45:33.0 UTC</createDate>
                  <updateDate id="2605">2018-02-05 04:46:02.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56018-1</discussionProxy>
                  <discussionThreads id="2606">
                    <string>76-56018-1</string>
                  </discussionThreads>
                  <steps id="2607">
                    <long>205421</long>
                  </steps>
                  <actions class="linked-hash-map" id="2608" />
                  <tags id="2609" />
                  <requiredTags id="2610" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2611">
                    <string>31-76-56018</string>
                    <string>30-76-56018</string>
                  </subscriptions>
                  <viewedBy>46</viewedBy>
                  <passedBy>30</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>728</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Symmetric-matrix-56018</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56018</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2612">
                <StepNode id="2613">
                  <parent class="LessonNode" reference="2598" />
                  <data class="Step" id="2614">
                    <id>205421</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205421</progress>
                    <createDate id="2615">2017-07-23 12:52:36.0 UTC</createDate>
                    <updateDate id="2616">2018-02-05 04:46:02.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205421-1</discussionProxy>
                    <discussionThreads id="2617">
                      <string>77-205421-1</string>
                      <string>77-205421-2</string>
                    </discussionThreads>
                    <lesson>56018</lesson>
                    <status>ready</status>
                    <block id="2618">
                      <name>code</name>
                      <text>&lt;p&gt;Given the number n, not exceeding 10, and a matrix of size n × n. &lt;br&gt;&lt;/p&gt;&lt;p&gt;Check whether this matrix is symmetric in relation to the main diagonal. Output
the word “YES”, if it is symmetric and the word “NO” otherwise.&lt;/p&gt;</text>
                      <options id="2619">
                        <samples id="2620">
                          <Sample id="2621">&lt;input&gt;3
0 1 2
1 2 3
2 3 4&lt;/input&gt;&lt;output&gt;YES&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2622" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2623" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2624">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2625" />
                    </block>
                    <actions class="linked-hash-map" id="2626">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2627">
                      <string>31-77-205421</string>
                      <string>30-77-205421</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>46</viewedBy>
                    <passedBy>30</passedBy>
                    <correctRatio>0.2909090909090909</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2628">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2629">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2630">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2631">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2632">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2633">
                  <id>56020</id>
                  <title>Multi-dimensional array # Transposition of the matrix</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56020</progress>
                  <createDate id="2634">2017-09-12 14:45:34.0 UTC</createDate>
                  <updateDate id="2635">2018-02-05 04:47:25.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56020-1</discussionProxy>
                  <discussionThreads id="2636">
                    <string>76-56020-1</string>
                  </discussionThreads>
                  <steps id="2637">
                    <long>205422</long>
                  </steps>
                  <actions class="linked-hash-map" id="2638" />
                  <tags id="2639" />
                  <requiredTags id="2640" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2641">
                    <string>31-76-56020</string>
                    <string>30-76-56020</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>649</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Transposition-of-the-matrix-56020</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56020</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2642">
                <StepNode id="2643">
                  <parent class="LessonNode" reference="2628" />
                  <data class="Step" id="2644">
                    <id>205422</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205422</progress>
                    <createDate id="2645">2017-07-23 12:53:12.0 UTC</createDate>
                    <updateDate id="2646">2018-02-05 04:47:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205422-1</discussionProxy>
                    <discussionThreads id="2647">
                      <string>77-205422-1</string>
                      <string>77-205422-2</string>
                    </discussionThreads>
                    <lesson>56020</lesson>
                    <status>ready</status>
                    <block id="2648">
                      <name>code</name>
                      <text>&lt;p&gt;Input, separated by spaces: the number of rows of the matrix, the number of
columns of the matrix, then go the elements of the two-dimensional matrix
itself, row by row.&lt;/p&gt;
&lt;p&gt;Output: the result of the transposition of the matrix (row by row).&lt;/p&gt;</text>
                      <options id="2649">
                        <samples id="2650">
                          <Sample id="2651">&lt;input&gt;2 3 1 2 3 4 5 6&lt;/input&gt;&lt;output&gt;1 4 2 5 3 6&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2652" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2653" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2654">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2655" />
                    </block>
                    <actions class="linked-hash-map" id="2656">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2657">
                      <string>31-77-205422</string>
                      <string>30-77-205422</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>31</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.5384615384615384</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2658">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2659">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2660">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2661">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2662">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2663">
                  <id>56024</id>
                  <title>Multi-dimensional array # The star figure</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56024</progress>
                  <createDate id="2664">2017-09-12 14:45:35.0 UTC</createDate>
                  <updateDate id="2665">2018-02-05 04:58:19.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56024-1</discussionProxy>
                  <discussionThreads id="2666">
                    <string>76-56024-1</string>
                  </discussionThreads>
                  <steps id="2667">
                    <long>216339</long>
                  </steps>
                  <actions class="linked-hash-map" id="2668" />
                  <tags id="2669" />
                  <requiredTags id="2670" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2671">
                    <string>31-76-56024</string>
                    <string>30-76-56024</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1440</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-The-star-figure-56024</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56024</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2672">
                <StepNode id="2673">
                  <parent class="LessonNode" reference="2658" />
                  <data class="Step" id="2674">
                    <id>216339</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216339</progress>
                    <createDate id="2675">2017-09-04 10:09:08.0 UTC</createDate>
                    <updateDate id="2676">2018-02-05 04:54:54.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216339-1</discussionProxy>
                    <discussionThreads id="2677">
                      <string>77-216339-1</string>
                      <string>77-216339-2</string>
                    </discussionThreads>
                    <lesson>56024</lesson>
                    <status>ready</status>
                    <block id="2678">
                      <name>code</name>
                      <text>&lt;p&gt;Given an odd number n, not exceeding 15. Create a two-dimensional
array (matrix) from n×n elements, by filling it with &quot;.&quot; symbols
(each element of the matrix is a string containing a single symbol). Then fill
the middle row of the matrix, the middle column, and the main and the secondary
diagonals with the &quot;*&quot; symbols. As a result, all &quot;*&quot;s in
the array must form the star figure. Output this matrix; elements of the array
should be space separated.&lt;/p&gt;</text>
                      <options id="2679">
                        <samples id="2680">
                          <Sample id="2681">&lt;input&gt;5&lt;/input&gt;&lt;output&gt;* . * . *
. * * * .
* * * * *
. * * * .
* . * . *&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2682" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2683" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2684">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2685" />
                    </block>
                    <actions class="linked-hash-map" id="2686">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2687">
                      <string>31-77-216339</string>
                      <string>30-77-216339</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.2777777777777778</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2688">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2689">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2690">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2691">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2692">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2693">
                  <id>65628</id>
                  <title>Linear search # Count elements of an array in another one</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65628</progress>
                  <createDate id="2694">2017-12-31 05:34:23.0 UTC</createDate>
                  <updateDate id="2695">2018-01-23 13:49:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65628-1</discussionProxy>
                  <discussionThreads id="2696">
                    <string>76-65628-1</string>
                  </discussionThreads>
                  <steps id="2697">
                    <long>258738</long>
                  </steps>
                  <actions class="linked-hash-map" id="2698" />
                  <tags id="2699" />
                  <requiredTags id="2700" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2701">
                    <string>31-76-65628</string>
                    <string>30-76-65628</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>16</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>287</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Linear-search-Count-elements-of-an-array-in-another-one-65628</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65628</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2702">
                <StepNode id="2703">
                  <parent class="LessonNode" reference="2688" />
                  <data class="Step" id="2704">
                    <id>258738</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258738</progress>
                    <createDate id="2705">2017-12-31 09:17:57.0 UTC</createDate>
                    <updateDate id="2706">2017-12-31 09:20:46.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258738-1</discussionProxy>
                    <discussionThreads id="2707">
                      <string>77-258738-1</string>
                      <string>77-258738-2</string>
                    </discussionThreads>
                    <lesson>65628</lesson>
                    <status>ready</status>
                    <block id="2708">
                      <name>code</name>
                      <text>Implement a method to search the count of occurrences values from the &lt;code&gt;first&lt;/code&gt; array in the &lt;code&gt;second&lt;/code&gt; one. The method must return an array of counts with the same size as the first array.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Both arrays are not empty, values may repeat in arrays.&lt;/div&gt;</text>
                      <options id="2709">
                        <samples id="2710">
                          <Sample id="2711">&lt;input&gt;15 10 18 17 15
10 10 15 10 17 17
&lt;/input&gt;&lt;output&gt;1 3 0 2 1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2712" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int[] countOccurrences(int[] first, int[] second) {
    return new int[0];
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2713" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2714">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2715" />
                    </block>
                    <actions class="linked-hash-map" id="2716">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2717">
                      <string>31-77-258738</string>
                      <string>30-77-258738</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.6153846153846154</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2718">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2719">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2720">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2721">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2722">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2723">
                  <id>65621</id>
                  <title>Linear search # Does the array contain the element?</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65621</progress>
                  <createDate id="2724">2017-12-31 01:07:16.0 UTC</createDate>
                  <updateDate id="2725">2018-01-23 13:49:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65621-1</discussionProxy>
                  <discussionThreads id="2726">
                    <string>76-65621-1</string>
                  </discussionThreads>
                  <steps id="2727">
                    <long>258708</long>
                  </steps>
                  <actions class="linked-hash-map" id="2728" />
                  <tags id="2729" />
                  <requiredTags id="2730" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2731">
                    <string>31-76-65621</string>
                    <string>30-76-65621</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>196</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Linear-search-Does-the-array-contain-the-element-65621</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65621</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2732">
                <StepNode id="2733">
                  <parent class="LessonNode" reference="2718" />
                  <data class="Step" id="2734">
                    <id>258708</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258708</progress>
                    <createDate id="2735">2017-12-31 01:27:45.0 UTC</createDate>
                    <updateDate id="2736">2017-12-31 01:32:32.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258708-1</discussionProxy>
                    <discussionThreads id="2737">
                      <string>77-258708-1</string>
                      <string>77-258708-2</string>
                    </discussionThreads>
                    <lesson>65621</lesson>
                    <status>ready</status>
                    <block id="2738">
                      <name>code</name>
                      <text>Implement a method to test an array of int's contains the given number. The array can be empty.</text>
                      <options id="2739">
                        <samples id="2740">
                          <Sample id="2741">&lt;input&gt;21 83 14 29 55 18
55&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="2742">&lt;input&gt;-12 19 23 -13 5
7&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2743" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static boolean contains(int[] numbers, int number) {
    return false;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2744" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2745">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2746" />
                    </block>
                    <actions class="linked-hash-map" id="2747">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2748">
                      <string>31-77-258708</string>
                      <string>30-77-258708</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.575</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2749">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2750">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2751">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2752">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2753">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2754">
                  <id>65625</id>
                  <title>Linear search # Search indexes of values in another array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65625</progress>
                  <createDate id="2755">2017-12-31 01:14:54.0 UTC</createDate>
                  <updateDate id="2756">2018-01-23 13:49:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65625-1</discussionProxy>
                  <discussionThreads id="2757">
                    <string>76-65625-1</string>
                  </discussionThreads>
                  <steps id="2758">
                    <long>258732</long>
                  </steps>
                  <actions class="linked-hash-map" id="2759" />
                  <tags id="2760" />
                  <requiredTags id="2761" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2762">
                    <string>31-76-65625</string>
                    <string>30-76-65625</string>
                  </subscriptions>
                  <viewedBy>27</viewedBy>
                  <passedBy>25</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>509</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Linear-search-Search-indexes-of-values-in-another-array-65625</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65625</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2763">
                <StepNode id="2764">
                  <parent class="LessonNode" reference="2749" />
                  <data class="Step" id="2765">
                    <id>258732</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258732</progress>
                    <createDate id="2766">2017-12-31 08:44:20.0 UTC</createDate>
                    <updateDate id="2767">2017-12-31 09:08:36.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258732-1</discussionProxy>
                    <discussionThreads id="2768">
                      <string>77-258732-1</string>
                      <string>77-258732-2</string>
                    </discussionThreads>
                    <lesson>65625</lesson>
                    <status>ready</status>
                    <block id="2769">
                      <name>code</name>
                      <text>Implement a method to search the index of the first occurrence of each value from the &lt;code&gt;first&lt;/code&gt; array in the &lt;code&gt;second&lt;/code&gt; one. If a value is not found in the second array, the index is &lt;code&gt;-1&lt;/code&gt;. The method must return an array of indexes with the same size as the first array.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Both arrays are not empty, values may repeat in arrays.&lt;/div&gt;</text>
                      <options id="2770">
                        <samples id="2771">
                          <Sample id="2772">&lt;input&gt;15 10 18 17 15
10 15 10 17
&lt;/input&gt;&lt;output&gt;1 0 -1 3 1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2773" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int[] searchIndexes(int[] first, int[] second) {
    return new int[0];
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2774" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2775">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2776" />
                    </block>
                    <actions class="linked-hash-map" id="2777">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2778">
                      <string>31-77-258732</string>
                      <string>30-77-258732</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>27</viewedBy>
                    <passedBy>25</passedBy>
                    <correctRatio>0.49122807017543857</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2779">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2780">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2781">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2782">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2783">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2784">
                  <id>65626</id>
                  <title>Linear search # The first occurrence in the subarray</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65626</progress>
                  <createDate id="2785">2017-12-31 01:15:41.0 UTC</createDate>
                  <updateDate id="2786">2018-01-23 13:49:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65626-1</discussionProxy>
                  <discussionThreads id="2787">
                    <string>76-65626-1</string>
                  </discussionThreads>
                  <steps id="2788">
                    <long>258712</long>
                  </steps>
                  <actions class="linked-hash-map" id="2789" />
                  <tags id="2790" />
                  <requiredTags id="2791" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2792">
                    <string>31-76-65626</string>
                    <string>30-76-65626</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>498</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Linear-search-The-first-occurrence-in-the-subarray-65626</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65626</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2793">
                <StepNode id="2794">
                  <parent class="LessonNode" reference="2779" />
                  <data class="Step" id="2795">
                    <id>258712</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258712</progress>
                    <createDate id="2796">2017-12-31 06:09:12.0 UTC</createDate>
                    <updateDate id="2797">2017-12-31 07:04:39.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258712-1</discussionProxy>
                    <discussionThreads id="2798">
                      <string>77-258712-1</string>
                      <string>77-258712-2</string>
                    </discussionThreads>
                    <lesson>65626</lesson>
                    <status>ready</status>
                    <block id="2799">
                      <name>code</name>
                      <text>Implement a method to search the index of the first occurrence of a given value in a range of indexes in a given array. The start index should be inclusive, the end index - exclusive. If they are equal, suppose the element is not found.&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;If the value is not found, the method must &lt;/span&gt;&lt;span&gt;return &lt;/span&gt;&lt;code&gt;-1&lt;/code&gt;&lt;span&gt;.&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;It's guaranteed, &lt;/span&gt;&lt;code&gt;startIndex &amp;lt;= endIndex&lt;/code&gt;&lt;span&gt; and the array is not empty.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In the test samples below, the first line represents an array of int's, the second line contains start and end indexes, and the third line has an element to search in the array.&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="2800">
                        <samples id="2801">
                          <Sample id="2802">&lt;input&gt;19 14 17 15 17
2 5
17&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                          <Sample id="2803">&lt;input&gt;19 14 17 15 17
0 2
17&lt;/input&gt;&lt;output&gt;-1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2804" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int searchInSubArray(int[] numbers, int startIndex, int endIndex, int value) {
    return -1;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2805" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2806">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2807" />
                    </block>
                    <actions class="linked-hash-map" id="2808">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2809">
                      <string>31-77-258712</string>
                      <string>30-77-258712</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.4444444444444444</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2810">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2811">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2812">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2813">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2814">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2815">
                  <id>61069</id>
                  <title>The utility class Collections # Frequency of characters</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61069</progress>
                  <createDate id="2816">2017-11-13 16:20:37.0 UTC</createDate>
                  <updateDate id="2817">2018-02-18 09:35:35.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61069-1</discussionProxy>
                  <discussionThreads id="2818">
                    <string>76-61069-1</string>
                  </discussionThreads>
                  <steps id="2819">
                    <long>240612</long>
                  </steps>
                  <actions class="linked-hash-map" id="2820" />
                  <tags id="2821" />
                  <requiredTags id="2822" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2823">
                    <string>31-76-61069</string>
                    <string>30-76-61069</string>
                  </subscriptions>
                  <viewedBy>15</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>476</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-utility-class-Collections-Frequency-of-characters-61069</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61069</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2824">
                <StepNode id="2825">
                  <parent class="LessonNode" reference="2810" />
                  <data class="Step" id="2826">
                    <id>240612</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-240612</progress>
                    <createDate id="2827">2017-11-13 17:02:19.0 UTC</createDate>
                    <updateDate id="2828">2018-02-18 09:35:34.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-240612-1</discussionProxy>
                    <discussionThreads id="2829">
                      <string>77-240612-1</string>
                      <string>77-240612-2</string>
                    </discussionThreads>
                    <lesson>61069</lesson>
                    <status>ready</status>
                    <block id="2830">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that reads a sequence of characters and output the number of elements equal to the specified character.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Try to use the standard methods to write the program.&lt;/div&gt;</text>
                      <options id="2831">
                        <samples id="2832">
                          <Sample id="2833">&lt;input&gt;a a a b a
a&lt;/input&gt;&lt;output&gt;4&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2834" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2835" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2836">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2837" />
                    </block>
                    <actions class="linked-hash-map" id="2838">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2839">
                      <string>31-77-240612</string>
                      <string>30-77-240612</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>15</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.34210526315789475</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2840">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2841">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2842">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2843">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2844">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2845">
                  <id>56147</id>
                  <title>The utility class Collections # Multiple swaps</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56147</progress>
                  <createDate id="2846">2017-09-12 14:46:22.0 UTC</createDate>
                  <updateDate id="2847">2018-02-18 09:32:20.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56147-1</discussionProxy>
                  <discussionThreads id="2848">
                    <string>76-56147-1</string>
                  </discussionThreads>
                  <steps id="2849">
                    <long>214587</long>
                  </steps>
                  <actions class="linked-hash-map" id="2850" />
                  <tags id="2851" />
                  <requiredTags id="2852" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2853">
                    <string>31-76-56147</string>
                    <string>30-76-56147</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>890</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-utility-class-Collections-Multiple-swaps-56147</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56147</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2854">
                <StepNode id="2855">
                  <parent class="LessonNode" reference="2840" />
                  <data class="Step" id="2856">
                    <id>214587</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-214587</progress>
                    <createDate id="2857">2017-08-29 15:47:31.0 UTC</createDate>
                    <updateDate id="2858">2018-02-18 09:32:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-214587-1</discussionProxy>
                    <discussionThreads id="2859">
                      <string>77-214587-1</string>
                      <string>77-214587-2</string>
                    </discussionThreads>
                    <lesson>56147</lesson>
                    <status>ready</status>
                    <block id="2860">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program to sequentially swap elements by their indexes in a given list. Indexes of the elements start with 0 and always less than the size of the list.&lt;/p&gt;&lt;p&gt;Try to use standard methods for processing collections.&lt;br&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains elements of the list. The second line contains the number of swaps. Then follows the lines with descriptions of the swaps. Each line contains two numbers - indexes of swapped elements.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;All elements of the modified list separated by spaces must be output in one line.&lt;br&gt;&lt;/p&gt;</text>
                      <options id="2861">
                        <samples id="2862">
                          <Sample id="2863">&lt;input&gt;1 2 3 4 5 6
2
0 1
3 4
&lt;/input&gt;&lt;output&gt;2 1 3 5 4 6&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2864" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2865" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2866">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2867" />
                    </block>
                    <actions class="linked-hash-map" id="2868">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2869">
                      <string>31-77-214587</string>
                      <string>30-77-214587</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.6551724137931034</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2870">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2871">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2872">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2873">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2874">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2875">
                  <id>56149</id>
                  <title>The utility class Collections # Rotating table</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56149</progress>
                  <createDate id="2876">2017-09-12 14:46:22.0 UTC</createDate>
                  <updateDate id="2877">2018-02-18 09:33:49.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56149-1</discussionProxy>
                  <discussionThreads id="2878">
                    <string>76-56149-1</string>
                  </discussionThreads>
                  <steps id="2879">
                    <long>214716</long>
                  </steps>
                  <actions class="linked-hash-map" id="2880" />
                  <tags id="2881" />
                  <requiredTags id="2882" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2883">
                    <string>31-76-56149</string>
                    <string>30-76-56149</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1721</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-utility-class-Collections-Rotating-table-56149</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56149</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2884">
                <StepNode id="2885">
                  <parent class="LessonNode" reference="2870" />
                  <data class="Step" id="2886">
                    <id>214716</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-214716</progress>
                    <createDate id="2887">2017-08-30 03:25:59.0 UTC</createDate>
                    <updateDate id="2888">2018-02-18 09:33:48.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-214716-1</discussionProxy>
                    <discussionThreads id="2889">
                      <string>77-214716-1</string>
                      <string>77-214716-2</string>
                    </discussionThreads>
                    <lesson>56149</lesson>
                    <status>ready</status>
                    <block id="2890">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a table of integer numbers. You should rotate rows of the table by the specified distance.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Try to use collections and standard methods for them.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains two numbers: a number of rows and a number of columns of the table.&lt;/p&gt;&lt;p&gt;The following lines describe rows of the table. In each row, all elements are separated by spaces.&lt;/p&gt;&lt;p&gt;The last line consists of one number - the distance for rotating.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Output the resulting table. Separate numbers by a single space in the output.&lt;br&gt;&lt;/p&gt;</text>
                      <options id="2891">
                        <samples id="2892">
                          <Sample id="2893">&lt;input&gt;3 3
1 1 1
2 2 2
3 3 3
1&lt;/input&gt;&lt;output&gt;3 3 3
1 1 1
2 2 2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2894" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2895" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2896">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2897" />
                    </block>
                    <actions class="linked-hash-map" id="2898">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2899">
                      <string>31-77-214716</string>
                      <string>30-77-214716</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.375</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2900">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2901">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2902">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2903">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2904">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2905">
                  <id>56146</id>
                  <title>The utility class Collections # Sorting sequences</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56146</progress>
                  <createDate id="2906">2017-09-12 14:46:21.0 UTC</createDate>
                  <updateDate id="2907">2018-04-03 11:42:58.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-56146-1</discussionProxy>
                  <discussionThreads id="2908">
                    <string>76-56146-1</string>
                  </discussionThreads>
                  <steps id="2909">
                    <long>214569</long>
                  </steps>
                  <actions class="linked-hash-map" id="2910" />
                  <tags id="2911" />
                  <requiredTags id="2912" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2913">
                    <string>31-76-56146</string>
                    <string>30-76-56146</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>288</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-utility-class-Collections-Sorting-sequences-56146</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56146</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2914">
                <StepNode id="2915">
                  <parent class="LessonNode" reference="2900" />
                  <data class="Step" id="2916">
                    <id>214569</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-214569</progress>
                    <createDate id="2917">2017-08-29 14:41:47.0 UTC</createDate>
                    <updateDate id="2918">2018-04-03 11:42:57.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-214569-1</discussionProxy>
                    <discussionThreads id="2919">
                      <string>77-214569-1</string>
                      <string>77-214569-2</string>
                    </discussionThreads>
                    <lesson>56146</lesson>
                    <status>ready</status>
                    <block id="2920">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Implement a method for sorting a sequence of integer numbers in descending order. &lt;/span&gt;&lt;span&gt;The method must modify the given sequence represented as a list.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Try to use standard methods for processing collections.&lt;/p&gt;Do not output the elements of the list, just modify the collection.&lt;br&gt;</text>
                      <options id="2921">
                        <samples id="2922">
                          <Sample id="2923">&lt;input&gt;10 13 22 14
&lt;/input&gt;&lt;output&gt;22 14 13 10&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2924" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void sortInDescendingOrder(List&lt;Integer&gt; sequence) {
    // write your code here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2925" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2926">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2927" />
                    </block>
                    <actions class="linked-hash-map" id="2928">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2929">
                      <string>31-77-214569</string>
                      <string>30-77-214569</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>19</passedBy>
                    <correctRatio>0.26804123711340205</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2930">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2931">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2932">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2933">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2934">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2935">
                  <id>61068</id>
                  <title>The utility class Collections # The first index of a sublist</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61068</progress>
                  <createDate id="2936">2017-11-13 16:20:28.0 UTC</createDate>
                  <updateDate id="2937">2018-02-18 09:34:40.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61068-1</discussionProxy>
                  <discussionThreads id="2938">
                    <string>76-61068-1</string>
                  </discussionThreads>
                  <steps id="2939">
                    <long>240608</long>
                  </steps>
                  <actions class="linked-hash-map" id="2940" />
                  <tags id="2941" />
                  <requiredTags id="2942" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2943">
                    <string>31-76-61068</string>
                    <string>30-76-61068</string>
                  </subscriptions>
                  <viewedBy>13</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-utility-class-Collections-The-first-index-of-a-sublist-61068</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61068</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2944">
                <StepNode id="2945">
                  <parent class="LessonNode" reference="2930" />
                  <data class="Step" id="2946">
                    <id>240608</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-240608</progress>
                    <createDate id="2947">2017-11-13 16:48:50.0 UTC</createDate>
                    <updateDate id="2948">2018-02-18 09:34:39.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-240608-1</discussionProxy>
                    <discussionThreads id="2949">
                      <string>77-240608-1</string>
                      <string>77-240608-2</string>
                    </discussionThreads>
                    <lesson>61068</lesson>
                    <status>ready</status>
                    <block id="2950">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that read two sequences of numbers and output the starting position of the first occurrence and the last occurrence of the second list within the first list, or -1 if there is no such occurrence. Both numbers must be separated by a space.&lt;/div&gt;</text>
                      <options id="2951">
                        <samples id="2952">
                          <Sample id="2953">&lt;input&gt;2 1 2 3 4 1 2 3
1 2 3&lt;/input&gt;&lt;output&gt;1 5&lt;/output&gt;</Sample>
                          <Sample id="2954">&lt;input&gt;77 2 4 112 3
104&lt;/input&gt;&lt;output&gt;-1 -1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2955" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2956" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2957">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2958" />
                    </block>
                    <actions class="linked-hash-map" id="2959">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2960">
                      <string>31-77-240608</string>
                      <string>30-77-240608</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>13</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.36</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2961">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2962">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2963">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2964">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2965">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2966">
                  <id>60807</id>
                  <title>Queue and Stack # Greedy load balance</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60807</progress>
                  <createDate id="2967">2017-11-08 18:19:30.0 UTC</createDate>
                  <updateDate id="2968">2018-02-18 08:11:57.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60807-1</discussionProxy>
                  <discussionThreads id="2969">
                    <string>76-60807-1</string>
                  </discussionThreads>
                  <steps id="2970">
                    <long>239365</long>
                  </steps>
                  <actions class="linked-hash-map" id="2971" />
                  <tags id="2972" />
                  <requiredTags id="2973" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="2974">
                    <string>31-76-60807</string>
                    <string>30-76-60807</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1731</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Greedy-load-balance-60807</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60807</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="2975">
                <StepNode id="2976">
                  <parent class="LessonNode" reference="2961" />
                  <data class="Step" id="2977">
                    <id>239365</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239365</progress>
                    <createDate id="2978">2017-11-08 18:33:57.0 UTC</createDate>
                    <updateDate id="2979">2018-02-18 08:11:56.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-239365-1</discussionProxy>
                    <discussionThreads id="2980">
                      <string>77-239365-1</string>
                      <string>77-239365-2</string>
                    </discussionThreads>
                    <lesson>60807</lesson>
                    <status>ready</status>
                    <block id="2981">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a program that implements a simple load balancer.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The program must read tasks from the standard input and distribute them between two queues. Tasks will be processed by a system (in future). Each task has a unique identifier and a number indicating the load on the system (in parrots).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The balancer should distribute tasks between queues by the following rule - the task is added to the lower-load queue (by the total load). If both queues have the same total load indicator, the task must be added to the first queue.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It's guaranteed, the input data contain at least two tasks.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the number of tasks. Other lines consist of task descriptions - an identifier and a load indicator (separated by a space).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data form&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line should contain identifiers of tasks in the first queue, the second line - in the second queue.&lt;/div&gt;</text>
                      <options id="2982">
                        <samples id="2983">
                          <Sample id="2984">&lt;input&gt;6
1 1
2 1
3 1
4 3
5 1
6 1&lt;/input&gt;&lt;output&gt;1 3 5 6
2 4&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="2985" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="2986" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="2987">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="2988" />
                    </block>
                    <actions class="linked-hash-map" id="2989">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="2990">
                      <string>31-77-239365</string>
                      <string>30-77-239365</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.3939393939393939</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="2991">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="2992">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="2993">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="2994">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="2995">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="2996">
                  <id>57161</id>
                  <title>Functional streams # Finding max and min elements</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57161</progress>
                  <createDate id="2997">2017-09-20 19:19:38.0 UTC</createDate>
                  <updateDate id="2998">2018-02-21 03:36:54.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57161-1</discussionProxy>
                  <discussionThreads id="2999">
                    <string>76-57161-1</string>
                  </discussionThreads>
                  <steps id="3000">
                    <long>223468</long>
                  </steps>
                  <actions class="linked-hash-map" id="3001" />
                  <tags id="3002" />
                  <requiredTags id="3003" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3004">
                    <string>31-76-57161</string>
                    <string>30-76-57161</string>
                  </subscriptions>
                  <viewedBy>17</viewedBy>
                  <passedBy>10</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>460</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Functional-streams-Finding-max-and-min-elements-57161</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57161</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3005">
                <StepNode id="3006">
                  <parent class="LessonNode" reference="2991" />
                  <data class="Step" id="3007">
                    <id>223468</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-223468</progress>
                    <createDate id="3008">2017-09-20 19:23:00.0 UTC</createDate>
                    <updateDate id="3009">2018-02-21 03:36:53.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-223468-1</discussionProxy>
                    <discussionThreads id="3010">
                      <string>77-223468-1</string>
                      <string>77-223468-2</string>
                    </discussionThreads>
                    <lesson>57161</lesson>
                    <status>ready</status>
                    <block id="3011">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Implement a method for finding min and max elements of a stream in accordance with a given comparator.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The found elements pass to &lt;b&gt;minMaxConsumer&lt;/b&gt; in the following way:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;minMaxConsumer.accept(min, max);&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the stream doesn't contain any elements, invoke:&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;minMaxConsumer.accept(null, null);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="3012">
                        <samples id="3013" />
                        <codeTemplates class="LinkedTreeMap" id="3014" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static &lt;T&gt; void findMinMax(
        Stream&lt;? extends T&gt; stream,
        Comparator&lt;? super T&gt; order,
        BiConsumer&lt;? super T, ? super T&gt; minMaxConsumer) {

    // your implementation here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3015" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3016">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3017" />
                    </block>
                    <actions class="linked-hash-map" id="3018">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3019">
                      <string>31-77-223468</string>
                      <string>30-77-223468</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>17</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.1724137931034483</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3020">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3021">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3022">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3023">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3024">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3025">
                  <id>57154</id>
                  <title>Filtering elements # Omitting long strings</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57154</progress>
                  <createDate id="3026">2017-09-20 18:43:26.0 UTC</createDate>
                  <updateDate id="3027">2018-02-21 15:07:11.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57154-1</discussionProxy>
                  <discussionThreads id="3028">
                    <string>76-57154-1</string>
                  </discussionThreads>
                  <steps id="3029">
                    <long>223446</long>
                  </steps>
                  <actions class="linked-hash-map" id="3030" />
                  <tags id="3031" />
                  <requiredTags id="3032" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3033">
                    <string>31-76-57154</string>
                    <string>30-76-57154</string>
                  </subscriptions>
                  <viewedBy>18</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>199</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Filtering-elements-Omitting-long-strings-57154</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57154</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3034">
                <StepNode id="3035">
                  <parent class="LessonNode" reference="3020" />
                  <data class="Step" id="3036">
                    <id>223446</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-223446</progress>
                    <createDate id="3037">2017-09-20 18:45:31.0 UTC</createDate>
                    <updateDate id="3038">2018-02-21 15:07:10.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-223446-1</discussionProxy>
                    <discussionThreads id="3039">
                      <string>77-223446-1</string>
                      <string>77-223446-2</string>
                    </discussionThreads>
                    <lesson>57154</lesson>
                    <status>ready</status>
                    <block id="3040">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given a list of strings, return a list of the strings, omitting any string length 4 or more.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;Please, use functional streams to solve the problem.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Example: [&quot;a&quot;, &quot;bbb&quot;, &quot;cccc&quot;, &quot;dddddd&quot;] → [&quot;a&quot;, &quot;bbb&quot;]&lt;/div&gt;</text>
                      <options id="3041">
                        <samples id="3042" />
                        <codeTemplates class="LinkedTreeMap" id="3043" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static List&lt;String&gt; omitLongStrings(List&lt;String&gt; strings) {

    return strings;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3044" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3045">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3046" />
                    </block>
                    <actions class="linked-hash-map" id="3047">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3048">
                      <string>31-77-223446</string>
                      <string>30-77-223446</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>18</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.36585365853658536</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3049">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3050">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3051">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3052">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3053">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3054">
                  <id>80744</id>
                  <title>Command-line arguments # Calculator - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-80744</progress>
                  <createDate id="3055">2018-03-31 08:52:55.0 UTC</createDate>
                  <updateDate id="3056">2018-03-31 09:47:33.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-80744-1</discussionProxy>
                  <discussionThreads id="3057">
                    <string>76-80744-1</string>
                  </discussionThreads>
                  <steps id="3058">
                    <long>301260</long>
                  </steps>
                  <actions class="linked-hash-map" id="3059" />
                  <tags id="3060" />
                  <requiredTags id="3061" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3062">
                    <string>31-76-80744</string>
                    <string>30-76-80744</string>
                  </subscriptions>
                  <viewedBy>9</viewedBy>
                  <passedBy>6</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Command-line-arguments-Calculator-1-80744</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-80744</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3063">
                <StepNode id="3064">
                  <parent class="LessonNode" reference="3049" />
                  <data class="Step" id="3065">
                    <id>301260</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-301260</progress>
                    <createDate id="3066">2018-03-31 09:02:50.0 UTC</createDate>
                    <updateDate id="3067">2018-03-31 09:47:31.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-301260-1</discussionProxy>
                    <discussionThreads id="3068">
                      <string>77-301260-1</string>
                      <string>77-301260-2</string>
                    </discussionThreads>
                    <lesson>80744</lesson>
                    <status>ready</status>
                    <block id="3069">
                      <name>code</name>
                      <text>Write a program that takes an operator (&quot;+&quot;, &quot;-&quot;, &quot;*&quot;) and two values as the command-line arguments and then outputs the result of the operator in the standard output. &lt;span&gt;If the passed operator is not from the list, it must output the string &lt;/span&gt;&lt;b&gt;&quot;Unknown operator&quot;&lt;/b&gt;&lt;span&gt; without quotes.&lt;/span&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;Please, do not rename the provided class &lt;code&gt;Problem&lt;/code&gt;.&lt;br&gt;&lt;/span&gt;&lt;/div&gt;</text>
                      <options id="3070">
                        <samples id="3071">
                          <Sample id="3072">&lt;input&gt;+ 10 20&lt;/input&gt;&lt;output&gt;30&lt;/output&gt;</Sample>
                          <Sample id="3073">&lt;input&gt;^ 2 10&lt;/input&gt;&lt;output&gt;Unknown operator&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3074" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Problem {

    public static void main(String args[]) {

    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3075" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="3076">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3077" />
                    </block>
                    <actions class="linked-hash-map" id="3078">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3079">
                      <string>31-77-301260</string>
                      <string>30-77-301260</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>9</viewedBy>
                    <passedBy>6</passedBy>
                    <correctRatio>0.3333333333333333</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3080">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3081">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3082">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3083">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3084">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3085">
                  <id>55988</id>
                  <title>Iterating over arrays # Check if an array contains two numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55988</progress>
                  <createDate id="3086">2017-09-12 14:45:23.0 UTC</createDate>
                  <updateDate id="3087">2018-02-04 16:03:56.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55988-1</discussionProxy>
                  <discussionThreads id="3088">
                    <string>76-55988-1</string>
                  </discussionThreads>
                  <steps id="3089">
                    <long>216230</long>
                  </steps>
                  <actions class="linked-hash-map" id="3090" />
                  <tags id="3091" />
                  <requiredTags id="3092" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3093">
                    <string>31-76-55988</string>
                    <string>30-76-55988</string>
                  </subscriptions>
                  <viewedBy>56</viewedBy>
                  <passedBy>40</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>2494</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Check-if-an-array-contains-two-numbers-55988</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55988</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3094">
                <StepNode id="3095">
                  <parent class="LessonNode" reference="3080" />
                  <data class="Step" id="3096">
                    <id>216230</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216230</progress>
                    <createDate id="3097">2017-09-04 01:24:47.0 UTC</createDate>
                    <updateDate id="3098">2018-02-04 16:03:56.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216230-1</discussionProxy>
                    <discussionThreads id="3099">
                      <string>77-216230-1</string>
                      <string>77-216230-2</string>
                    </discussionThreads>
                    <lesson>55988</lesson>
                    <status>ready</status>
                    <block id="3100">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that reads an unsorted array of integers and two numbers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;. The program must check if &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt; occur next to each other in the array (in any order).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains the size of an array.&lt;/div&gt;&lt;div&gt;The second line contains elements of the array.&lt;/div&gt;&lt;div&gt;The third line contains two integer numbers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;All numbers in the same line are separated by the space character.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Only a single value: &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;/div&gt;</text>
                      <options id="3101">
                        <samples id="3102">
                          <Sample id="3103">&lt;input&gt;3
1 3 2
2 3
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3104">&lt;input&gt;3
1 2 3
3 4
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3105" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3106" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3107">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3108" />
                    </block>
                    <actions class="linked-hash-map" id="3109">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3110">
                      <string>31-77-216230</string>
                      <string>30-77-216230</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>56</viewedBy>
                    <passedBy>40</passedBy>
                    <correctRatio>0.1862348178137652</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3111">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3112">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3113">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3114">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3115">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3116">
                  <id>55998</id>
                  <title>Iterating over arrays # Alphabetical order</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55998</progress>
                  <createDate id="3117">2017-09-12 14:45:26.0 UTC</createDate>
                  <updateDate id="3118">2018-03-08 18:59:54.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55998-1</discussionProxy>
                  <discussionThreads id="3119">
                    <string>76-55998-1</string>
                  </discussionThreads>
                  <steps id="3120">
                    <long>216241</long>
                  </steps>
                  <actions class="linked-hash-map" id="3121" />
                  <tags id="3122" />
                  <requiredTags id="3123" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3124">
                    <string>31-76-55998</string>
                    <string>30-76-55998</string>
                  </subscriptions>
                  <viewedBy>42</viewedBy>
                  <passedBy>24</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1338</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Alphabetical-order-55998</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55998</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3125">
                <StepNode id="3126">
                  <parent class="LessonNode" reference="3111" />
                  <data class="Step" id="3127">
                    <id>216241</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216241</progress>
                    <createDate id="3128">2017-09-04 02:34:22.0 UTC</createDate>
                    <updateDate id="3129">2018-03-08 18:59:53.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216241-1</discussionProxy>
                    <discussionThreads id="3130">
                      <string>77-216241-1</string>
                      <string>77-216241-2</string>
                    </discussionThreads>
                    <lesson>55998</lesson>
                    <status>ready</status>
                    <block id="3131">
                      <name>code</name>
                      <text>&lt;div&gt;Write a program that reads an array of strings and checks the array is in alphabetical order.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;There are several rules to do it:&lt;/div&gt;1) You can compare chars with &amp;lt; to see if one comes before the other one (i.e. by comparing ASCII values).&lt;/div&gt;&lt;div&gt;2) Shorter strings come before longer strings whenever the shorter string is a subset of the longer one. So, &quot;a&quot; comes before &quot;abc&quot;.&lt;p&gt;3) Finally, strings which are identical are in alphabetical order.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;The single input line contains strings separated by spaces.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;Only a single value - &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</text>
                      <options id="3132">
                        <samples id="3133">
                          <Sample id="3134">&lt;input&gt;a b c
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3135">&lt;input&gt;a b c z a
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3136" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3137" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="3138">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3139" />
                    </block>
                    <actions class="linked-hash-map" id="3140">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3141">
                      <string>31-77-216241</string>
                      <string>30-77-216241</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>42</viewedBy>
                    <passedBy>24</passedBy>
                    <correctRatio>0.1277533039647577</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3142">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3143">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3144">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3145">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3146">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3147">
                  <id>56000</id>
                  <title>Iterating over arrays # Triples</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56000</progress>
                  <createDate id="3148">2017-09-12 14:45:26.0 UTC</createDate>
                  <updateDate id="3149">2018-02-04 17:51:38.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56000-1</discussionProxy>
                  <discussionThreads id="3150">
                    <string>76-56000-1</string>
                  </discussionThreads>
                  <steps id="3151">
                    <long>216243</long>
                  </steps>
                  <actions class="linked-hash-map" id="3152" />
                  <tags id="3153" />
                  <requiredTags id="3154" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3155">
                    <string>31-76-56000</string>
                    <string>30-76-56000</string>
                  </subscriptions>
                  <viewedBy>34</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>766</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterating-over-arrays-Triples-56000</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56000</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3156">
                <StepNode id="3157">
                  <parent class="LessonNode" reference="3142" />
                  <data class="Step" id="3158">
                    <id>216243</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216243</progress>
                    <createDate id="3159">2017-09-04 02:41:48.0 UTC</createDate>
                    <updateDate id="3160">2018-02-04 17:51:37.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216243-1</discussionProxy>
                    <discussionThreads id="3161">
                      <string>77-216243-1</string>
                      <string>77-216243-2</string>
                    </discussionThreads>
                    <lesson>56000</lesson>
                    <status>ready</status>
                    <block id="3162">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;b&gt;Triples&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Write a program that reads an array of ints and outputs the number of &quot;triples&quot; in the array.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A &quot;triple&quot; is three consecutive ints in increasing order differing by 1 (i.e. &lt;code&gt;3,4,5&lt;/code&gt; is a triple, but &lt;code&gt;5,4,3&lt;/code&gt; and &lt;code&gt;2,4,6&lt;/code&gt; are not).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;The first line contains the size of an array.&lt;br&gt;The second line contains elements of the array separated by spaces.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;br&gt;Only a single integer value - the number of &quot;triples&quot;.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="3163">
                        <samples id="3164">
                          <Sample id="3165">&lt;input&gt;6
1 2 4 5 6 7
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3166" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3167" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="3168">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3169" />
                    </block>
                    <actions class="linked-hash-map" id="3170">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3171">
                      <string>31-77-216243</string>
                      <string>30-77-216243</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>34</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.3373493975903614</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3172">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3173">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3174">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3175">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3176">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3177">
                  <id>56027</id>
                  <title>Multi-dimensional array # Sum of neighbours</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56027</progress>
                  <createDate id="3178">2017-09-12 14:45:36.0 UTC</createDate>
                  <updateDate id="3179">2018-03-28 14:07:56.0 UTC</updateDate>
                  <discussionsCount>2</discussionsCount>
                  <discussionProxy>76-56027-1</discussionProxy>
                  <discussionThreads id="3180">
                    <string>76-56027-1</string>
                  </discussionThreads>
                  <steps id="3181">
                    <long>216368</long>
                  </steps>
                  <actions class="linked-hash-map" id="3182" />
                  <tags id="3183" />
                  <requiredTags id="3184" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3185">
                    <string>31-76-56027</string>
                    <string>30-76-56027</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>5979</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Sum-of-neighbours-56027</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>1</abuseCount>
                  <vote>76-56027</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3186">
                <StepNode id="3187">
                  <parent class="LessonNode" reference="3172" />
                  <data class="Step" id="3188">
                    <id>216368</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216368</progress>
                    <createDate id="3189">2017-09-04 10:16:05.0 UTC</createDate>
                    <updateDate id="3190">2018-03-28 14:05:57.0 UTC</updateDate>
                    <discussionsCount>2</discussionsCount>
                    <discussionProxy>77-216368-1</discussionProxy>
                    <discussionThreads id="3191">
                      <string>77-216368-1</string>
                      <string>77-216368-2</string>
                    </discussionThreads>
                    <lesson>56027</lesson>
                    <status>ready</status>
                    <block id="3192">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program, which inputs the rectangular matrix from a sequence of lines, ending with a line, containing the only word &lt;b&gt;&quot;end&quot;&lt;/b&gt; (without the quotation marks).&lt;/p&gt;

&lt;p&gt;The program should output the matrix of the same size, where each element in the position &lt;code&gt;(i, j)&lt;/code&gt; is equal to the sum of the elements from the first matrix on the positions &lt;code&gt;(i-1, j)&lt;/code&gt;&lt;code&gt;(i+1, j)&lt;/code&gt;&lt;code&gt;(i, j-1)&lt;/code&gt;, &lt;code&gt;(i, j+1)&lt;/code&gt;. Boundary elements have neighbours on the opposite side of the matrix. In the case of one row or column, the element itself may be its neighbour.&lt;/p&gt;</text>
                      <options id="3193">
                        <samples id="3194">
                          <Sample id="3195">&lt;input&gt;9 5 3
0 7 -1
-5 2 9
end&lt;/input&gt;&lt;output&gt;3 21 22
10 6 19
20 16 -1&lt;/output&gt;</Sample>
                          <Sample id="3196">&lt;input&gt;1
end&lt;/input&gt;&lt;output&gt;4&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3197" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3198" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3199">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3200" />
                    </block>
                    <actions class="linked-hash-map" id="3201">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3202">
                      <string>31-77-216368</string>
                      <string>30-77-216368</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.1565217391304348</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3203">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3204">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3205">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3206">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3207">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3208">
                  <id>56020</id>
                  <title>Multi-dimensional array # Transposition of the matrix</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56020</progress>
                  <createDate id="3209">2017-09-12 14:45:34.0 UTC</createDate>
                  <updateDate id="3210">2018-02-05 04:47:25.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56020-1</discussionProxy>
                  <discussionThreads id="3211">
                    <string>76-56020-1</string>
                  </discussionThreads>
                  <steps id="3212">
                    <long>205422</long>
                  </steps>
                  <actions class="linked-hash-map" id="3213" />
                  <tags id="3214" />
                  <requiredTags id="3215" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3216">
                    <string>31-76-56020</string>
                    <string>30-76-56020</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>649</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Transposition-of-the-matrix-56020</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56020</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3217">
                <StepNode id="3218">
                  <parent class="LessonNode" reference="3203" />
                  <data class="Step" id="3219">
                    <id>205422</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205422</progress>
                    <createDate id="3220">2017-07-23 12:53:12.0 UTC</createDate>
                    <updateDate id="3221">2018-02-05 04:47:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205422-1</discussionProxy>
                    <discussionThreads id="3222">
                      <string>77-205422-1</string>
                      <string>77-205422-2</string>
                    </discussionThreads>
                    <lesson>56020</lesson>
                    <status>ready</status>
                    <block id="3223">
                      <name>code</name>
                      <text>&lt;p&gt;Input, separated by spaces: the number of rows of the matrix, the number of
columns of the matrix, then go the elements of the two-dimensional matrix
itself, row by row.&lt;/p&gt;
&lt;p&gt;Output: the result of the transposition of the matrix (row by row).&lt;/p&gt;</text>
                      <options id="3224">
                        <samples id="3225">
                          <Sample id="3226">&lt;input&gt;2 3 1 2 3 4 5 6&lt;/input&gt;&lt;output&gt;1 4 2 5 3 6&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3227" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3228" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3229">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3230" />
                    </block>
                    <actions class="linked-hash-map" id="3231">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3232">
                      <string>31-77-205422</string>
                      <string>30-77-205422</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>31</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.5384615384615384</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3233">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3234">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3235">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3236">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3237">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3238">
                  <id>56047</id>
                  <title>Method # Reversing strings</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56047</progress>
                  <createDate id="3239">2017-09-12 14:45:43.0 UTC</createDate>
                  <updateDate id="3240">2018-02-14 13:08:02.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56047-1</discussionProxy>
                  <discussionThreads id="3241">
                    <string>76-56047-1</string>
                  </discussionThreads>
                  <steps id="3242">
                    <long>206275</long>
                  </steps>
                  <actions class="linked-hash-map" id="3243" />
                  <tags id="3244" />
                  <requiredTags id="3245" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3246">
                    <string>31-76-56047</string>
                    <string>30-76-56047</string>
                  </subscriptions>
                  <viewedBy>42</viewedBy>
                  <passedBy>34</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>502</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Method-Reversing-strings-56047</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56047</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3247">
                <StepNode id="3248">
                  <parent class="LessonNode" reference="3233" />
                  <data class="Step" id="3249">
                    <id>206275</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206275</progress>
                    <createDate id="3250">2017-07-29 13:17:23.0 UTC</createDate>
                    <updateDate id="3251">2018-02-14 13:08:00.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206275-1</discussionProxy>
                    <discussionThreads id="3252">
                      <string>77-206275-1</string>
                      <string>77-206275-2</string>
                    </discussionThreads>
                    <lesson>56047</lesson>
                    <status>ready</status>
                    <block id="3253">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;b&gt;Reversing strings&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Implement a method for reversing a given array of strings. The array can have any size.&lt;/p&gt;&lt;p&gt;The method may reverse and return existing array or returns a new array.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Example:&lt;/b&gt; the sequence of strings &quot;java&quot;, &quot;programming&quot;, &quot;methods&quot; is reversed as &quot;methods&quot;, &quot;programming&quot;, &quot;java&quot;.&lt;/p&gt;</text>
                      <options id="3254">
                        <samples id="3255" />
                        <codeTemplates class="LinkedTreeMap" id="3256" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>private static String[] reverse(String... words) {

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3257" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3258">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3259" />
                    </block>
                    <actions class="linked-hash-map" id="3260">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3261">
                      <string>31-77-206275</string>
                      <string>30-77-206275</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>42</viewedBy>
                    <passedBy>34</passedBy>
                    <correctRatio>0.31932773109243695</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3262">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3263">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3264">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3265">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3266">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3267">
                  <id>60429</id>
                  <title>Defining methods # Find the max of three numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60429</progress>
                  <createDate id="3268">2017-11-04 17:14:31.0 UTC</createDate>
                  <updateDate id="3269">2018-03-06 15:19:43.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60429-1</discussionProxy>
                  <discussionThreads id="3270">
                    <string>76-60429-1</string>
                  </discussionThreads>
                  <steps id="3271">
                    <long>238107</long>
                  </steps>
                  <actions class="linked-hash-map" id="3272" />
                  <tags id="3273" />
                  <requiredTags id="3274" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3275">
                    <string>31-76-60429</string>
                    <string>30-76-60429</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>506</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-methods-Find-the-max-of-three-numbers-60429</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60429</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3276">
                <StepNode id="3277">
                  <parent class="LessonNode" reference="3262" />
                  <data class="Step" id="3278">
                    <id>238107</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-238107</progress>
                    <createDate id="3279">2017-11-04 17:25:58.0 UTC</createDate>
                    <updateDate id="3280">2018-03-06 15:19:41.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-238107-1</discussionProxy>
                    <discussionThreads id="3281">
                      <string>77-238107-1</string>
                      <string>77-238107-2</string>
                    </discussionThreads>
                    <lesson>60429</lesson>
                    <status>ready</status>
                    <block id="3282">
                      <name>code</name>
                      <text>Given the method named &lt;code&gt;getNumberOfMaxParam&lt;/code&gt; that takes three integer numbers. It should return the number of the first max in the order of the method parameters. &lt;br&gt;&lt;br&gt;The first parameter has the number 1, the second one is 2, the third one is 3.&lt;br&gt;&lt;br&gt;Write a body of the method.</text>
                      <options id="3283">
                        <samples id="3284">
                          <Sample id="3285">&lt;input&gt;12 3 12&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3286" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int getNumberOfMaxParam(int a, int b, int c) {
    // write a body here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3287" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3288">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3289" />
                    </block>
                    <actions class="linked-hash-map" id="3290">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3291">
                      <string>31-77-238107</string>
                      <string>30-77-238107</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.3194444444444444</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3292">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3293">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3294">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3295">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3296">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3297">
                  <id>60433</id>
                  <title>Defining methods # Composite numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60433</progress>
                  <createDate id="3298">2017-11-04 17:50:53.0 UTC</createDate>
                  <updateDate id="3299">2018-02-14 13:20:06.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60433-1</discussionProxy>
                  <discussionThreads id="3300">
                    <string>76-60433-1</string>
                  </discussionThreads>
                  <steps id="3301">
                    <long>238116</long>
                  </steps>
                  <actions class="linked-hash-map" id="3302" />
                  <tags id="3303" />
                  <requiredTags id="3304" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3305">
                    <string>31-76-60433</string>
                    <string>30-76-60433</string>
                  </subscriptions>
                  <viewedBy>31</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>619</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Defining-methods-Composite-numbers-60433</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60433</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3306">
                <StepNode id="3307">
                  <parent class="LessonNode" reference="3292" />
                  <data class="Step" id="3308">
                    <id>238116</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-238116</progress>
                    <createDate id="3309">2017-11-04 18:16:29.0 UTC</createDate>
                    <updateDate id="3310">2018-02-14 13:20:05.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-238116-1</discussionProxy>
                    <discussionThreads id="3311">
                      <string>77-238116-1</string>
                      <string>77-238116-2</string>
                    </discussionThreads>
                    <lesson>60433</lesson>
                    <status>ready</status>
                    <block id="3312">
                      <name>code</name>
                      <text>Write a method that tests the given number is composite or not. The composite number is a positive integer that has at least one divisor other than 1 and itself.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The method should return a value of the boolean type. &lt;span&gt;Use the provided template to write your solution.&lt;/span&gt;&lt;/div&gt;</text>
                      <options id="3313">
                        <samples id="3314">
                          <Sample id="3315">&lt;input&gt;1&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                          <Sample id="3316">&lt;input&gt;2&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                          <Sample id="3317">&lt;input&gt;4&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3318" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static boolean isComposite(long number) {
    // write your code here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3319" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3320">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3321" />
                    </block>
                    <actions class="linked-hash-map" id="3322">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3323">
                      <string>31-77-238116</string>
                      <string>30-77-238116</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>31</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.375</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3324">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3325">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3326">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3327">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3328">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3329">
                  <id>65831</id>
                  <title>Recursion # Number of decompositions</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65831</progress>
                  <createDate id="3330">2018-01-04 13:15:41.0 UTC</createDate>
                  <updateDate id="3331">2018-01-23 13:49:32.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65831-1</discussionProxy>
                  <discussionThreads id="3332">
                    <string>76-65831-1</string>
                  </discussionThreads>
                  <steps id="3333">
                    <long>259951</long>
                  </steps>
                  <actions class="linked-hash-map" id="3334" />
                  <tags id="3335" />
                  <requiredTags id="3336" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3337">
                    <string>31-76-65831</string>
                    <string>30-76-65831</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>6</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Recursion-Number-of-decompositions-65831</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65831</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3338">
                <StepNode id="3339">
                  <parent class="LessonNode" reference="3324" />
                  <data class="Step" id="3340">
                    <id>259951</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-259951</progress>
                    <createDate id="3341">2018-01-04 14:07:08.0 UTC</createDate>
                    <updateDate id="3342">2018-01-04 14:07:08.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-259951-1</discussionProxy>
                    <discussionThreads id="3343">
                      <string>77-259951-1</string>
                    </discussionThreads>
                    <lesson>65831</lesson>
                    <status>ready</status>
                    <block id="3344">
                      <name>code</name>
                      <text>&lt;p&gt;Read the integer $N$ ($1 \leq N \leq 40$) from the standard input and l&lt;span&gt;ist all the
decompositions of &lt;/span&gt;&lt;span class=&quot;MathJax&quot;&gt;&lt;span class=&quot;math&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;mrow&quot;&gt;&lt;span class=&quot;mi&quot;&gt;N&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;N&lt;/span&gt;&lt;/span&gt;&lt;span&gt; into the whole positive addends. &lt;/span&gt;&lt;span&gt;The addends should go in non-ascending order within each
decomposition.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Output all decompositions in the lexicographical order.&lt;/p&gt;&lt;p&gt;Please, use a recursive method to write your solution.&lt;/p&gt;</text>
                      <options id="3345">
                        <samples id="3346">
                          <Sample id="3347">&lt;input&gt;5&lt;/input&gt;&lt;output&gt;1 1 1 1 1
2 1 1 1
2 2 1
3 1 1
3 2
4 1
5
&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3348" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3349" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3350">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3351" />
                    </block>
                    <actions class="linked-hash-map" id="3352">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3353">
                      <string>31-77-259951</string>
                      <string>30-77-259951</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>6</passedBy>
                    <correctRatio>0.1956521739130435</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3354">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3355">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3356">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3357">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3358">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3359">
                  <id>55958</id>
                  <title>Conditional statement # Healthy sleep</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55958</progress>
                  <createDate id="3360">2017-09-12 14:45:11.0 UTC</createDate>
                  <updateDate id="3361">2018-02-12 16:25:53.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55958-1</discussionProxy>
                  <discussionThreads id="3362">
                    <string>76-55958-1</string>
                  </discussionThreads>
                  <steps id="3363">
                    <long>206825</long>
                  </steps>
                  <actions class="linked-hash-map" id="3364" />
                  <tags id="3365" />
                  <requiredTags id="3366" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3367">
                    <string>31-76-55958</string>
                    <string>30-76-55958</string>
                  </subscriptions>
                  <viewedBy>72</viewedBy>
                  <passedBy>53</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>473</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Conditional-statement-Healthy-sleep-55958</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55958</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3368">
                <StepNode id="3369">
                  <parent class="LessonNode" reference="3354" />
                  <data class="Step" id="3370">
                    <id>206825</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206825</progress>
                    <createDate id="3371">2017-08-01 15:02:02.0 UTC</createDate>
                    <updateDate id="3372">2017-09-12 14:45:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206825-1</discussionProxy>
                    <discussionThreads id="3373">
                      <string>77-206825-1</string>
                      <string>77-206825-2</string>
                    </discussionThreads>
                    <lesson>55958</lesson>
                    <status>ready</status>
                    <block id="3374">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;b&gt;Healthy sleep&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Ann watched a TV program about health and learned that it is
recommended to sleep at least $A$ hours per day, but oversleeping is also not
healthy and you should not sleep more than $B$ hours. Now Ann sleeps $H$ hours
per day. If Ann's sleep schedule complies with the requirements of that TV
program – print &quot;Normal&quot;. If Ann sleeps less than $A$ hours, output “Deficiency”, if she sleeps more than $B$ hours,
output “Excess”.&lt;/p&gt;

&lt;p&gt;Input to this program are the three strings with variables in the
following order: $A$, $B$, $H$. $A$ is always less than or equal to $B$.&lt;/p&gt;

&lt;p&gt;Please note latters case: the output should exactly correspond to what required in the problem, i.e. if the program has to
output &quot;Excess&quot;, such output as &quot;excess&quot;, &quot;EXCESS&quot;, &quot;ExCeSs&quot; and others will not be graded as correct.&lt;/p&gt;

&lt;p&gt;You should &lt;b&gt;carefully&lt;/b&gt; think
about all conditions, which you need to use. A special attention should be paid
to the strictness of the used conditional operators: distinguish between $\lt$
and $\le$; $\gt$ and $\ge$. In order to understand which ones to use, please &lt;b&gt;carefully&lt;/b&gt; read the problem statement.&lt;/p&gt;</text>
                      <options id="3375">
                        <samples id="3376">
                          <Sample id="3377">&lt;input&gt;6
10
8&lt;/input&gt;&lt;output&gt;Normal&lt;/output&gt;</Sample>
                          <Sample id="3378">&lt;input&gt;7
9
10&lt;/input&gt;&lt;output&gt;Excess&lt;/output&gt;</Sample>
                          <Sample id="3379">&lt;input&gt;7
9
2&lt;/input&gt;&lt;output&gt;Deficiency&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3380" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3381" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3382">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3383" />
                    </block>
                    <actions class="linked-hash-map" id="3384">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3385">
                      <string>31-77-206825</string>
                      <string>30-77-206825</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>72</viewedBy>
                    <passedBy>53</passedBy>
                    <correctRatio>0.4830508474576271</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3386">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3387">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3388">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3389">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3390">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3391">
                  <id>55956</id>
                  <title>Conditional statement # Leap year</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55956</progress>
                  <createDate id="3392">2017-09-12 14:45:10.0 UTC</createDate>
                  <updateDate id="3393">2018-02-12 16:23:06.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55956-1</discussionProxy>
                  <discussionThreads id="3394">
                    <string>76-55956-1</string>
                  </discussionThreads>
                  <steps id="3395">
                    <long>206824</long>
                  </steps>
                  <actions class="linked-hash-map" id="3396" />
                  <tags id="3397" />
                  <requiredTags id="3398" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3399">
                    <string>31-76-55956</string>
                    <string>30-76-55956</string>
                  </subscriptions>
                  <viewedBy>68</viewedBy>
                  <passedBy>50</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>426</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Conditional-statement-Leap-year-55956</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55956</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3400">
                <StepNode id="3401">
                  <parent class="LessonNode" reference="3386" />
                  <data class="Step" id="3402">
                    <id>206824</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206824</progress>
                    <createDate id="3403">2017-08-01 15:02:02.0 UTC</createDate>
                    <updateDate id="3404">2018-02-12 16:23:05.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206824-1</discussionProxy>
                    <discussionThreads id="3405">
                      <string>77-206824-1</string>
                      <string>77-206824-2</string>
                    </discussionThreads>
                    <lesson>55956</lesson>
                    <status>ready</status>
                    <block id="3406">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;The problem is to find whether the given year is a leap year.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Just a reminder: leap years are those years, the number of which
is either divisible by 4, but not divisible by 100, or divisible by 400 (for
example, the year 2000 is a leap year, but the year 2100 will not be a leap
year). &lt;/p&gt;

&lt;p&gt;The program should work correctly for the years 1900 ≤ n ≤ 3000.&lt;/p&gt;

&lt;p&gt;Output &quot;Leap&quot; (case-sensitive) if the given year is a
leap, and &quot;Regular&quot; otherwise.&lt;/p&gt;</text>
                      <options id="3407">
                        <samples id="3408">
                          <Sample id="3409">&lt;input&gt;2100&lt;/input&gt;&lt;output&gt;Regular&lt;/output&gt;</Sample>
                          <Sample id="3410">&lt;input&gt;2000&lt;/input&gt;&lt;output&gt;Leap&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3411" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3412" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3413">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3414" />
                    </block>
                    <actions class="linked-hash-map" id="3415">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3416">
                      <string>31-77-206824</string>
                      <string>30-77-206824</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>68</viewedBy>
                    <passedBy>50</passedBy>
                    <correctRatio>0.4838709677419355</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3417">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3418">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3419">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3420">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3421">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3422">
                  <id>55954</id>
                  <title>Conditional statement # Interval</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55954</progress>
                  <createDate id="3423">2017-09-12 14:45:09.0 UTC</createDate>
                  <updateDate id="3424">2018-02-12 16:21:28.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55954-1</discussionProxy>
                  <discussionThreads id="3425">
                    <string>76-55954-1</string>
                  </discussionThreads>
                  <steps id="3426">
                    <long>206829</long>
                  </steps>
                  <actions class="linked-hash-map" id="3427" />
                  <tags id="3428" />
                  <requiredTags id="3429" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3430">
                    <string>31-76-55954</string>
                    <string>30-76-55954</string>
                  </subscriptions>
                  <viewedBy>76</viewedBy>
                  <passedBy>59</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>433</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Conditional-statement-Interval-55954</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55954</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3431">
                <StepNode id="3432">
                  <parent class="LessonNode" reference="3417" />
                  <data class="Step" id="3433">
                    <id>206829</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206829</progress>
                    <createDate id="3434">2017-08-01 15:02:02.0 UTC</createDate>
                    <updateDate id="3435">2018-02-12 16:21:27.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206829-1</discussionProxy>
                    <discussionThreads id="3436">
                      <string>77-206829-1</string>
                      <string>77-206829-2</string>
                    </discussionThreads>
                    <lesson>55954</lesson>
                    <status>ready</status>
                    <block id="3437">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given an integer as input. Output True if
its value is within the interval &lt;/span&gt;&lt;span class=&quot;MathJax&quot;&gt;&lt;span class=&quot;math&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;mrow&quot;&gt;&lt;span class=&quot;mo&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mn&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mn&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;∪&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mn&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mn&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;∪&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mn&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;∞&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;(−15,12]∪(14,17)∪[19,+∞)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;,
and False otherwise (case sensitive).&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Please note the different brackets, which
are used to specify intervals. The problem uses semi-open and open intervals.
You can read more about it on the &lt;a rel=&quot;nofollow&quot; href=&quot;https://en.wikipedia.org/wiki/Interval_(mathematics)#Including_or_excluding_endpoints&quot;&gt;Wikipedia&lt;/a&gt;.&lt;br&gt;&lt;/p&gt;</text>
                      <options id="3438">
                        <samples id="3439">
                          <Sample id="3440">&lt;input&gt;20&lt;/input&gt;&lt;output&gt;True&lt;/output&gt;</Sample>
                          <Sample id="3441">&lt;input&gt;-20&lt;/input&gt;&lt;output&gt;False&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3442" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3443" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3444">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3445" />
                    </block>
                    <actions class="linked-hash-map" id="3446">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3447">
                      <string>31-77-206829</string>
                      <string>30-77-206829</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>76</viewedBy>
                    <passedBy>59</passedBy>
                    <correctRatio>0.4316546762589928</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3448">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3449">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3450">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3451">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3452">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3453">
                  <id>55957</id>
                  <title>Conditional statement # Queens</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55957</progress>
                  <createDate id="3454">2017-09-12 14:45:10.0 UTC</createDate>
                  <updateDate id="3455">2018-02-12 16:24:38.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55957-1</discussionProxy>
                  <discussionThreads id="3456">
                    <string>76-55957-1</string>
                  </discussionThreads>
                  <steps id="3457">
                    <long>206827</long>
                  </steps>
                  <actions class="linked-hash-map" id="3458" />
                  <tags id="3459" />
                  <requiredTags id="3460" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3461">
                    <string>31-76-55957</string>
                    <string>30-76-55957</string>
                  </subscriptions>
                  <viewedBy>68</viewedBy>
                  <passedBy>48</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>832</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Conditional-statement-Queens-55957</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55957</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3462">
                <StepNode id="3463">
                  <parent class="LessonNode" reference="3448" />
                  <data class="Step" id="3464">
                    <id>206827</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206827</progress>
                    <createDate id="3465">2017-08-01 15:02:02.0 UTC</createDate>
                    <updateDate id="3466">2018-02-12 16:24:37.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206827-1</discussionProxy>
                    <discussionThreads id="3467">
                      <string>77-206827-1</string>
                      <string>77-206827-2</string>
                    </discussionThreads>
                    <lesson>55957</lesson>
                    <status>ready</status>
                    <block id="3468">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;You are given coordinates of two queens on a chess board. Find out, whether they hit each other or not.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;/b&gt;Four integer numbers $ x_1, y_1, x_2, y_2 $ are being typed.&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;/b&gt;Type &quot;YES&quot; (uppercase) if they hit each other or &quot;NO&quot; if the don't.&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You may need a method, that calculates the absolute value of the number, here it is:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;Math.abs(n)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="3469">
                        <samples id="3470">
                          <Sample id="3471">&lt;input&gt;1 1 3 3&lt;/input&gt;&lt;output&gt;YES&lt;/output&gt;</Sample>
                          <Sample id="3472">&lt;input&gt;1 1 4 3&lt;/input&gt;&lt;output&gt;NO&lt;/output&gt;</Sample>
                          <Sample id="3473">&lt;input&gt;2 2 5 2&lt;/input&gt;&lt;output&gt;YES&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3474" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3475" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3476">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3477" />
                    </block>
                    <actions class="linked-hash-map" id="3478">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3479">
                      <string>31-77-206827</string>
                      <string>30-77-206827</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>68</viewedBy>
                    <passedBy>48</passedBy>
                    <correctRatio>0.3081081081081081</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3480">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3481">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3482">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3483">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3484">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3485">
                  <id>55955</id>
                  <title>Conditional statement # Symmetrical number</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55955</progress>
                  <createDate id="3486">2017-09-12 14:45:10.0 UTC</createDate>
                  <updateDate id="3487">2018-02-12 16:22:21.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55955-1</discussionProxy>
                  <discussionThreads id="3488">
                    <string>76-55955-1</string>
                  </discussionThreads>
                  <steps id="3489">
                    <long>206826</long>
                  </steps>
                  <actions class="linked-hash-map" id="3490" />
                  <tags id="3491" />
                  <requiredTags id="3492" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3493">
                    <string>31-76-55955</string>
                    <string>30-76-55955</string>
                  </subscriptions>
                  <viewedBy>79</viewedBy>
                  <passedBy>57</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1062</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Conditional-statement-Symmetrical-number-55955</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55955</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3494">
                <StepNode id="3495">
                  <parent class="LessonNode" reference="3480" />
                  <data class="Step" id="3496">
                    <id>206826</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206826</progress>
                    <createDate id="3497">2017-08-01 15:02:02.0 UTC</createDate>
                    <updateDate id="3498">2018-02-12 16:22:21.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206826-1</discussionProxy>
                    <discussionThreads id="3499">
                      <string>77-206826-1</string>
                      <string>77-206826-2</string>
                    </discussionThreads>
                    <lesson>55955</lesson>
                    <status>ready</status>
                    <block id="3500">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a four-digit number. Determine whether its decimal notation
is symmetric. If the number is symmetrical, output 1, otherwise output any
other integer. The number may have less than four digits, then you should
assume that its decimal notation is complemented by insignificant zeros on the
left.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="3501">
                        <samples id="3502">
                          <Sample id="3503">&lt;input&gt;2002&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                          <Sample id="3504">&lt;input&gt;2008&lt;/input&gt;&lt;output&gt;37&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3505" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3506" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3507">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3508" />
                    </block>
                    <actions class="linked-hash-map" id="3509">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3510">
                      <string>31-77-206826</string>
                      <string>30-77-206826</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>84</viewedBy>
                    <passedBy>61</passedBy>
                    <correctRatio>0.23703703703703705</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3511">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3512">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3513">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3514">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3515">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3516">
                  <id>62323</id>
                  <title>LocalDateTime # Subtracting hours and adding minutes</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62323</progress>
                  <createDate id="3517">2017-11-27 16:38:19.0 UTC</createDate>
                  <updateDate id="3518">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62323-1</discussionProxy>
                  <discussionThreads id="3519">
                    <string>76-62323-1</string>
                  </discussionThreads>
                  <steps id="3520">
                    <long>245855</long>
                  </steps>
                  <actions class="linked-hash-map" id="3521" />
                  <tags id="3522" />
                  <requiredTags id="3523" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3524">
                    <string>31-76-62323</string>
                    <string>30-76-62323</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>337</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>LocalDateTime-Subtracting-hours-and-adding-minutes-62323</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62323</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3525">
                <StepNode id="3526">
                  <parent class="LessonNode" reference="3511" />
                  <data class="Step" id="3527">
                    <id>245855</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-245855</progress>
                    <createDate id="3528">2017-11-28 07:04:03.0 UTC</createDate>
                    <updateDate id="3529">2017-11-28 09:00:03.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-245855-1</discussionProxy>
                    <discussionThreads id="3530">
                      <string>77-245855-1</string>
                      <string>77-245855-2</string>
                    </discussionThreads>
                    <lesson>62323</lesson>
                    <status>ready</status>
                    <block id="3531">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;b&gt;The problem statement&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;Write a program that subtracts N hours and adds M minutes to a date-time pair.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;div&gt;The first line contains a date-time pair (year-month-dayThours:minutes). The second line contains two numbers separated by a space: hours to subtract and minutes to add.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;A single line with a date-time pair (year-month-dayThours:minutes).&lt;/div&gt;</text>
                      <options id="3532">
                        <samples id="3533">
                          <Sample id="3534">&lt;input&gt;2017-12-15T11:11
1 58&lt;/input&gt;&lt;output&gt;2017-12-15T11:09&lt;/output&gt;</Sample>
                          <Sample id="3535">&lt;input&gt;2016-11-22T00:00
5000 300010&lt;/input&gt;&lt;output&gt;2016-11-22T00:10&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3536" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3537" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3538">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3539" />
                    </block>
                    <actions class="linked-hash-map" id="3540">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3541">
                      <string>31-77-245855</string>
                      <string>30-77-245855</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.78125</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3542">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3543">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3544">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3545">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3546">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3547">
                  <id>62460</id>
                  <title>LocalDateTime # Whole hours between two date-time pairs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62460</progress>
                  <createDate id="3548">2017-11-28 11:02:40.0 UTC</createDate>
                  <updateDate id="3549">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62460-1</discussionProxy>
                  <discussionThreads id="3550">
                    <string>76-62460-1</string>
                  </discussionThreads>
                  <steps id="3551">
                    <long>245956</long>
                  </steps>
                  <actions class="linked-hash-map" id="3552" />
                  <tags id="3553" />
                  <requiredTags id="3554" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3555">
                    <string>31-76-62460</string>
                    <string>30-76-62460</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1241</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>LocalDateTime-Whole-hours-between-two-date-time-pairs-62460</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62460</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3556">
                <StepNode id="3557">
                  <parent class="LessonNode" reference="3542" />
                  <data class="Step" id="3558">
                    <id>245956</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-245956</progress>
                    <createDate id="3559">2017-11-28 11:06:10.0 UTC</createDate>
                    <updateDate id="3560">2017-11-28 11:25:26.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-245956-1</discussionProxy>
                    <discussionThreads id="3561">
                      <string>77-245956-1</string>
                      <string>77-245956-2</string>
                    </discussionThreads>
                    <lesson>62460</lesson>
                    <status>ready</status>
                    <block id="3562">
                      <name>code</name>
                      <text>&lt;b&gt;The problem statement&lt;/b&gt;&lt;br&gt;Write a program that reads two date-time pairs in the same year and calculates how many whole hours between them.&lt;br&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;The first and the second lines contains a date-time pair &lt;b&gt;year-month-dayThour:minute &lt;/b&gt;(without seconds and nanoseconds).&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;The line containing a integer non-negative number.</text>
                      <options id="3563">
                        <samples id="3564">
                          <Sample id="3565">&lt;input&gt;2017-06-15T01:50
2017-06-16T01:10&lt;/input&gt;&lt;output&gt;23&lt;/output&gt;</Sample>
                          <Sample id="3566">&lt;input&gt;2017-06-15T01:50
2017-06-15T02:50&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3567" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3568" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3569">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3570" />
                    </block>
                    <actions class="linked-hash-map" id="3571">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3572">
                      <string>31-77-245956</string>
                      <string>30-77-245956</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.4</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3573">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3574">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3575">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3576">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3577">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3578">
                  <id>62321</id>
                  <title>LocalDateTime # Merging date-time instances</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62321</progress>
                  <createDate id="3579">2017-11-27 16:38:06.0 UTC</createDate>
                  <updateDate id="3580">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62321-1</discussionProxy>
                  <discussionThreads id="3581">
                    <string>76-62321-1</string>
                  </discussionThreads>
                  <steps id="3582">
                    <long>245652</long>
                  </steps>
                  <actions class="linked-hash-map" id="3583" />
                  <tags id="3584" />
                  <requiredTags id="3585" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3586">
                    <string>31-76-62321</string>
                    <string>30-76-62321</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>776</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>LocalDateTime-Merging-date-time-instances-62321</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>1</abuseCount>
                  <vote>76-62321</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3587">
                <StepNode id="3588">
                  <parent class="LessonNode" reference="3573" />
                  <data class="Step" id="3589">
                    <id>245652</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-245652</progress>
                    <createDate id="3590">2017-11-27 18:47:34.0 UTC</createDate>
                    <updateDate id="3591">2017-11-27 19:00:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-245652-1</discussionProxy>
                    <discussionThreads id="3592">
                      <string>77-245652-1</string>
                      <string>77-245652-2</string>
                    </discussionThreads>
                    <lesson>62321</lesson>
                    <status>ready</status>
                    <block id="3593">
                      <name>code</name>
                      <text>Implement a method that reads takes instances of &lt;code&gt;DateTime&lt;/code&gt; class and merges their largest components into one object. You should consider the following components: years, months, days of months, hours, minutes and seconds.</text>
                      <options id="3594">
                        <samples id="3595">
                          <Sample id="3596">&lt;input&gt;2018-10-20T22:30
2017-12-30T22:31:45&lt;/input&gt;&lt;output&gt;2018-12-30T22:31:45&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3597" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static LocalDateTime merge(LocalDateTime dateTime1, LocalDateTime dateTime2) {
    return dateTime1;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3598" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3599">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3600" />
                    </block>
                    <actions class="linked-hash-map" id="3601">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3602">
                      <string>31-77-245652</string>
                      <string>30-77-245652</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.3380281690140845</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3603">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3604">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3605">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3606">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3607">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3608">
                  <id>62324</id>
                  <title>LocalDateTime # The passed hours since the beginning of year</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62324</progress>
                  <createDate id="3609">2017-11-27 16:38:24.0 UTC</createDate>
                  <updateDate id="3610">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62324-1</discussionProxy>
                  <discussionThreads id="3611">
                    <string>76-62324-1</string>
                  </discussionThreads>
                  <steps id="3612">
                    <long>245937</long>
                  </steps>
                  <actions class="linked-hash-map" id="3613" />
                  <tags id="3614" />
                  <requiredTags id="3615" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3616">
                    <string>31-76-62324</string>
                    <string>30-76-62324</string>
                  </subscriptions>
                  <viewedBy>25</viewedBy>
                  <passedBy>14</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>902</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>LocalDateTime-The-passed-hours-since-the-beginning-of-year-62324</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62324</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3617">
                <StepNode id="3618">
                  <parent class="LessonNode" reference="3603" />
                  <data class="Step" id="3619">
                    <id>245937</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-245937</progress>
                    <createDate id="3620">2017-11-28 10:21:48.0 UTC</createDate>
                    <updateDate id="3621">2017-11-28 10:27:19.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-245937-1</discussionProxy>
                    <discussionThreads id="3622">
                      <string>77-245937-1</string>
                      <string>77-245937-2</string>
                    </discussionThreads>
                    <lesson>62324</lesson>
                    <status>ready</status>
                    <block id="3623">
                      <name>code</name>
                      <text>&lt;b&gt;The problem statement&lt;/b&gt;&lt;br&gt;Write a program that reads a date-time pair and calculates how many hours have passed since the beginning of the year (1st January, 00:00).&lt;br&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;The first line contains a date-time pair in the format &lt;b&gt;year-month-dayThour:minute&lt;/b&gt;.&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;The line containing an integer number.</text>
                      <options id="3624">
                        <samples id="3625">
                          <Sample id="3626">&lt;input&gt;2017-12-31T23:59:59&lt;/input&gt;&lt;output&gt;8759&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3627" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3628" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3629">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3630" />
                    </block>
                    <actions class="linked-hash-map" id="3631">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3632">
                      <string>31-77-245937</string>
                      <string>30-77-245937</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>25</viewedBy>
                    <passedBy>14</passedBy>
                    <correctRatio>0.3409090909090909</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3633">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3634">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3635">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3636">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3637">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3638">
                  <id>62460</id>
                  <title>LocalDateTime # Whole hours between two date-time pairs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62460</progress>
                  <createDate id="3639">2017-11-28 11:02:40.0 UTC</createDate>
                  <updateDate id="3640">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62460-1</discussionProxy>
                  <discussionThreads id="3641">
                    <string>76-62460-1</string>
                  </discussionThreads>
                  <steps id="3642">
                    <long>245956</long>
                  </steps>
                  <actions class="linked-hash-map" id="3643" />
                  <tags id="3644" />
                  <requiredTags id="3645" />
                  <playlists id="3646" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3647">
                    <string>31-76-62460</string>
                    <string>30-76-62460</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies id="3648" />
                  <followers id="3649" />
                  <timeToComplete>1241</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>LocalDateTime-Whole-hours-between-two-date-time-pairs-62460</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62460</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3650">
                <StepNode id="3651">
                  <parent class="LessonNode" reference="3633" />
                  <data class="Step" id="3652">
                    <id>245956</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-245956</progress>
                    <createDate id="3653">2017-11-28 11:06:10.0 UTC</createDate>
                    <updateDate id="3654">2017-11-28 11:25:26.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-245956-1</discussionProxy>
                    <discussionThreads id="3655">
                      <string>77-245956-1</string>
                      <string>77-245956-2</string>
                    </discussionThreads>
                    <lesson>62460</lesson>
                    <status>ready</status>
                    <block id="3656">
                      <name>code</name>
                      <text>&lt;b&gt;The problem statement&lt;/b&gt;&lt;br&gt;Write a program that reads two date-time pairs in the same year and calculates how many whole hours between them.&lt;br&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;The first and the second lines contains a date-time pair &lt;b&gt;year-month-dayThour:minute &lt;/b&gt;(without seconds and nanoseconds).&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;The line containing a integer non-negative number.</text>
                      <options id="3657">
                        <samples id="3658">
                          <Sample id="3659">&lt;input&gt;2017-06-15T01:50
2017-06-16T01:10&lt;/input&gt;&lt;output&gt;23&lt;/output&gt;</Sample>
                          <Sample id="3660">&lt;input&gt;2017-06-15T01:50
2017-06-15T02:50&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3661" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3662" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3663">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3664" />
                    </block>
                    <actions class="linked-hash-map" id="3665">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3666">
                      <string>31-77-245956</string>
                      <string>30-77-245956</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.4</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3667">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3668">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3669">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3670">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3671">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3672">
                  <id>62694</id>
                  <title>Comparing dates and time # The intersection of time ranges</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62694</progress>
                  <createDate id="3673">2017-11-30 18:03:52.0 UTC</createDate>
                  <updateDate id="3674">2018-02-15 18:53:58.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62694-1</discussionProxy>
                  <discussionThreads id="3675">
                    <string>76-62694-1</string>
                  </discussionThreads>
                  <steps id="3676">
                    <long>247028</long>
                  </steps>
                  <actions class="linked-hash-map" id="3677" />
                  <tags id="3678" />
                  <requiredTags id="3679" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3680">
                    <string>31-76-62694</string>
                    <string>30-76-62694</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1781</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-The-intersection-of-time-ranges-62694</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62694</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3681">
                <StepNode id="3682">
                  <parent class="LessonNode" reference="3667" />
                  <data class="Step" id="3683">
                    <id>247028</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-247028</progress>
                    <createDate id="3684">2017-11-30 18:16:52.0 UTC</createDate>
                    <updateDate id="3685">2018-02-15 18:53:57.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-247028-1</discussionProxy>
                    <discussionThreads id="3686">
                      <string>77-247028-1</string>
                      <string>77-247028-2</string>
                    </discussionThreads>
                    <lesson>62694</lesson>
                    <status>ready</status>
                    <block id="3687">
                      <name>code</name>
                      <text>Write a program that reads time ranges and checks the range intervals intersects. Two ranges intersect if they have at least one common point in time (with a minute accuracy).&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first and second lines contain time ranges. Each time range consists of early and late time separated by one space. The format of a time is &lt;b&gt;hour:minute &lt;/b&gt;(there is no seconds, millis, nano, etc).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The program must output &lt;b&gt;&quot;true&quot;&lt;/b&gt; if the given intervals intersect, otherwise - &lt;b&gt;&quot;false&quot;&lt;/b&gt;.&lt;/div&gt;</text>
                      <options id="3688">
                        <samples id="3689">
                          <Sample id="3690">&lt;input&gt;00:10 00:20
00:15 00:30&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3691">&lt;input&gt;13:50 14:40
14:40 15:30&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3692">&lt;input&gt;20:20 21:40
19:30 20:18&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3693" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3694" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3695">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3696" />
                    </block>
                    <actions class="linked-hash-map" id="3697">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3698">
                      <string>31-77-247028</string>
                      <string>30-77-247028</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.5185185185185185</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3699">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3700">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3701">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3702">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3703">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3704">
                  <id>62523</id>
                  <title>Comparing dates and time # The New Year is coming</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62523</progress>
                  <createDate id="3705">2017-11-29 15:14:28.0 UTC</createDate>
                  <updateDate id="3706">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62523-1</discussionProxy>
                  <discussionThreads id="3707">
                    <string>76-62523-1</string>
                  </discussionThreads>
                  <steps id="3708">
                    <long>246433</long>
                  </steps>
                  <actions class="linked-hash-map" id="3709" />
                  <tags id="3710" />
                  <requiredTags id="3711" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3712">
                    <string>31-76-62523</string>
                    <string>30-76-62523</string>
                  </subscriptions>
                  <viewedBy>39</viewedBy>
                  <passedBy>33</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>637</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-The-New-Year-is-coming-62523</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62523</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3713">
                <StepNode id="3714">
                  <parent class="LessonNode" reference="3699" />
                  <data class="Step" id="3715">
                    <id>246433</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-246433</progress>
                    <createDate id="3716">2017-11-29 16:07:34.0 UTC</createDate>
                    <updateDate id="3717">2017-11-29 16:24:33.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-246433-1</discussionProxy>
                    <discussionThreads id="3718">
                      <string>77-246433-1</string>
                      <string>77-246433-2</string>
                    </discussionThreads>
                    <lesson>62523</lesson>
                    <status>ready</status>
                    <block id="3719">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program for checking the New Year will come in N days from the specified date.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The single input line contains a date in the format &lt;b&gt;year-month-day &lt;/b&gt;﻿and an integer N separated by one space character.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The program must output &lt;b&gt;&quot;true&quot;&lt;/b&gt; or &lt;b&gt;&quot;false&quot;.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="3720">
                        <samples id="3721">
                          <Sample id="3722">&lt;input&gt;2017-01-01 364&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3723" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3724" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3725">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3726" />
                    </block>
                    <actions class="linked-hash-map" id="3727">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3728">
                      <string>31-77-246433</string>
                      <string>30-77-246433</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>39</viewedBy>
                    <passedBy>33</passedBy>
                    <correctRatio>0.45054945054945056</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3729">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3730">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3731">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3732">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3733">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3734">
                  <id>62524</id>
                  <title>Comparing dates and time # Is the date after others?</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62524</progress>
                  <createDate id="3735">2017-11-29 15:14:34.0 UTC</createDate>
                  <updateDate id="3736">2018-02-23 04:43:33.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62524-1</discussionProxy>
                  <discussionThreads id="3737">
                    <string>76-62524-1</string>
                  </discussionThreads>
                  <steps id="3738">
                    <long>246439</long>
                  </steps>
                  <actions class="linked-hash-map" id="3739" />
                  <tags id="3740" />
                  <requiredTags id="3741" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3742">
                    <string>31-76-62524</string>
                    <string>30-76-62524</string>
                  </subscriptions>
                  <viewedBy>43</viewedBy>
                  <passedBy>32</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>751</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-Is-the-date-after-others-62524</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62524</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3743">
                <StepNode id="3744">
                  <parent class="LessonNode" reference="3729" />
                  <data class="Step" id="3745">
                    <id>246439</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-246439</progress>
                    <createDate id="3746">2017-11-29 16:33:14.0 UTC</createDate>
                    <updateDate id="3747">2017-11-29 16:33:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-246439-1</discussionProxy>
                    <discussionThreads id="3748">
                      <string>77-246439-1</string>
                      <string>77-246439-2</string>
                    </discussionThreads>
                    <lesson>62524</lesson>
                    <status>ready</status>
                    <block id="3749">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that reads three dates from the standard input and checks the first date is after other dates or equal to latest of them.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The single line contains three dates separated by the space character. Each date has the format &lt;b&gt;year-month-day&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The program must output &lt;b&gt;&quot;true&quot;&lt;/b&gt; or &lt;b&gt;&quot;false&quot;&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="3750">
                        <samples id="3751">
                          <Sample id="3752">&lt;input&gt;2017-10-13 2017-10-11 2017-10-15&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                          <Sample id="3753">&lt;input&gt;2018-05-06 2017-12-31 2017-01-01&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3754">&lt;input&gt;2017-12-31 2017-12-31 2017-01-01&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3755" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3756" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3757">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3758" />
                    </block>
                    <actions class="linked-hash-map" id="3759">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3760">
                      <string>31-77-246439</string>
                      <string>30-77-246439</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>43</viewedBy>
                    <passedBy>32</passedBy>
                    <correctRatio>0.3564356435643564</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3761">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3762">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3763">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3764">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3765">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3766">
                  <id>62521</id>
                  <title>Comparing dates and time # Is the date between two other dates?</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62521</progress>
                  <createDate id="3767">2017-11-29 15:14:08.0 UTC</createDate>
                  <updateDate id="3768">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62521-1</discussionProxy>
                  <discussionThreads id="3769">
                    <string>76-62521-1</string>
                  </discussionThreads>
                  <steps id="3770">
                    <long>246428</long>
                  </steps>
                  <actions class="linked-hash-map" id="3771" />
                  <tags id="3772" />
                  <requiredTags id="3773" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3774">
                    <string>31-76-62521</string>
                    <string>30-76-62521</string>
                  </subscriptions>
                  <viewedBy>44</viewedBy>
                  <passedBy>37</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>524</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-Is-the-date-between-two-other-dates-62521</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>1</abuseCount>
                  <vote>76-62521</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3775">
                <StepNode id="3776">
                  <parent class="LessonNode" reference="3761" />
                  <data class="Step" id="3777">
                    <id>246428</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-246428</progress>
                    <createDate id="3778">2017-11-29 15:20:55.0 UTC</createDate>
                    <updateDate id="3779">2017-11-29 15:42:42.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-246428-1</discussionProxy>
                    <discussionThreads id="3780">
                      <string>77-246428-1</string>
                      <string>77-246428-2</string>
                    </discussionThreads>
                    <lesson>62521</lesson>
                    <status>ready</status>
                    <block id="3781">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that reads three dates from the standard input and checks the first date between the second and the third but doesn't equal to them.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;The single line contains three dates separated by the space character. Each date has the format &lt;/span&gt;&lt;b&gt;year-month-day&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The program must output &lt;b&gt;&quot;true&quot;&lt;/b&gt; or &lt;b&gt;&quot;false&quot;&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="3782">
                        <samples id="3783">
                          <Sample id="3784">&lt;input&gt;2017-10-13 2017-10-11 2017-10-15&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3785">&lt;input&gt;2017-05-06 2017-12-31 2017-01-01&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3786">&lt;input&gt;2017-04-04 2017-05-05 2017-06-06&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3787" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3788" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3789">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3790" />
                    </block>
                    <actions class="linked-hash-map" id="3791">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3792">
                      <string>31-77-246428</string>
                      <string>30-77-246428</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>44</viewedBy>
                    <passedBy>37</passedBy>
                    <correctRatio>0.3739130434782609</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3793">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3794">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3795">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3796">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3797">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3798">
                  <id>62532</id>
                  <title>Comparing dates and time # To be in time in 30 minutes</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62532</progress>
                  <createDate id="3799">2017-11-29 18:29:15.0 UTC</createDate>
                  <updateDate id="3800">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62532-1</discussionProxy>
                  <discussionThreads id="3801">
                    <string>76-62532-1</string>
                  </discussionThreads>
                  <steps id="3802">
                    <long>246472</long>
                  </steps>
                  <actions class="linked-hash-map" id="3803" />
                  <tags id="3804" />
                  <requiredTags id="3805" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3806">
                    <string>31-76-62532</string>
                    <string>30-76-62532</string>
                  </subscriptions>
                  <viewedBy>43</viewedBy>
                  <passedBy>34</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>810</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-To-be-in-time-in-30-minutes-62532</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62532</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3807">
                <StepNode id="3808">
                  <parent class="LessonNode" reference="3793" />
                  <data class="Step" id="3809">
                    <id>246472</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-246472</progress>
                    <createDate id="3810">2017-11-29 18:38:46.0 UTC</createDate>
                    <updateDate id="3811">2017-11-30 04:01:33.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-246472-1</discussionProxy>
                    <discussionThreads id="3812">
                      <string>77-246472-1</string>
                      <string>77-246472-2</string>
                    </discussionThreads>
                    <lesson>62532</lesson>
                    <status>ready</status>
                    <block id="3813">
                      <name>code</name>
                      <text>&lt;p&gt;You'd like to visit a grocery store but there is one problem. Now is 19:30 and many stores will be closed soon. You have a list of stores near you. You need exactly 30 minutes to get to a store from the list.&lt;/p&gt;&lt;p&gt;Write a program that determines which stores you will be able to reach.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains a number of stores in the list. Following lines describe the stores with two attributes: store name and the closing time. They are separated by a space (a name has no any spaces).&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output grocery stores you will be able to reach in 30 minutes. The order of stores in the output should be the same as in the input. Each store is in a new line.&lt;/p&gt;</text>
                      <options id="3814">
                        <samples id="3815">
                          <Sample id="3816">&lt;input&gt;4
Tastyday 20:30
Food 20:00
Zehrs 19:00
Bonus 20:20&lt;/input&gt;&lt;output&gt;Tastyday
Bonus&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3817" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3818" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3819">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3820" />
                    </block>
                    <actions class="linked-hash-map" id="3821">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3822">
                      <string>31-77-246472</string>
                      <string>30-77-246472</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>43</viewedBy>
                    <passedBy>34</passedBy>
                    <correctRatio>0.27586206896551724</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3823">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3824">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3825">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3826">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3827">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3828">
                  <id>62522</id>
                  <title>Comparing dates and time # The latest date-time pair</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62522</progress>
                  <createDate id="3829">2017-11-29 15:14:13.0 UTC</createDate>
                  <updateDate id="3830">2018-03-09 15:06:27.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62522-1</discussionProxy>
                  <discussionThreads id="3831">
                    <string>76-62522-1</string>
                  </discussionThreads>
                  <steps id="3832">
                    <long>246430</long>
                  </steps>
                  <actions class="linked-hash-map" id="3833" />
                  <tags id="3834" />
                  <requiredTags id="3835" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3836">
                    <string>31-76-62522</string>
                    <string>30-76-62522</string>
                  </subscriptions>
                  <viewedBy>37</viewedBy>
                  <passedBy>33</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>658</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-The-latest-date-time-pair-62522</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62522</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3837">
                <StepNode id="3838">
                  <parent class="LessonNode" reference="3823" />
                  <data class="Step" id="3839">
                    <id>246430</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-246430</progress>
                    <createDate id="3840">2017-11-29 16:00:15.0 UTC</createDate>
                    <updateDate id="3841">2018-03-09 15:06:26.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-246430-1</discussionProxy>
                    <discussionThreads id="3842">
                      <string>77-246430-1</string>
                      <string>77-246430-2</string>
                    </discussionThreads>
                    <lesson>62522</lesson>
                    <status>ready</status>
                    <block id="3843">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that finds the latest date-time pair in the chronological ascending order.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains an integer number N - the total number of dates in the input. The following N lines consist of dates. Each date has the format &lt;b&gt;year-month-dayThour:minute&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The program must output the latest date in the same format as the input.&lt;/p&gt;</text>
                      <options id="3844">
                        <samples id="3845">
                          <Sample id="3846">&lt;input&gt;3
2017-05-06T13:55
2017-05-09T22:30
2017-05-07T13:40&lt;/input&gt;&lt;output&gt;2017-05-09T22:30&lt;/output&gt;</Sample>
                          <Sample id="3847">&lt;input&gt;1
2017-05-03T13:33&lt;/input&gt;&lt;output&gt;2017-05-03T13:33&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3848" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3849" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3850">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3851" />
                    </block>
                    <actions class="linked-hash-map" id="3852">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3853">
                      <string>31-77-246430</string>
                      <string>30-77-246430</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>37</viewedBy>
                    <passedBy>33</passedBy>
                    <correctRatio>0.29927007299270075</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3854">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3855">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3856">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3857">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3858">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3859">
                  <id>62639</id>
                  <title>Comparing dates and time # Counting date-time pairs in a range</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62639</progress>
                  <createDate id="3860">2017-11-30 13:51:58.0 UTC</createDate>
                  <updateDate id="3861">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62639-1</discussionProxy>
                  <discussionThreads id="3862">
                    <string>76-62639-1</string>
                  </discussionThreads>
                  <steps id="3863">
                    <long>246887</long>
                  </steps>
                  <actions class="linked-hash-map" id="3864" />
                  <tags id="3865" />
                  <requiredTags id="3866" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3867">
                    <string>31-76-62639</string>
                    <string>30-76-62639</string>
                  </subscriptions>
                  <viewedBy>25</viewedBy>
                  <passedBy>16</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>992</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Comparing-dates-and-time-Counting-date-time-pairs-in-a-range-62639</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62639</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3868">
                <StepNode id="3869">
                  <parent class="LessonNode" reference="3854" />
                  <data class="Step" id="3870">
                    <id>246887</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-246887</progress>
                    <createDate id="3871">2017-11-30 14:12:02.0 UTC</createDate>
                    <updateDate id="3872">2017-11-30 14:16:54.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-246887-1</discussionProxy>
                    <discussionThreads id="3873">
                      <string>77-246887-1</string>
                      <string>77-246887-2</string>
                    </discussionThreads>
                    <lesson>62639</lesson>
                    <status>ready</status>
                    <block id="3874">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that reads date-time pairs and counts how many date-time pairs belongs to the specified range (including the earlier date-time and excluding the later). If the borders of the range are equal and a date-time equal to them, doesn't count this date-time.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains a border of the range (the earlier or later, it's unknown). The second line contains another border of the range. The third line contains an integer number N - a number of date-time pairs. The following N lines consist of date-time pairs. Each pair has the format &lt;b&gt;year-month-&lt;/b&gt;&lt;b&gt;dayThour&lt;/b&gt;&lt;b&gt;:second&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output an integer number - count of date-time pairs belongs to the given range.&lt;/p&gt;</text>
                      <options id="3875">
                        <samples id="3876">
                          <Sample id="3877">&lt;input&gt;2017-12-01T00:10
2017-12-02T00:10
3
2017-12-01T00:10
2017-12-01T13:50
2017-12-02T00:10&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                          <Sample id="3878">&lt;input&gt;2017-12-31T23:59
2017-12-01T00:00
1
2017-12-01T00:00&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3879" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3880" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3881">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3882" />
                    </block>
                    <actions class="linked-hash-map" id="3883">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3884">
                      <string>31-77-246887</string>
                      <string>30-77-246887</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>25</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.2597402597402597</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3885">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3886">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3887">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3888">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3889">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3890">
                  <id>60494</id>
                  <title>Branching statements - Practice 10</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60494</progress>
                  <createDate id="3891">2017-11-05 11:49:45.0 UTC</createDate>
                  <updateDate id="3892">2018-01-23 13:47:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60494-1</discussionProxy>
                  <discussionThreads id="3893">
                    <string>76-60494-1</string>
                  </discussionThreads>
                  <steps id="3894">
                    <long>238363</long>
                  </steps>
                  <actions class="linked-hash-map" id="3895" />
                  <tags id="3896" />
                  <requiredTags id="3897" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3898">
                    <string>31-76-60494</string>
                    <string>30-76-60494</string>
                  </subscriptions>
                  <viewedBy>43</viewedBy>
                  <passedBy>31</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1397</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Branching-statements-Practice-10-60494</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60494</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3899">
                <StepNode id="3900">
                  <parent class="LessonNode" reference="3885" />
                  <data class="Step" id="3901">
                    <id>238363</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-238363</progress>
                    <createDate id="3902">2017-11-05 12:45:28.0 UTC</createDate>
                    <updateDate id="3903">2017-11-05 12:51:58.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-238363-1</discussionProxy>
                    <discussionThreads id="3904">
                      <string>77-238363-1</string>
                      <string>77-238363-2</string>
                    </discussionThreads>
                    <lesson>60494</lesson>
                    <status>ready</status>
                    <block id="3905">
                      <name>code</name>
                      <text>&lt;b&gt;The (un)-ordered sequence&lt;/b&gt;&lt;div&gt;&lt;br&gt;Write a program that reads a sequence of integer numbers and outputs &lt;b&gt;true&lt;/b&gt; if the sequence is ordered (in ascending or descending order), otherwise, &lt;b&gt;false&lt;/b&gt;. Keep in mind, &lt;span&gt;If a number has a value as the following number &lt;/span&gt;&lt;span&gt;it does not break the order.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;The sequence ends with 0. Do not consider this number as a part of the sequence. &lt;/span&gt;&lt;span&gt;The sequence always has at least one number (excluding 0).&lt;/span&gt;&lt;/div&gt;</text>
                      <options id="3906">
                        <samples id="3907">
                          <Sample id="3908">&lt;input&gt;9 8 7 6 5 4 3 2 1 0&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3909">&lt;input&gt;1 2 3 3 9 0&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="3910">&lt;input&gt;1 2 5 5 2 3 0&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3911" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3912" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3913">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3914" />
                    </block>
                    <actions class="linked-hash-map" id="3915">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3916">
                      <string>31-77-238363</string>
                      <string>30-77-238363</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>43</viewedBy>
                    <passedBy>31</passedBy>
                    <correctRatio>0.3076923076923077</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3917">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3918">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3919">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3920">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3921">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3922">
                  <id>56020</id>
                  <title>Multi-dimensional array # Transposition of the matrix</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56020</progress>
                  <createDate id="3923">2017-09-12 14:45:34.0 UTC</createDate>
                  <updateDate id="3924">2018-02-05 04:47:25.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56020-1</discussionProxy>
                  <discussionThreads id="3925">
                    <string>76-56020-1</string>
                  </discussionThreads>
                  <steps id="3926">
                    <long>205422</long>
                  </steps>
                  <actions class="linked-hash-map" id="3927" />
                  <tags id="3928" />
                  <requiredTags id="3929" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3930">
                    <string>31-76-56020</string>
                    <string>30-76-56020</string>
                  </subscriptions>
                  <viewedBy>31</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>702</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Transposition-of-the-matrix-56020</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56020</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3931">
                <StepNode id="3932">
                  <parent class="LessonNode" reference="3917" />
                  <data class="Step" id="3933">
                    <id>205422</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-205422</progress>
                    <createDate id="3934">2017-07-23 12:53:12.0 UTC</createDate>
                    <updateDate id="3935">2018-02-05 04:47:24.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-205422-1</discussionProxy>
                    <discussionThreads id="3936">
                      <string>77-205422-1</string>
                      <string>77-205422-2</string>
                    </discussionThreads>
                    <lesson>56020</lesson>
                    <status>ready</status>
                    <block id="3937">
                      <name>code</name>
                      <text>&lt;p&gt;Input, separated by spaces: the number of rows of the matrix, the number of
columns of the matrix, then go the elements of the two-dimensional matrix
itself, row by row.&lt;/p&gt;
&lt;p&gt;Output: the result of the transposition of the matrix (row by row).&lt;/p&gt;</text>
                      <options id="3938">
                        <samples id="3939">
                          <Sample id="3940">&lt;input&gt;2 3 1 2 3 4 5 6&lt;/input&gt;&lt;output&gt;1 4 2 5 3 6&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3941" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3942" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3943">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3944" />
                    </block>
                    <actions class="linked-hash-map" id="3945">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3946">
                      <string>31-77-205422</string>
                      <string>30-77-205422</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>31</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.5384615384615384</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3947">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3948">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3949">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3950">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3951">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3952">
                  <id>60840</id>
                  <title>Set # Removing duplicates and sorting</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60840</progress>
                  <createDate id="3953">2017-11-09 14:09:49.0 UTC</createDate>
                  <updateDate id="3954">2018-02-18 05:49:18.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60840-1</discussionProxy>
                  <discussionThreads id="3955">
                    <string>76-60840-1</string>
                  </discussionThreads>
                  <steps id="3956">
                    <long>239610</long>
                  </steps>
                  <actions class="linked-hash-map" id="3957" />
                  <tags id="3958" />
                  <requiredTags id="3959" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3960">
                    <string>31-76-60840</string>
                    <string>30-76-60840</string>
                  </subscriptions>
                  <viewedBy>19</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>553</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Set-Removing-duplicates-and-sorting-60840</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60840</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3961">
                <StepNode id="3962">
                  <parent class="LessonNode" reference="3947" />
                  <data class="Step" id="3963">
                    <id>239610</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239610</progress>
                    <createDate id="3964">2017-11-09 14:55:42.0 UTC</createDate>
                    <updateDate id="3965">2018-02-18 05:49:18.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-239610-1</discussionProxy>
                    <discussionThreads id="3966">
                      <string>77-239610-1</string>
                      <string>77-239610-2</string>
                    </discussionThreads>
                    <lesson>60840</lesson>
                    <status>ready</status>
                    <block id="3967">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that reads a sequence of strings from the standard input and displays them in a lexicographic order without duplicates.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Try to write your solution using a set.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the size of a string sequence. Next lines contain strings.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;A sorted sequence of strings without duplicates. Each string must be in a new line.&lt;/p&gt;</text>
                      <options id="3968">
                        <samples id="3969">
                          <Sample id="3970">&lt;input&gt;6
postgres
sqlite
oracle
mongodb
postgres
mssql&lt;/input&gt;&lt;output&gt;mongodb
mssql
oracle
postgres
sqlite&lt;/output&gt;</Sample>
                          <Sample id="3971">&lt;input&gt;5
1
2
2
11
20&lt;/input&gt;&lt;output&gt;1
11
2
20&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="3972" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="3973" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="3974">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="3975" />
                    </block>
                    <actions class="linked-hash-map" id="3976">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="3977">
                      <string>31-77-239610</string>
                      <string>30-77-239610</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>19</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.4318181818181818</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="3978">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="3979">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="3980">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="3981">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="3982">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="3983">
                  <id>56130</id>
                  <title>Set # Processing sets - 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56130</progress>
                  <createDate id="3984">2017-09-12 14:46:15.0 UTC</createDate>
                  <updateDate id="3985">2018-02-18 05:43:56.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56130-1</discussionProxy>
                  <discussionThreads id="3986">
                    <string>76-56130-1</string>
                  </discussionThreads>
                  <steps id="3987">
                    <long>211706</long>
                  </steps>
                  <actions class="linked-hash-map" id="3988" />
                  <tags id="3989" />
                  <requiredTags id="3990" />
                  <playlists id="3991" />
                  <isPrime>false</isPrime>
                  <subscriptions id="3992">
                    <string>31-76-56130</string>
                    <string>30-76-56130</string>
                  </subscriptions>
                  <viewedBy>14</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies id="3993" />
                  <followers id="3994" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Set-Processing-sets-2-56130</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56130</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="3995">
                <StepNode id="3996">
                  <parent class="LessonNode" reference="3978" />
                  <data class="Step" id="3997">
                    <id>211706</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211706</progress>
                    <createDate id="3998">2017-08-26 13:01:41.0 UTC</createDate>
                    <updateDate id="3999">2018-02-18 05:43:55.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211706-1</discussionProxy>
                    <discussionThreads id="4000">
                      <string>77-211706-1</string>
                      <string>77-211706-2</string>
                    </discussionThreads>
                    <lesson>56130</lesson>
                    <status>ready</status>
                    <block id="4001">
                      <name>code</name>
                      <text>&lt;pre&gt;Given an input string as &quot;1 2 3 4 5;6 7 8 9 10;11 12 13 14 15&quot;(it's 3 lists)

1.String[] sets consists of these lists. Add all elements from each list to correct set(see the comments in the code) sets[0] = {&quot;1 2 3 4 5&quot;} - its string and so on
*use split(&quot; &quot;) to separate elements from string

2.On unionTreeLargeNumber(Set&amp;lt;Integer&amp;gt; set1,Set&amp;lt;Integer&amp;gt; set2,Set&amp;lt;Integer&amp;gt; set3):&lt;br&gt;     1)In each Set find the maximum element&lt;br&gt;     2)create TreeSet, add the resulting elements to TreeSet&lt;br&gt;     3)return this TreeSet with elements sorted in descending order:
     &lt;i&gt;*you can use special method from class TreeSet or rather NavigableSet interface to change the order of storage on the reverse&lt;/i&gt;&lt;br&gt;
3.Using System.out.println() print elements of resultTreeSet &lt;br&gt;&lt;/pre&gt;</text>
                      <options id="4002">
                        <samples id="4003">
                          <Sample id="4004">&lt;input&gt;6 11 9 18 10;12 13 19 8 16;3 4 5 15 20&lt;/input&gt;&lt;output&gt;20
19
18&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4005" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    String[] sets = reader.readLine().split(&quot;;&quot;); 

    Set&lt;Integer&gt; set1;
    //your code(add elements to set1 from sets[0])

    Set&lt;Integer&gt; set2;
    //your code(add elements to set2 from sets[1])

    Set&lt;Integer&gt; set3;
    //your code(add elements to set3 from sets[2])


    Set&lt;Integer&gt; resultTreeSet = unionTreeLargeNumber(set1,set2,set3);

    //print elements of resultTreeSet(using System.out.printLn()) below

}

public static TreeSet&lt;Integer&gt; unionTreeLargeNumber(Set&lt;Integer&gt; set1,Set&lt;Integer&gt; set2,Set&lt;Integer&gt; set3){
    TreeSet&lt;Integer&gt; resultSet = new TreeSet&lt;&gt;();

    return resultSet;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4006" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4007">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4008" />
                    </block>
                    <actions class="linked-hash-map" id="4009">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4010">
                      <string>31-77-211706</string>
                      <string>30-77-211706</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.2</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4011">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4012">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4013">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4014">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4015">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4016">
                  <id>56130</id>
                  <title>Set # Processing sets - 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56130</progress>
                  <createDate id="4017">2017-09-12 14:46:15.0 UTC</createDate>
                  <updateDate id="4018">2018-02-18 05:43:56.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56130-1</discussionProxy>
                  <discussionThreads id="4019">
                    <string>76-56130-1</string>
                  </discussionThreads>
                  <steps id="4020">
                    <long>211706</long>
                  </steps>
                  <actions class="linked-hash-map" id="4021" />
                  <tags id="4022" />
                  <requiredTags id="4023" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4024">
                    <string>31-76-56130</string>
                    <string>30-76-56130</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>3851</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Set-Processing-sets-2-56130</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56130</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4025">
                <StepNode id="4026">
                  <parent class="LessonNode" reference="4011" />
                  <data class="Step" id="4027">
                    <id>211706</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211706</progress>
                    <createDate id="4028">2017-08-26 13:01:41.0 UTC</createDate>
                    <updateDate id="4029">2018-02-18 05:43:55.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211706-1</discussionProxy>
                    <discussionThreads id="4030">
                      <string>77-211706-1</string>
                      <string>77-211706-2</string>
                    </discussionThreads>
                    <lesson>56130</lesson>
                    <status>ready</status>
                    <block id="4031">
                      <name>code</name>
                      <text>&lt;pre&gt;Given an input string as &quot;1 2 3 4 5;6 7 8 9 10;11 12 13 14 15&quot;(it's 3 lists)

1.String[] sets consists of these lists. Add all elements from each list to correct set(see the comments in the code) sets[0] = {&quot;1 2 3 4 5&quot;} - its string and so on
*use split(&quot; &quot;) to separate elements from string

2.On unionTreeLargeNumber(Set&amp;lt;Integer&amp;gt; set1,Set&amp;lt;Integer&amp;gt; set2,Set&amp;lt;Integer&amp;gt; set3):&lt;br&gt;     1)In each Set find the maximum element&lt;br&gt;     2)create TreeSet, add the resulting elements to TreeSet&lt;br&gt;     3)return this TreeSet with elements sorted in descending order:
     &lt;i&gt;*you can use special method from class TreeSet or rather NavigableSet interface to change the order of storage on the reverse&lt;/i&gt;&lt;br&gt;
3.Using System.out.println() print elements of resultTreeSet &lt;br&gt;&lt;/pre&gt;</text>
                      <options id="4032">
                        <samples id="4033">
                          <Sample id="4034">&lt;input&gt;6 11 9 18 10;12 13 19 8 16;3 4 5 15 20&lt;/input&gt;&lt;output&gt;20
19
18&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4035" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    String[] sets = reader.readLine().split(&quot;;&quot;); 

    Set&lt;Integer&gt; set1;
    //your code(add elements to set1 from sets[0])

    Set&lt;Integer&gt; set2;
    //your code(add elements to set2 from sets[1])

    Set&lt;Integer&gt; set3;
    //your code(add elements to set3 from sets[2])


    Set&lt;Integer&gt; resultTreeSet = unionTreeLargeNumber(set1,set2,set3);

    //print elements of resultTreeSet(using System.out.printLn()) below

}

public static TreeSet&lt;Integer&gt; unionTreeLargeNumber(Set&lt;Integer&gt; set1,Set&lt;Integer&gt; set2,Set&lt;Integer&gt; set3){
    TreeSet&lt;Integer&gt; resultSet = new TreeSet&lt;&gt;();

    return resultSet;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4036" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4037">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4038" />
                    </block>
                    <actions class="linked-hash-map" id="4039">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4040">
                      <string>31-77-211706</string>
                      <string>30-77-211706</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.2</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4041">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4042">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4043">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4044">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4045">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4046">
                  <id>56129</id>
                  <title>Set # Processing sets - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56129</progress>
                  <createDate id="4047">2017-09-12 14:46:15.0 UTC</createDate>
                  <updateDate id="4048">2018-02-18 05:43:17.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56129-1</discussionProxy>
                  <discussionThreads id="4049">
                    <string>76-56129-1</string>
                  </discussionThreads>
                  <steps id="4050">
                    <long>211703</long>
                  </steps>
                  <actions class="linked-hash-map" id="4051" />
                  <tags id="4052" />
                  <requiredTags id="4053" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4054">
                    <string>31-76-56129</string>
                    <string>30-76-56129</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>939</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Set-Processing-sets-1-56129</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56129</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4055">
                <StepNode id="4056">
                  <parent class="LessonNode" reference="4041" />
                  <data class="Step" id="4057">
                    <id>211703</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211703</progress>
                    <createDate id="4058">2017-08-26 12:59:55.0 UTC</createDate>
                    <updateDate id="4059">2018-02-18 05:28:30.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211703-1</discussionProxy>
                    <discussionThreads id="4060">
                      <string>77-211703-1</string>
                      <string>77-211703-2</string>
                    </discussionThreads>
                    <lesson>56129</lesson>
                    <status>ready</status>
                    <block id="4061">
                      <name>code</name>
                      <text>&lt;pre&gt;1.Given a string as &quot;1 2 3 4 5 6 ...&quot; . String[] strings contains of element from given string (&quot;1&quot;,&quot;2&quot;,..).

Add all elements from &lt;b&gt;String[] strings&lt;/b&gt; to Set&amp;lt;Integer&amp;gt; set.

2.Add all the elements from &lt;b&gt;helpList&lt;/b&gt; to the set.

3.Remove all elements greater than 10 (&amp;gt;) from the set and return the modified set.&lt;br&gt;&lt;/pre&gt;</text>
                      <options id="4062">
                        <samples id="4063">
                          <Sample id="4064">&lt;input&gt;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20&lt;/input&gt;&lt;output&gt;1
2
3
4
5
6
7
8
9
10&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4065" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    String[] strings = reader.readLine().split(&quot; &quot;);
    List&lt;Integer&gt; helpList = getList();
    Set&lt;Integer&gt; set = new HashSet&lt;&gt;();
    //add elements from strings to set

    //add elements from helpList to set

    set = removeAllNumbersMoreThan10(set);
    set.forEach(System.out::println);
}

public static Set&lt;Integer&gt; removeAllNumbersMoreThan10(Set&lt;Integer&gt; set){
    //put your code here
    return null;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4066" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4067">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4068" />
                    </block>
                    <actions class="linked-hash-map" id="4069">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4070">
                      <string>31-77-211703</string>
                      <string>30-77-211703</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.21428571428571427</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4071">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4072">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4073">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4074">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4075">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4076">
                  <id>56132</id>
                  <title>Map # Creating a map</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56132</progress>
                  <createDate id="4077">2017-09-12 14:46:16.0 UTC</createDate>
                  <updateDate id="4078">2018-02-18 09:03:16.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56132-1</discussionProxy>
                  <discussionThreads id="4079">
                    <string>76-56132-1</string>
                  </discussionThreads>
                  <steps id="4080">
                    <long>211710</long>
                  </steps>
                  <actions class="linked-hash-map" id="4081" />
                  <tags id="4082" />
                  <requiredTags id="4083" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4084">
                    <string>31-76-56132</string>
                    <string>30-76-56132</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>28</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>175</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Creating-a-map-56132</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56132</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4085">
                <StepNode id="4086">
                  <parent class="LessonNode" reference="4071" />
                  <data class="Step" id="4087">
                    <id>211710</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211710</progress>
                    <createDate id="4088">2017-08-26 13:27:13.0 UTC</createDate>
                    <updateDate id="4089">2018-02-18 09:03:15.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211710-1</discussionProxy>
                    <discussionThreads id="4090">
                      <string>77-211710-1</string>
                      <string>77-211710-2</string>
                    </discussionThreads>
                    <lesson>56132</lesson>
                    <status>ready</status>
                    <block id="4091">
                      <name>code</name>
                      <text>&lt;div&gt;Create &lt;b&gt;TreeMap&lt;/b&gt; by name &lt;span class=&quot;wysiwyg-color-red&quot;&gt;map&lt;/span&gt; in any way known to you and fill it with the following three key - value pairs:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;wysiwyg-color-blue&quot;&gt;Omega - 24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;wysiwyg-color-blue&quot;&gt;Alpha - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;wysiwyg-color-blue&quot;&gt;Gamma - 3&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;where strings - keys and numbers - values.&lt;br&gt;&lt;br&gt;The code for displaying the map is already written.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="4092">
                        <samples id="4093">
                          <Sample id="4094">&lt;input&gt;&lt;/input&gt;&lt;output&gt;{Alpha=1, Gamma=3, Omega=24}&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4095" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {

        //write your code here



        System.out.println(map);

    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4096" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4097">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4098" />
                    </block>
                    <actions class="linked-hash-map" id="4099">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4100">
                      <string>31-77-211710</string>
                      <string>30-77-211710</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.6363636363636364</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4101">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4102">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4103">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4104">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4105">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4106">
                  <id>56139</id>
                  <title>Map # Substitution cipher</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56139</progress>
                  <createDate id="4107">2017-09-12 14:46:18.0 UTC</createDate>
                  <updateDate id="4108">2018-02-18 09:14:41.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56139-1</discussionProxy>
                  <discussionThreads id="4109">
                    <string>76-56139-1</string>
                  </discussionThreads>
                  <steps id="4110">
                    <long>216409</long>
                  </steps>
                  <actions class="linked-hash-map" id="4111" />
                  <tags id="4112" />
                  <requiredTags id="4113" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4114">
                    <string>31-76-56139</string>
                    <string>30-76-56139</string>
                  </subscriptions>
                  <viewedBy>17</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Substitution-cipher-56139</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56139</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4115">
                <StepNode id="4116">
                  <parent class="LessonNode" reference="4101" />
                  <data class="Step" id="4117">
                    <id>216409</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216409</progress>
                    <createDate id="4118">2017-09-04 12:00:15.0 UTC</createDate>
                    <updateDate id="4119">2018-02-18 09:14:40.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216409-1</discussionProxy>
                    <discussionThreads id="4120">
                      <string>77-216409-1</string>
                      <string>77-216409-2</string>
                    </discussionThreads>
                    <lesson>56139</lesson>
                    <status>ready</status>
                    <block id="4121">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;At some point in the Bioinformatics &lt;/span&gt;Institute&lt;span&gt;, biology students no longer understood what did the computer science students said: they spoke a strange set of sounds.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;And one of the biologists had suddenly discovered the secret of computer science students: they used the &lt;a rel=&quot;nofollow&quot; href=&quot;https://en.wikipedia.org/wiki/Substitution_cipher&quot;&gt;substitution cipher&lt;/a&gt; in their communication, i.e. they replaced each symbol of the initial message to the corresponding another symbol. Biologists gained the key to the cipher and now they need help:&lt;/p&gt;

&lt;p&gt;Write a program that can encode and decode the substitution cipher. The program accepts two input strings of the same length; the first line contains the characters of the original alphabet, the second line - the symbols of a resulting alphabet, then goes a line you need to encode by the transmitted key, and another line to be decrypted.&lt;/p&gt;

&lt;p&gt;For example, the program takes the following input:&lt;br&gt;
&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;no-highlight&quot;&gt;abcd
*d%#
abacabadaba
#*%*d*%&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;

&lt;p&gt;It means that symbol &lt;b&gt;a&lt;/b&gt; of the initial message is changed to symbol &lt;b&gt;*&lt;/b&gt; in the cipher, &lt;b&gt;b&lt;/b&gt; changed to &lt;b&gt;d&lt;/b&gt;, &lt;b&gt;c&lt;/b&gt; — to&lt;b&gt;%&lt;/b&gt; and &lt;b&gt;d&lt;/b&gt; — to &lt;b&gt;#&lt;/b&gt;. You need to encode the string &lt;b&gt;abacabadaba&lt;/b&gt; and decode the string &lt;b&gt;#*%*d*%&lt;/b&gt; using this cipher. So you get the following lines, which you should be the output of the program:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;no-highlight&quot;&gt;*d*%*d*#*d*
dacabac&lt;/code&gt;&lt;/pre&gt;</text>
                      <options id="4122">
                        <samples id="4123">
                          <Sample id="4124">&lt;input&gt;abcd
*d%#
abacabadaba
#*%*d*%&lt;/input&gt;&lt;output&gt;*d*%*d*#*d*
dacabac&lt;/output&gt;</Sample>
                          <Sample id="4125">&lt;input&gt;dcba
badc
dcba
badc&lt;/input&gt;&lt;output&gt;badc
dcba&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4126" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4127" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4128">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4129" />
                    </block>
                    <actions class="linked-hash-map" id="4130">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4131">
                      <string>31-77-216409</string>
                      <string>30-77-216409</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>17</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.6428571428571429</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4132">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4133">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4134">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4135">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4136">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4137">
                  <id>56133</id>
                  <title>Map # Displaying pairs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56133</progress>
                  <createDate id="4138">2017-09-12 14:46:16.0 UTC</createDate>
                  <updateDate id="4139">2018-02-18 09:04:58.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56133-1</discussionProxy>
                  <discussionThreads id="4140">
                    <string>76-56133-1</string>
                  </discussionThreads>
                  <steps id="4141">
                    <long>211711</long>
                  </steps>
                  <actions class="linked-hash-map" id="4142" />
                  <tags id="4143" />
                  <requiredTags id="4144" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4145">
                    <string>31-76-56133</string>
                    <string>30-76-56133</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>23</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>214</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Displaying-pairs-56133</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56133</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4146">
                <StepNode id="4147">
                  <parent class="LessonNode" reference="4132" />
                  <data class="Step" id="4148">
                    <id>211711</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211711</progress>
                    <createDate id="4149">2017-08-26 13:27:13.0 UTC</createDate>
                    <updateDate id="4150">2018-02-18 09:04:58.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211711-1</discussionProxy>
                    <discussionThreads id="4151">
                      <string>77-211711-1</string>
                      <string>77-211711-2</string>
                    </discussionThreads>
                    <lesson>56133</lesson>
                    <status>ready</status>
                    <block id="4152">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;The map is given. &lt;/span&gt;&lt;span&gt;Output each its key-value pair in the loop with a new line.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Each line must be in form of &lt;b&gt;key=value&lt;/b&gt; (for example, Gamma=3)&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="4153">
                        <samples id="4154">
                          <Sample id="4155">&lt;input&gt;&lt;/input&gt;&lt;output&gt;Alpha=1
Gamma=3
Omega=24&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4156" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>import java.util.*;

public class Main {

    public static void main(String[] args) {


        Map&lt;String, Integer&gt; map = new TreeMap&lt;&gt;();
        map.put(&quot;Gamma&quot;,  3);
        map.put(&quot;Omega&quot;, 24);
        map.put(&quot;Alpha&quot;,  1);


        //write your code here



    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4157" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4158">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4159" />
                    </block>
                    <actions class="linked-hash-map" id="4160">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4161">
                      <string>31-77-211711</string>
                      <string>30-77-211711</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>23</passedBy>
                    <correctRatio>0.391304347826087</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4162">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4163">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4164">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4165">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4166">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4167">
                  <id>56134</id>
                  <title>Map # Processing maps - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56134</progress>
                  <createDate id="4168">2017-09-12 14:46:17.0 UTC</createDate>
                  <updateDate id="4169">2018-02-18 09:06:12.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56134-1</discussionProxy>
                  <discussionThreads id="4170">
                    <string>76-56134-1</string>
                  </discussionThreads>
                  <steps id="4171">
                    <long>211712</long>
                  </steps>
                  <actions class="linked-hash-map" id="4172" />
                  <tags id="4173" />
                  <requiredTags id="4174" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4175">
                    <string>31-76-56134</string>
                    <string>30-76-56134</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>18</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>288</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Processing-maps-1-56134</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56134</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4176">
                <StepNode id="4177">
                  <parent class="LessonNode" reference="4162" />
                  <data class="Step" id="4178">
                    <id>211712</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211712</progress>
                    <createDate id="4179">2017-08-26 13:27:13.0 UTC</createDate>
                    <updateDate id="4180">2018-02-18 09:06:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211712-1</discussionProxy>
                    <discussionThreads id="4181">
                      <string>77-211712-1</string>
                      <string>77-211712-2</string>
                    </discussionThreads>
                    <lesson>56134</lesson>
                    <status>ready</status>
                    <block id="4182">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Modify and return the given map as follows: &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;If the key &quot;a&quot; has a value, set the key &quot;b&quot; to have that same value. In all cases remove the key &quot;c&quot;, leaving the rest of the map unchanged.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;{&quot;a&quot;:&quot;abstraction&quot;,&quot;b&quot;:&quot;boolean&quot;,&quot;c&quot;:&quot;xyz&quot;} -&amp;gt; {&quot;a&quot;:&quot;abstraction&quot;,&quot;b&quot;:&quot;abstraction&quot;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="4183">
                        <samples id="4184">
                          <Sample id="4185">&lt;input&gt;a:Abstraction,b:Boolean,c:xyz&lt;/input&gt;&lt;output&gt;a : Abstraction
b : Abstraction&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4186" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static Map&lt;String, String&gt; mapShare(Map&lt;String, String&gt; map) {

    return null;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4187" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4188">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4189" />
                    </block>
                    <actions class="linked-hash-map" id="4190">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4191">
                      <string>31-77-211712</string>
                      <string>30-77-211712</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>18</passedBy>
                    <correctRatio>0.4166666666666667</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4192">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4193">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4194">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4195">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4196">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4197">
                  <id>56135</id>
                  <title>Map # Counting words</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56135</progress>
                  <createDate id="4198">2017-09-12 14:46:17.0 UTC</createDate>
                  <updateDate id="4199">2018-02-18 09:06:39.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56135-1</discussionProxy>
                  <discussionThreads id="4200">
                    <string>76-56135-1</string>
                  </discussionThreads>
                  <steps id="4201">
                    <long>211713</long>
                  </steps>
                  <actions class="linked-hash-map" id="4202" />
                  <tags id="4203" />
                  <requiredTags id="4204" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4205">
                    <string>31-76-56135</string>
                    <string>30-76-56135</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>14</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1275</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Counting-words-56135</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56135</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4206">
                <StepNode id="4207">
                  <parent class="LessonNode" reference="4192" />
                  <data class="Step" id="4208">
                    <id>211713</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211713</progress>
                    <createDate id="4209">2017-08-26 13:27:13.0 UTC</createDate>
                    <updateDate id="4210">2018-02-18 09:06:38.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211713-1</discussionProxy>
                    <discussionThreads id="4211">
                      <string>77-211713-1</string>
                      <string>77-211713-2</string>
                    </discussionThreads>
                    <lesson>56135</lesson>
                    <status>ready</status>
                    <block id="4212">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given an array of strings,&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;On 

wordCount() : return a&lt;/li&gt;&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;SortedMap&amp;lt;String, Integer&amp;gt; with a key for each different string, with the value the number of times that string appears in the array.
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;ul&gt;&lt;li&gt;On printMap(): Using System.out.println() print all items of the Map (&quot;key : value&quot;)&lt;/li&gt;&lt;/ul&gt;</text>
                      <options id="4213">
                        <samples id="4214">
                          <Sample id="4215">&lt;input&gt;a b b c d a b&lt;/input&gt;&lt;output&gt;a : 2
b : 3
c : 1
d : 1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4216" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static SortedMap&lt;String, Integer&gt; wordCount(String[] strings) {

    return null;
}
public static void printMap(Map&lt;String, Integer&gt; map){

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4217" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4218">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4219" />
                    </block>
                    <actions class="linked-hash-map" id="4220">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4221">
                      <string>31-77-211713</string>
                      <string>30-77-211713</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>14</passedBy>
                    <correctRatio>0.43243243243243246</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4222">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4223">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4224">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4225">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4226">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4227">
                  <id>56138</id>
                  <title>Map # Spell checker</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56138</progress>
                  <createDate id="4228">2017-09-12 14:46:18.0 UTC</createDate>
                  <updateDate id="4229">2018-03-25 10:58:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56138-1</discussionProxy>
                  <discussionThreads id="4230">
                    <string>76-56138-1</string>
                  </discussionThreads>
                  <steps id="4231">
                    <long>216408</long>
                  </steps>
                  <actions class="linked-hash-map" id="4232" />
                  <tags id="4233" />
                  <requiredTags id="4234" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4235">
                    <string>31-76-56138</string>
                    <string>30-76-56138</string>
                  </subscriptions>
                  <viewedBy>19</viewedBy>
                  <passedBy>9</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Spell-checker-56138</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56138</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4236">
                <StepNode id="4237">
                  <parent class="LessonNode" reference="4222" />
                  <data class="Step" id="4238">
                    <id>216408</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216408</progress>
                    <createDate id="4239">2017-09-04 11:59:38.0 UTC</createDate>
                    <updateDate id="4240">2018-03-25 10:58:02.0 UTC</updateDate>
                    <discussionsCount>2</discussionsCount>
                    <discussionProxy>77-216408-1</discussionProxy>
                    <discussionThreads id="4241">
                      <string>77-216408-1</string>
                    </discussionThreads>
                    <lesson>56138</lesson>
                    <status>ready</status>
                    <block id="4242">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;The simplest spell checker is based on a list of known words.
Every word in the checked text is searched for in this list and, if such a word
was not found, it is marked as erroneous.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Write this spell checker.&lt;/p&gt;

&lt;p&gt;The first line of the input contains $d$ – number of records in
the list of known word. Next go $d$ lines contain one known word per line, next
— the number $l$ of lines of the text, after which — $l$ lines of the text.&lt;/p&gt;

&lt;p&gt;Write a program that outputs those words from the text, which are
not found in the dictionary (i.e. erroneous). Your spell checker should be case
insensitive. The words are entered in an arbitrary order. Words, which are not
found in the dictionary, should not be duplicated in the output.&lt;/p&gt;</text>
                      <options id="4243">
                        <samples id="4244">
                          <Sample id="4245">&lt;input&gt;3
a
bb
cCc
2
a bb aab aba ccc
c bb aaa&lt;/input&gt;&lt;output&gt;aaa
aba
aab
c&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4246" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4247" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4248">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4249" />
                    </block>
                    <actions class="linked-hash-map" id="4250">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4251">
                      <string>31-77-216408</string>
                      <string>30-77-216408</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.3333333333333333</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4252">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4253">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4254">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4255">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4256">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4257">
                  <id>65353</id>
                  <title>Algorithms # Find the min in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65353</progress>
                  <createDate id="4258">2017-12-27 15:04:37.0 UTC</createDate>
                  <updateDate id="4259">2018-01-23 13:49:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65353-1</discussionProxy>
                  <discussionThreads id="4260">
                    <string>76-65353-1</string>
                  </discussionThreads>
                  <steps id="4261">
                    <long>257356</long>
                  </steps>
                  <actions class="linked-hash-map" id="4262" />
                  <tags id="4263" />
                  <requiredTags id="4264" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4265">
                    <string>31-76-65353</string>
                    <string>30-76-65353</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>31</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>102</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Algorithms-Find-the-min-in-an-array-65353</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65353</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4266">
                <StepNode id="4267">
                  <parent class="LessonNode" reference="4252" />
                  <data class="Step" id="4268">
                    <id>257356</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-257356</progress>
                    <createDate id="4269">2017-12-27 19:31:47.0 UTC</createDate>
                    <updateDate id="4270">2017-12-30 18:05:26.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-257356-1</discussionProxy>
                    <discussionThreads id="4271">
                      <string>77-257356-1</string>
                      <string>77-257356-2</string>
                    </discussionThreads>
                    <lesson>65353</lesson>
                    <status>ready</status>
                    <block id="4272">
                      <name>code</name>
                      <text>Implement a method to find the min in an array of ints. The input arrays always contain at least one number.</text>
                      <options id="4273">
                        <samples id="4274">
                          <Sample id="4275">&lt;input&gt;18 11 19 44 -11 23 12
&lt;/input&gt;&lt;output&gt;-11&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4276" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int findMin(int[] numbers) {
    return numbers[0];
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4277" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4278">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4279" />
                    </block>
                    <actions class="linked-hash-map" id="4280">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4281">
                      <string>31-77-257356</string>
                      <string>30-77-257356</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>31</passedBy>
                    <correctRatio>0.6730769230769231</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4282">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4283">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4284">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4285">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4286">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4287">
                  <id>65358</id>
                  <title>Algorithms # Find the second largest element in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65358</progress>
                  <createDate id="4288">2017-12-27 15:11:22.0 UTC</createDate>
                  <updateDate id="4289">2018-01-23 13:49:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65358-1</discussionProxy>
                  <discussionThreads id="4290">
                    <string>76-65358-1</string>
                  </discussionThreads>
                  <steps id="4291">
                    <long>258529</long>
                  </steps>
                  <actions class="linked-hash-map" id="4292" />
                  <tags id="4293" />
                  <requiredTags id="4294" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4295">
                    <string>31-76-65358</string>
                    <string>30-76-65358</string>
                  </subscriptions>
                  <viewedBy>35</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1156</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Algorithms-Find-the-second-largest-element-in-an-array-65358</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65358</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4296">
                <StepNode id="4297">
                  <parent class="LessonNode" reference="4282" />
                  <data class="Step" id="4298">
                    <id>258529</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258529</progress>
                    <createDate id="4299">2017-12-30 19:31:58.0 UTC</createDate>
                    <updateDate id="4300">2017-12-30 20:04:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258529-1</discussionProxy>
                    <discussionThreads id="4301">
                      <string>77-258529-1</string>
                      <string>77-258529-2</string>
                    </discussionThreads>
                    <lesson>65358</lesson>
                    <status>ready</status>
                    <block id="4302">
                      <name>code</name>
                      <text>Implement a method to find the second largest number in an array of ints.&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;If the input array is empty or contains only a single number, the method must return &lt;/span&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;span&gt;. &lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the input array contains multiple largest elements, consider them as the same value.&lt;/div&gt;</text>
                      <options id="4303">
                        <samples id="4304">
                          <Sample id="4305">&lt;input&gt;1 5 3 1 2 4 6
&lt;/input&gt;&lt;output&gt;5&lt;/output&gt;</Sample>
                          <Sample id="4306">&lt;input&gt;17 17 -10 -10 -15
&lt;/input&gt;&lt;output&gt;-10&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4307" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int findSecondLargestNumber(int[] numbers) {
    return Integer.MIN_VALUE;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4308" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4309">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4310" />
                    </block>
                    <actions class="linked-hash-map" id="4311">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4312">
                      <string>31-77-258529</string>
                      <string>30-77-258529</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>37</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.20689655172413793</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4313">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4314">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4315">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4316">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4317">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4318">
                  <id>65357</id>
                  <title>Algorithms # Find the index of K min in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65357</progress>
                  <createDate id="4319">2017-12-27 15:10:38.0 UTC</createDate>
                  <updateDate id="4320">2018-02-04 05:03:56.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65357-1</discussionProxy>
                  <discussionThreads id="4321">
                    <string>76-65357-1</string>
                  </discussionThreads>
                  <steps id="4322">
                    <long>258527</long>
                  </steps>
                  <actions class="linked-hash-map" id="4323" />
                  <tags id="4324" />
                  <requiredTags id="4325" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4326">
                    <string>31-76-65357</string>
                    <string>30-76-65357</string>
                  </subscriptions>
                  <viewedBy>36</viewedBy>
                  <passedBy>27</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1425</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Algorithms-Find-the-index-of-K-min-in-an-array-65357</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65357</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4327">
                <StepNode id="4328">
                  <parent class="LessonNode" reference="4313" />
                  <data class="Step" id="4329">
                    <id>258527</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258527</progress>
                    <createDate id="4330">2017-12-30 19:21:24.0 UTC</createDate>
                    <updateDate id="4331">2018-02-04 05:03:55.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258527-1</discussionProxy>
                    <discussionThreads id="4332">
                      <string>77-258527-1</string>
                      <string>77-258527-2</string>
                    </discussionThreads>
                    <lesson>65357</lesson>
                    <status>ready</status>
                    <block id="4333">
                      <name>code</name>
                      <text>Implement a method to find the index of the K element equal to the min in an array of ints. If no such element found, the method must return &lt;code&gt;-1&lt;/code&gt;. The input array can be empty, &lt;code&gt;K &amp;gt; 0&lt;/code&gt;.&lt;br&gt;</text>
                      <options id="4334">
                        <samples id="4335">
                          <Sample id="4336">&lt;input&gt;18 4 17 4 19 18 4
2
&lt;/input&gt;&lt;output&gt;3&lt;/output&gt;</Sample>
                          <Sample id="4337">&lt;input&gt;10 15 13 10 14
3
&lt;/input&gt;&lt;output&gt;-1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4338" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int findIndexOfKMin(int[] numbers, int k) {
    return -1;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4339" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4340">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4341" />
                    </block>
                    <actions class="linked-hash-map" id="4342">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4343">
                      <string>31-77-258527</string>
                      <string>30-77-258527</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>36</viewedBy>
                    <passedBy>27</passedBy>
                    <correctRatio>0.21014492753623187</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4344">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4345">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4346">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4347">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4348">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4349">
                  <id>65358</id>
                  <title>Algorithms # Find the second largest element in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65358</progress>
                  <createDate id="4350">2017-12-27 15:11:22.0 UTC</createDate>
                  <updateDate id="4351">2018-01-23 13:49:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65358-1</discussionProxy>
                  <discussionThreads id="4352">
                    <string>76-65358-1</string>
                  </discussionThreads>
                  <steps id="4353">
                    <long>258529</long>
                  </steps>
                  <actions class="linked-hash-map" id="4354" />
                  <tags id="4355" />
                  <requiredTags id="4356" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4357">
                    <string>31-76-65358</string>
                    <string>30-76-65358</string>
                  </subscriptions>
                  <viewedBy>35</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1156</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Algorithms-Find-the-second-largest-element-in-an-array-65358</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65358</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4358">
                <StepNode id="4359">
                  <parent class="LessonNode" reference="4344" />
                  <data class="Step" id="4360">
                    <id>258529</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258529</progress>
                    <createDate id="4361">2017-12-30 19:31:58.0 UTC</createDate>
                    <updateDate id="4362">2017-12-30 20:04:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258529-1</discussionProxy>
                    <discussionThreads id="4363">
                      <string>77-258529-1</string>
                      <string>77-258529-2</string>
                    </discussionThreads>
                    <lesson>65358</lesson>
                    <status>ready</status>
                    <block id="4364">
                      <name>code</name>
                      <text>Implement a method to find the second largest number in an array of ints.&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;If the input array is empty or contains only a single number, the method must return &lt;/span&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;span&gt;. &lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the input array contains multiple largest elements, consider them as the same value.&lt;/div&gt;</text>
                      <options id="4365">
                        <samples id="4366">
                          <Sample id="4367">&lt;input&gt;1 5 3 1 2 4 6
&lt;/input&gt;&lt;output&gt;5&lt;/output&gt;</Sample>
                          <Sample id="4368">&lt;input&gt;17 17 -10 -10 -15
&lt;/input&gt;&lt;output&gt;-10&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4369" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int findSecondLargestNumber(int[] numbers) {
    return Integer.MIN_VALUE;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4370" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4371">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4372" />
                    </block>
                    <actions class="linked-hash-map" id="4373">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4374">
                      <string>31-77-258529</string>
                      <string>30-77-258529</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>37</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.20689655172413793</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4375">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4376">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4377">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4378">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4379">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4380">
                  <id>65904</id>
                  <title>Binary search # Find a fixed point in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65904</progress>
                  <createDate id="4381">2018-01-04 20:50:46.0 UTC</createDate>
                  <updateDate id="4382">2018-01-23 13:49:32.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-65904-1</discussionProxy>
                  <discussionThreads id="4383">
                    <string>76-65904-1</string>
                  </discussionThreads>
                  <steps id="4384">
                    <long>260251</long>
                  </steps>
                  <actions class="linked-hash-map" id="4385" />
                  <tags id="4386" />
                  <requiredTags id="4387" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4388">
                    <string>31-76-65904</string>
                    <string>30-76-65904</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>796</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Binary-search-Find-a-fixed-point-in-an-array-65904</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65904</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4389">
                <StepNode id="4390">
                  <parent class="LessonNode" reference="4375" />
                  <data class="Step" id="4391">
                    <id>260251</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-260251</progress>
                    <createDate id="4392">2018-01-05 07:28:44.0 UTC</createDate>
                    <updateDate id="4393">2018-01-08 08:23:02.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-260251-1</discussionProxy>
                    <discussionThreads id="4394">
                      <string>77-260251-1</string>
                      <string>77-260251-2</string>
                    </discussionThreads>
                    <lesson>65904</lesson>
                    <status>ready</status>
                    <block id="4395">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;div&gt;Write a program to check a sorted array of various ints contains a fixed point. The array is sorted in the ascending order.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A fixed point is an index &lt;b&gt;i&lt;/b&gt; such &lt;b&gt;A[i] = i&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The integers in the array can be negative. The input array doesn't contain duplicates.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use binary search to solve the problem.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The first line contains a number of elements in the array, the second one consists of the elements.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;The program should output &lt;b&gt;&quot;true&quot;&lt;/b&gt; or &lt;b&gt;&quot;false&quot;&lt;/b&gt;.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="4396">
                        <samples id="4397">
                          <Sample id="4398">&lt;input&gt;5
-8 -2 0 3 9
&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="4399">&lt;input&gt;6
4 7 9 12 14 19
&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                          <Sample id="4400">&lt;input&gt;4
-2 1 3 5&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4401" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4402" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4403">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4404" />
                    </block>
                    <actions class="linked-hash-map" id="4405">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4406">
                      <string>31-77-260251</string>
                      <string>30-77-260251</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.6285714285714286</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4407">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4408">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4409">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4410">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4411">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4412">
                  <id>58949</id>
                  <title>Type Bounds - Practice 5</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58949</progress>
                  <createDate id="4413">2017-10-17 17:45:07.0 UTC</createDate>
                  <updateDate id="4414">2018-01-23 13:47:08.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58949-1</discussionProxy>
                  <discussionThreads id="4415">
                    <string>76-58949-1</string>
                  </discussionThreads>
                  <steps id="4416">
                    <long>232902</long>
                  </steps>
                  <actions class="linked-hash-map" id="4417" />
                  <tags id="4418" />
                  <requiredTags id="4419" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4420">
                    <string>31-76-58949</string>
                    <string>30-76-58949</string>
                  </subscriptions>
                  <viewedBy>37</viewedBy>
                  <passedBy>16</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>2232</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>9526</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Type-Bounds-Practice-5-58949</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>1</abuseCount>
                  <vote>76-58949</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4421">
                <StepNode id="4422">
                  <parent class="LessonNode" reference="4407" />
                  <data class="Step" id="4423">
                    <id>232902</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-232902</progress>
                    <createDate id="4424">2017-10-18 17:42:20.0 UTC</createDate>
                    <updateDate id="4425">2017-10-18 17:42:21.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-232902-1</discussionProxy>
                    <discussionThreads id="4426">
                      <string>77-232902-1</string>
                    </discussionThreads>
                    <lesson>58949</lesson>
                    <status>ready</status>
                    <block id="4427">
                      <name>code</name>
                      <text>&lt;p&gt;There are different points of view on &quot;&lt;a rel=&quot;nofollow&quot; href=&quot;https://en.wikipedia.org/wiki/Apples_and_oranges&quot;&gt;Apples and Oranges&lt;/a&gt;&quot; problem. You are provided with an implementation that allows comparison of apples with oranges, the task is to redesign type system and implementation in a classical way that prohibits comparison of Oranges and Apples.&lt;/p&gt;&lt;p&gt;Following requirements exist:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Comparison of Apples with Apples and Oranges with Oranges should be allowed&lt;/li&gt;&lt;li&gt;Comparison of Apples with Oranges and Oranges with Apples should be restricted at a compile time&lt;/li&gt;&lt;li&gt;Class hierarchy should be preserved&lt;br&gt;&lt;/li&gt;&lt;li&gt;Fruits comparison doesn't matter, you may disable it&lt;/li&gt;&lt;li&gt;Solution should not raise compile-time warnings (e.g. &quot;raw types&quot;)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="4428">
                        <samples id="4429">
                          <Sample id="4430">&lt;input&gt;Apple and Orange classes
&lt;/input&gt;&lt;output&gt;Well done!&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4431" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>// This implementaion allows comparison of apples and oranges
class Fruit implements Comparable&lt;Fruit&gt; {

	private final int weigth;

	public Fruit(int weight) {
		this.weigth = weight;
	}

	@Override
	public int compareTo(Fruit other) {
		return Integer.compare(this.weigth, other.weigth);
	}

	public int getWeigth() {
		return this.weigth;
	}

}

class Apple extends Fruit {

	public Apple(int weight) {
		super(weight);
	}

}

class Orange extends Fruit {

	public Orange(int weight) {
		super(weight);
	}

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4432" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4433">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4434" />
                    </block>
                    <actions class="linked-hash-map" id="4435">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4436">
                      <string>31-77-232902</string>
                      <string>30-77-232902</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>37</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.12418300653594772</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4437">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4438">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4439">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4440">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4441">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4442">
                  <id>57110</id>
                  <title>Function composition # The chain of responsibility</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57110</progress>
                  <createDate id="4443">2017-09-20 17:12:53.0 UTC</createDate>
                  <updateDate id="4444">2018-02-21 15:19:50.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57110-1</discussionProxy>
                  <discussionThreads id="4445">
                    <string>76-57110-1</string>
                  </discussionThreads>
                  <steps id="4446">
                    <long>223274</long>
                    <long>223278</long>
                    <long>223279</long>
                  </steps>
                  <actions class="linked-hash-map" id="4447" />
                  <tags id="4448" />
                  <requiredTags id="4449" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4450">
                    <string>31-76-57110</string>
                    <string>30-76-57110</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>5</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Function-composition-The-chain-of-responsibility-57110</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57110</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="java.util.Arrays$ArrayList" id="4451">
                <a id="4452">
                  <StepNode id="4453">
                    <parent class="LessonNode" reference="4437" />
                    <data class="Step" id="4454">
                      <id>223274</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>1</position>
                      <progress>77-223274</progress>
                      <createDate id="4455">2017-09-20 17:12:54.0 UTC</createDate>
                      <updateDate id="4456">2017-09-20 17:17:22.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223274-1</discussionProxy>
                      <discussionThreads id="4457">
                        <string>77-223274-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="4458">
                        <name>text</name>
                        <text>&lt;p&gt;&lt;b&gt;Overview. &lt;/b&gt;The chain of responsibility pattern is a object-oriented design pattern that processes a request through a series of handlers (a chain). The request (or something else) is sent from one handler to another and processed by one or all of these handlers in the chain.&lt;/p&gt;&lt;p&gt;In more detail: &lt;a href=&quot;https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&quot; rel=&quot;nofollow&quot; title=&quot;Link: https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&quot;&gt;https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Usually, to implement this design pattern follow classes and method are created:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;a general handler&lt;/b&gt; is an abstract class or interface with a &lt;b&gt;&lt;/b&gt;met﻿hod &lt;b&gt;handle/process/etc&lt;/b&gt; and a method to set a ﻿next handler&lt;/li&gt;&lt;li&gt;one or more &lt;b&gt;concrete handlers &lt;/b&gt;that implement the general handler&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Using functional style we can implement it more simple. &lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;Instead o&lt;/span&gt;&lt;span&gt;f &lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;writing all &lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;concrete &lt;/span&gt;&lt;span&gt;handlers &lt;/span&gt;&lt;span&gt;we &lt;/span&gt;&lt;span&gt;can &lt;/span&gt;&lt;span&gt;write l&lt;/span&gt;&lt;span&gt;ambda &lt;/span&gt;&lt;span&gt;expressions (or &lt;/span&gt;&lt;span&gt;method r&lt;/span&gt;&lt;span&gt;eferences). For &lt;/span&gt;&lt;span&gt;setting &lt;/span&gt;&lt;span&gt;next&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;handler it's possible &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;function &lt;/span&gt;&lt;span&gt;composition &lt;/span&gt;&lt;span&gt;﻿in &lt;/span&gt;&lt;span&gt;similar &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;functions &lt;/span&gt;&lt;span&gt;way.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                        <options id="4459" />
                        <subtitleFiles id="4460" />
                      </block>
                      <actions class="linked-hash-map" id="4461" />
                      <subscriptions id="4462">
                        <string>31-77-223274</string>
                        <string>30-77-223274</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>6</viewedBy>
                      <passedBy>6</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>true</wasDeleted>
                    <currentLang>invalid</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="4463">
                    <parent class="LessonNode" reference="4437" />
                    <data class="Step" id="4464">
                      <id>223278</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>2</position>
                      <progress>77-223278</progress>
                      <createDate id="4465">2017-09-20 17:17:22.0 UTC</createDate>
                      <updateDate id="4466">2017-09-20 17:17:23.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223278-1</discussionProxy>
                      <discussionThreads id="4467">
                        <string>77-223278-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="4468">
                        <name>code</name>
                        <text>&lt;p&gt;There is a class &lt;b&gt;Request(data: String) &lt;/b&gt;for representing some XML requests in a payment system. The class has a getter method &lt;b&gt;getData()&lt;/b&gt; and a constructor with one argument (&lt;b&gt;data)&lt;/b&gt;. See below.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Typically, the value of &lt;b&gt;data&lt;/b&gt; looks like shown below (in a human-readable format, in processing it's a single line string).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;request&amp;gt;&lt;br&gt;  &amp;lt;transaction&amp;gt;&lt;br&gt;    &amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&lt;br&gt;    &amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&lt;br&gt;    &amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&lt;br&gt;    &amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&lt;br&gt;  &amp;lt;/transaction&amp;gt;&lt;br&gt;  &amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&lt;br&gt;&amp;lt;/request&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;You should to write &lt;b&gt;the chain of responsibility pattern in functional style&lt;/b&gt; for stage-by-stage request creating.&lt;div&gt;For this:&lt;div&gt;1) write a functional interface &lt;b&gt;RequestHandler&lt;/b&gt; with a single abstract method &lt;b&gt;handle &lt;/b&gt;and a default method; the first is needed for using lambda expressions and should accept a Request and returns new Request with changed data, the second is for combining several handlers into the one.&lt;/div&gt;&lt;div&gt;2) create a &lt;b&gt;commonRequestHandler&lt;/b&gt; combined from three existing handlers: &lt;b&gt;wrapInTransactionTag&lt;/b&gt;, &lt;b&gt;createDigest&lt;/b&gt; and &lt;b&gt;wrapInRequestTag&lt;/b&gt;.&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Important. &lt;/b&gt;Use the provided template for your solution. Do not change it and read comments in the code. The template is long enough, scroll it to the bottom. &lt;b&gt;All comments where your code is expected start with !!!&lt;/b&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In the next step, you can read how the requests should be created. Keep in mind, all handlers with logic are already implemented and available for you. You need to write only a suitable functional interface and compose all existing handlers as functions into one &lt;b&gt;commonRequestHandler&lt;/b&gt; &lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;to follow the described algorithm.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                        <options id="4469">
                          <samples id="4470" />
                          <codeTemplates class="LinkedTreeMap" id="4471" resolves-to="linked-hash-map">
                            <entry>
                              <string>java8</string>
                              <string>/**
 * It represents a handler and has two methods: one for handling requests and other for combining handlers
 */
@FunctionalInterface
interface RequestHandler {

    // !!! write a method handle that accept request and returns new request here
    // it allows to use lambda expressions for creating handlers below

    // !!! write a default method for combining this and other handler single one
    // the order of execution may be any but you need to consider it when composing handlers
    // the method may has any name
}

/**
 * Accepts a request and returns new request with data wrapped in the tag &lt;transaction&gt;...&lt;/transaction&gt;
 */
final static RequestHandler wrapInTransactionTag =
        (req) -&gt; new Request(String.format(&quot;&lt;transaction&gt;%s&lt;/transaction&gt;&quot;, req.getData()));

/**
 * Accepts a request and returns a new request with calculated digest inside the tag &lt;digest&gt;...&lt;/digest&gt;
 */
final static RequestHandler createDigest =
        (req) -&gt; {
            String digest = &quot;&quot;;
            try {
                final MessageDigest md5 = MessageDigest.getInstance(&quot;MD5&quot;);
                final byte[] digestBytes = md5.digest(req.getData().getBytes(&quot;UTF-8&quot;));
                digest = new String(Base64.getEncoder().encode(digestBytes));
            } catch (Exception ignored) { }
            return new Request(req.getData() + String.format(&quot;&lt;digest&gt;%s&lt;/digest&gt;&quot;, digest));
        };

/**
 * Accepts a request and returns a new request with data wrapped in the tag &lt;request&gt;...&lt;/request&gt;
 */
final static RequestHandler wrapInRequestTag =
        (req) -&gt; new Request(String.format(&quot;&lt;request&gt;%s&lt;/request&gt;&quot;, req.getData()));

/**
 * It should represents a chain of responsibility combined from another handlers.
 * The format: commonRequestHandler = handler1.setSuccessor(handler2.setSuccessor(...))
 * The combining method setSuccessor may has another name
 */
final static RequestHandler commonRequestHandler = // !!! write the combining of existing handlers here

/**
 * Immutable class for representing requests.
 * If you need to change the request data then create new request.
 */
static class Request {
    private final String data;

    public Request(String requestData) {
        this.data = requestData;
    }

    public String getData() {
        return data;
    }
}</string>
                            </entry>
                          </codeTemplates>
                          <limits class="LinkedTreeMap" id="4472" resolves-to="linked-hash-map">
                            <entry>
                              <string>java8</string>
                              <Limit id="4473">
                                <time>8</time>
                                <memory>256</memory>
                              </Limit>
                            </entry>
                          </limits>
                        </options>
                        <subtitleFiles id="4474" />
                      </block>
                      <actions class="linked-hash-map" id="4475">
                        <entry>
                          <string>submit</string>
                          <string>#</string>
                        </entry>
                      </actions>
                      <subscriptions id="4476">
                        <string>31-77-223278</string>
                        <string>30-77-223278</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>16</viewedBy>
                      <passedBy>8</passedBy>
                      <correctRatio>0.25</correctRatio>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>true</wasDeleted>
                    <currentLang>Java 8</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="4477">
                    <parent class="LessonNode" reference="4437" />
                    <data class="Step" id="4478">
                      <id>223279</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>3</position>
                      <progress>77-223279</progress>
                      <createDate id="4479">2017-09-20 17:17:36.0 UTC</createDate>
                      <updateDate id="4480">2017-09-20 17:17:36.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223279-1</discussionProxy>
                      <discussionThreads id="4481">
                        <string>77-223279-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="4482">
                        <name>text</name>
                        <text>&lt;p&gt;&lt;b&gt;The algorithm for creating a XML request.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;0) Initial request data looks like shown below (it contains only business data).&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1) First, a tag &lt;i&gt;&amp;lt;transaction&amp;gt;...&amp;lt;/transaction&amp;gt;&lt;/i&gt; is added as border of the data (data is wrapped in the tag). The result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2) Then, a digest (MD5) is calculated for entire data created on the previous stage and added as a new tag. The result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;&amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3) After that, the data is wrapped in a tag &lt;i&gt;&amp;lt;request&amp;gt;...&amp;lt;/request&amp;gt;&lt;/i&gt; as shown below. The request is completed.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;request&amp;gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-
63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;
&amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&amp;lt;/request&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;So, if you have a request data as shown in stage 0, the algorithm should to generate the result as shown in stage 3.&lt;/p&gt;&lt;p&gt;Note, each stage is already implemented for you in a specific &lt;b&gt;RequestHandler&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;</text>
                        <options id="4483" />
                        <subtitleFiles id="4484" />
                      </block>
                      <actions class="linked-hash-map" id="4485" />
                      <subscriptions id="4486">
                        <string>31-77-223279</string>
                        <string>30-77-223279</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>5</viewedBy>
                      <passedBy>5</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>true</wasDeleted>
                    <currentLang>invalid</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                </a>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4487">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4488">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4489">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4490">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4491">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4492">
                  <id>65358</id>
                  <title>Algorithms # Find the second largest element in an array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65358</progress>
                  <createDate id="4493">2017-12-27 15:11:22.0 UTC</createDate>
                  <updateDate id="4494">2018-01-23 13:49:30.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65358-1</discussionProxy>
                  <discussionThreads id="4495">
                    <string>76-65358-1</string>
                  </discussionThreads>
                  <steps id="4496">
                    <long>258529</long>
                  </steps>
                  <actions class="linked-hash-map" id="4497" />
                  <tags id="4498" />
                  <requiredTags id="4499" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4500">
                    <string>31-76-65358</string>
                    <string>30-76-65358</string>
                  </subscriptions>
                  <viewedBy>37</viewedBy>
                  <passedBy>28</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1179</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Algorithms-Find-the-second-largest-element-in-an-array-65358</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65358</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4501">
                <StepNode id="4502">
                  <parent class="LessonNode" reference="4487" />
                  <data class="Step" id="4503">
                    <id>258529</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-258529</progress>
                    <createDate id="4504">2017-12-30 19:31:58.0 UTC</createDate>
                    <updateDate id="4505">2017-12-30 20:04:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-258529-1</discussionProxy>
                    <discussionThreads id="4506">
                      <string>77-258529-1</string>
                      <string>77-258529-2</string>
                    </discussionThreads>
                    <lesson>65358</lesson>
                    <status>ready</status>
                    <block id="4507">
                      <name>code</name>
                      <text>Implement a method to find the second largest number in an array of ints.&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;If the input array is empty or contains only a single number, the method must return &lt;/span&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;span&gt;. &lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the input array contains multiple largest elements, consider them as the same value.&lt;/div&gt;</text>
                      <options id="4508">
                        <samples id="4509">
                          <Sample id="4510">&lt;input&gt;1 5 3 1 2 4 6
&lt;/input&gt;&lt;output&gt;5&lt;/output&gt;</Sample>
                          <Sample id="4511">&lt;input&gt;17 17 -10 -10 -15
&lt;/input&gt;&lt;output&gt;-10&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4512" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int findSecondLargestNumber(int[] numbers) {
    return Integer.MIN_VALUE;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4513" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4514">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4515" />
                    </block>
                    <actions class="linked-hash-map" id="4516">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4517">
                      <string>31-77-258529</string>
                      <string>30-77-258529</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>37</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.20689655172413793</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4518">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4519">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4520">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4521">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4522">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4523">
                  <id>56026</id>
                  <title>Multi-dimensional array # Spiral</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56026</progress>
                  <createDate id="4524">2017-09-12 14:45:36.0 UTC</createDate>
                  <updateDate id="4525">2018-02-05 04:58:39.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56026-1</discussionProxy>
                  <discussionThreads id="4526">
                    <string>76-56026-1</string>
                  </discussionThreads>
                  <steps id="4527">
                    <long>216367</long>
                  </steps>
                  <actions class="linked-hash-map" id="4528" />
                  <tags id="4529" />
                  <requiredTags id="4530" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4531">
                    <string>31-76-56026</string>
                    <string>30-76-56026</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>10</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>5752</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Multi-dimensional-array-Spiral-56026</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56026</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4532">
                <StepNode id="4533">
                  <parent class="LessonNode" reference="4518" />
                  <data class="Step" id="4534">
                    <id>216367</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216367</progress>
                    <createDate id="4535">2017-09-04 10:15:13.0 UTC</createDate>
                    <updateDate id="4536">2018-02-05 04:56:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-216367-1</discussionProxy>
                    <discussionThreads id="4537">
                      <string>77-216367-1</string>
                    </discussionThreads>
                    <lesson>56026</lesson>
                    <status>ready</status>
                    <block id="4538">
                      <name>code</name>
                      <text>&lt;p&gt;Output the matrix of size $n \times n$, filled by the integers from $1$ to $n^2$ in a spiral, coming from the top left corner and
twisted clockwise, as shown in the example (here $n=5$).&lt;/p&gt;</text>
                      <options id="4539">
                        <samples id="4540">
                          <Sample id="4541">&lt;input&gt;5&lt;/input&gt;&lt;output&gt;1 2 3 4 5
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4542" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4543" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4544">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4545" />
                    </block>
                    <actions class="linked-hash-map" id="4546">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4547">
                      <string>31-77-216367</string>
                      <string>30-77-216367</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.38235294117647056</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4548">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4549">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4550">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4551">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4552">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4553">
                  <id>57132</id>
                  <title>Stream pipelines # The total sum of canceled transactions</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57132</progress>
                  <createDate id="4554">2017-09-20 17:53:19.0 UTC</createDate>
                  <updateDate id="4555">2018-02-21 15:40:46.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57132-1</discussionProxy>
                  <discussionThreads id="4556">
                    <string>76-57132-1</string>
                  </discussionThreads>
                  <steps id="4557">
                    <long>223429</long>
                  </steps>
                  <actions class="linked-hash-map" id="4558" />
                  <tags id="4559" />
                  <requiredTags id="4560" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4561">
                    <string>31-76-57132</string>
                    <string>30-76-57132</string>
                  </subscriptions>
                  <viewedBy>12</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Stream-pipelines-The-total-sum-of-canceled-transactions-57132</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57132</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4562">
                <StepNode id="4563">
                  <parent class="LessonNode" reference="4548" />
                  <data class="Step" id="4564">
                    <id>223429</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-223429</progress>
                    <createDate id="4565">2017-09-20 18:25:25.0 UTC</createDate>
                    <updateDate id="4566">2017-09-22 16:43:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-223429-1</discussionProxy>
                    <discussionThreads id="4567">
                      <string>77-223429-1</string>
                    </discussionThreads>
                    <lesson>57132</lesson>
                    <status>ready</status>
                    <block id="4568">
                      <name>code</name>
                      <text>&lt;p&gt;You have two classes:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Transaction: &lt;/b&gt;uuid: String,  state: State (CANCELED, FINISHED, PROCESSING), sum: Long, created: Date&lt;/li&gt;&lt;li&gt;&lt;b&gt;Account: &lt;/b&gt;number: String&lt;b&gt;&lt;/b&gt;, balance: Long, transactions: List&amp;lt;Transaction&amp;gt;&lt;/li&gt;&lt;/ul&gt;Both classes have getters for all fields with the corresponding names (getState(), getSum(), getTransactions() and so on).&lt;br&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;W&lt;b&gt;&lt;/b&gt;rite a method using Stream API that calculates &lt;b&gt;the&lt;/b&gt; &lt;b&gt;total sum of canceled transactions&lt;/b&gt; for all non-empty accounts (&lt;b&gt;balance &amp;gt; 0&lt;/b&gt;). Perhaps, &lt;b&gt;flatMap&lt;/b&gt; method can help you to implement it.&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot; rel=&quot;nofollow&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Classes&lt;b&gt; Transaction&lt;/b&gt;, &lt;b&gt;Account &lt;/b&gt;and enum&lt;b&gt; State &lt;/b&gt;will be available during testing. You can define your own classes for local testing.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Important. &lt;/b&gt;Use the given template for your method. Pay attention to type of an argument and the returned value. Please, use only Stream API, no cycles.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Examples:&lt;/b&gt; there are 2 accounts (in JSON notation) below. The result is 10 000.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;[&lt;br&gt;  {&lt;br&gt;    &quot;number&quot;: &quot;1001&quot;,&lt;br&gt;    &quot;balance&quot;: 0,&lt;br&gt;    &quot;transactions&quot;: [&lt;br&gt;      {&lt;br&gt;        &quot;uuid&quot;: &quot;774cedda-9cde-4f53-8bc2-5b4d4859772a&quot;,&lt;br&gt;        &quot;state&quot;: &quot;CANCELED&quot;,&lt;br&gt;        &quot;sum&quot;: 1000,&lt;br&gt;        &quot;created&quot;: &quot;2016.12.12 18:30:05&quot;&lt;br&gt;      }&lt;br&gt;    ]&lt;br&gt;  },&lt;br&gt;  {&lt;br&gt;    &quot;number&quot;: &quot;1002&quot;,&lt;br&gt;    &quot;balance&quot;: 8000,&lt;br&gt;    &quot;transactions&quot;: [&lt;br&gt;      {&lt;br&gt;        &quot;uuid&quot;: &quot;337868a7-f469-43c0-9042-3422ce37ee26a&quot;,&lt;br&gt;        &quot;state&quot;: &quot;FINISHED&quot;,&lt;br&gt;        &quot;sum&quot;: 8000,&lt;br&gt;        &quot;created&quot;: &quot;2016.12.12 17:30:55&quot;&lt;br&gt;      },&lt;br&gt;      {&lt;br&gt;        &quot;uuid&quot;: &quot;f8047f86-89e7-4226-8b75-74c55a4d7e31&quot;,&lt;br&gt;        &quot;state&quot;: &quot;CANCELED&quot;,&lt;br&gt;        &quot;sum&quot;: 10000,&lt;br&gt;        &quot;created&quot;: &quot;2016.12.12 18:10:18&quot;&lt;br&gt;      }&lt;br&gt;    ]&lt;br&gt;  }&lt;br&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="4569">
                        <samples id="4570" />
                        <codeTemplates class="LinkedTreeMap" id="4571" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>/**
 * Calculates the general sum of canceled transactions for all non empty accounts in the list
 */
public static long calcSumOfCanceledTransOnNonEmptyAccounts(List&lt;Account&gt; accounts) {
    // write your code here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4572" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4573">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4574" />
                    </block>
                    <actions class="linked-hash-map" id="4575">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4576">
                      <string>31-77-223429</string>
                      <string>30-77-223429</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>12</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.1568627450980392</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4577">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4578">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4579">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4580">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4581">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4582">
                  <id>65899</id>
                  <title>Binary search # Find array elements in another array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65899</progress>
                  <createDate id="4583">2018-01-04 20:46:54.0 UTC</createDate>
                  <updateDate id="4584">2018-01-23 13:49:32.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65899-1</discussionProxy>
                  <discussionThreads id="4585">
                    <string>76-65899-1</string>
                  </discussionThreads>
                  <steps id="4586">
                    <long>260249</long>
                  </steps>
                  <actions class="linked-hash-map" id="4587" />
                  <tags id="4588" />
                  <requiredTags id="4589" />
                  <playlists id="4590" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4591">
                    <string>31-76-65899</string>
                    <string>30-76-65899</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies id="4592" />
                  <followers id="4593" />
                  <timeToComplete>1474</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Binary-search-Find-array-elements-in-another-array-65899</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65899</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4594">
                <StepNode id="4595">
                  <parent class="LessonNode" reference="4577" />
                  <data class="Step" id="4596">
                    <id>260249</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-260249</progress>
                    <createDate id="4597">2018-01-05 06:53:26.0 UTC</createDate>
                    <updateDate id="4598">2018-01-05 07:09:50.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-260249-1</discussionProxy>
                    <discussionThreads id="4599">
                      <string>77-260249-1</string>
                      <string>77-260249-2</string>
                    </discussionThreads>
                    <lesson>65899</lesson>
                    <status>ready</status>
                    <block id="4600">
                      <name>code</name>
                      <text>&lt;p class=&quot;wysiwyg-text-align-left&quot;&gt;The first line contains integer $1 \le n \le 10^5$. The second one contains of an array
$A[1 \ldots n]$ of $n$ various natural numbers, not exceeding $10^9$, in
ascending order. &lt;/p&gt;&lt;p class=&quot;wysiwyg-text-align-left&quot;&gt;The third line contains integer $1 \le k \le
10^5$. The fourth one consists of $k$ natural numbers $b_1, \ldots, b_k$, not exceeding $10^9$. &lt;/p&gt;&lt;p class=&quot;wysiwyg-text-align-left&quot;&gt;For each $i$ from 1 to $k$ it is necessary to output index $1 \le j \le n$, for
which $A[j]=b_i$, or $-1$, if there is no such $j$.&lt;/p&gt;</text>
                      <options id="4601">
                        <samples id="4602">
                          <Sample id="4603">&lt;input&gt;5
1 5 8 12 13
5
8 1 23 1 11&lt;/input&gt;&lt;output&gt;3 1 -1 1 -1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4604" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4605" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4606">
                              <time>2</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4607" />
                    </block>
                    <actions class="linked-hash-map" id="4608">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4609">
                      <string>31-77-260249</string>
                      <string>30-77-260249</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.2911392405063291</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4610">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4611">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4612">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4613">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4614">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4615">
                  <id>56143</id>
                  <title>Iterator and Iterable # List iterator - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56143</progress>
                  <createDate id="4616">2017-09-12 14:46:20.0 UTC</createDate>
                  <updateDate id="4617">2018-02-18 08:31:37.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-56143-1</discussionProxy>
                  <discussionThreads id="4618">
                    <string>76-56143-1</string>
                  </discussionThreads>
                  <steps id="4619">
                    <long>211867</long>
                  </steps>
                  <actions class="linked-hash-map" id="4620" />
                  <tags id="4621" />
                  <requiredTags id="4622" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4623">
                    <string>31-76-56143</string>
                    <string>30-76-56143</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>975</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-List-iterator-1-56143</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56143</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4624">
                <StepNode id="4625">
                  <parent class="LessonNode" reference="4610" />
                  <data class="Step" id="4626">
                    <id>211867</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211867</progress>
                    <createDate id="4627">2017-08-27 18:53:27.0 UTC</createDate>
                    <updateDate id="4628">2018-02-18 08:31:36.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-211867-1</discussionProxy>
                    <discussionThreads id="4629">
                      <string>77-211867-1</string>
                      <string>77-211867-2</string>
                    </discussionThreads>
                    <lesson>56143</lesson>
                    <status>ready</status>
                    <block id="4630">
                      <name>code</name>
                      <text>1) Using ListIterator iterate over the elements of the list from the beginning to the end and after each word &quot;Hip&quot; add &quot;Hop&quot;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2) Using ListIterator print all elements.&lt;br&gt;&lt;/div&gt;</text>
                      <options id="4631">
                        <samples id="4632">
                          <Sample id="4633">&lt;input&gt;Iterator Hip Hoi Hap Iterator Hip Hi&lt;/input&gt;&lt;output&gt;Iterator
Hip
Hop
Hoi
Hap
Iterator
Hip
Hop
Hi&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4634" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    List&lt;String&gt; list = Arrays.stream(reader.readLine().split(&quot;\\s&quot;)).collect(Collectors.toList());

    //paste your code here

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4635" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4636">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4637" />
                    </block>
                    <actions class="linked-hash-map" id="4638">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4639">
                      <string>31-77-211867</string>
                      <string>30-77-211867</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>19</passedBy>
                    <correctRatio>0.2911392405063291</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4640">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4641">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4642">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4643">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4644">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4645">
                  <id>61084</id>
                  <title>Iterator and Iterable # Finding the max number</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61084</progress>
                  <createDate id="4646">2017-11-13 19:15:17.0 UTC</createDate>
                  <updateDate id="4647">2018-02-18 08:34:05.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61084-1</discussionProxy>
                  <discussionThreads id="4648">
                    <string>76-61084-1</string>
                  </discussionThreads>
                  <steps id="4649">
                    <long>240667</long>
                  </steps>
                  <actions class="linked-hash-map" id="4650" />
                  <tags id="4651" />
                  <requiredTags id="4652" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4653">
                    <string>31-76-61084</string>
                    <string>30-76-61084</string>
                  </subscriptions>
                  <viewedBy>18</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>349</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-Finding-the-max-number-61084</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61084</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4654">
                <StepNode id="4655">
                  <parent class="LessonNode" reference="4640" />
                  <data class="Step" id="4656">
                    <id>240667</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-240667</progress>
                    <createDate id="4657">2017-11-13 19:41:37.0 UTC</createDate>
                    <updateDate id="4658">2018-02-18 08:34:04.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-240667-1</discussionProxy>
                    <discussionThreads id="4659">
                      <string>77-240667-1</string>
                      <string>77-240667-2</string>
                    </discussionThreads>
                    <lesson>61084</lesson>
                    <status>ready</status>
                    <block id="4660">
                      <name>code</name>
                      <text>&lt;div&gt;Implement a method that returns the max number in a collection using the iterator. It's guaranteed the collection always has at least one element.&lt;/div&gt;</text>
                      <options id="4661">
                        <samples id="4662">
                          <Sample id="4663">&lt;input&gt;1 3 8 4 5&lt;/input&gt;&lt;output&gt;8&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4664" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int findMaxByIterator(Iterator&lt;Integer&gt; iterator) {
    int max = Integer.MIN_VALUE;

    // write your code here

    return max;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4665" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4666">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4667" />
                    </block>
                    <actions class="linked-hash-map" id="4668">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4669">
                      <string>31-77-240667</string>
                      <string>30-77-240667</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>18</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.4375</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4670">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4671">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4672">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4673">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4674">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4675">
                  <id>56142</id>
                  <title>Iterator and Iterable # Iterator - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56142</progress>
                  <createDate id="4676">2017-09-12 14:46:20.0 UTC</createDate>
                  <updateDate id="4677">2018-02-18 08:29:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56142-1</discussionProxy>
                  <discussionThreads id="4678">
                    <string>76-56142-1</string>
                  </discussionThreads>
                  <steps id="4679">
                    <long>211868</long>
                  </steps>
                  <actions class="linked-hash-map" id="4680" />
                  <tags id="4681" />
                  <requiredTags id="4682" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4683">
                    <string>31-76-56142</string>
                    <string>30-76-56142</string>
                  </subscriptions>
                  <viewedBy>26</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1229</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-Iterator-1-56142</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56142</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4684">
                <StepNode id="4685">
                  <parent class="LessonNode" reference="4670" />
                  <data class="Step" id="4686">
                    <id>211868</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211868</progress>
                    <createDate id="4687">2017-08-27 18:53:45.0 UTC</createDate>
                    <updateDate id="4688">2018-02-18 08:29:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211868-1</discussionProxy>
                    <discussionThreads id="4689">
                      <string>77-211868-1</string>
                      <string>77-211868-2</string>
                    </discussionThreads>
                    <lesson>56142</lesson>
                    <status>ready</status>
                    <block id="4690">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Read one string with numbers separated by spaces.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Put this numbers to any collection of Integers and then sort this collection.&lt;/p&gt;&lt;p&gt;Using Iterator remove all even annoying numbers from your collection.&lt;/p&gt;&lt;p&gt;Print all remaining elements to the standard output, each with a new line.&lt;br&gt;&lt;/p&gt;</text>
                      <options id="4691">
                        <samples id="4692">
                          <Sample id="4693">&lt;input&gt;1 2 3 4 5 6 7 8 9 10&lt;/input&gt;&lt;output&gt;1
3
5
7
9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4694" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException{
    // write your code here


}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4695" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4696">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4697" />
                    </block>
                    <actions class="linked-hash-map" id="4698">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4699">
                      <string>31-77-211868</string>
                      <string>30-77-211868</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>26</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.3125</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4700">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4701">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4702">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4703">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4704">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4705">
                  <id>61087</id>
                  <title>Iterator and Iterable # Iterable range</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61087</progress>
                  <createDate id="4706">2017-11-13 19:15:35.0 UTC</createDate>
                  <updateDate id="4707">2018-02-18 08:38:11.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61087-1</discussionProxy>
                  <discussionThreads id="4708">
                    <string>76-61087-1</string>
                  </discussionThreads>
                  <steps id="4709">
                    <long>240673</long>
                  </steps>
                  <actions class="linked-hash-map" id="4710" />
                  <tags id="4711" />
                  <requiredTags id="4712" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4713">
                    <string>31-76-61087</string>
                    <string>30-76-61087</string>
                  </subscriptions>
                  <viewedBy>18</viewedBy>
                  <passedBy>11</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1612</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-Iterable-range-61087</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61087</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4714">
                <StepNode id="4715">
                  <parent class="LessonNode" reference="4700" />
                  <data class="Step" id="4716">
                    <id>240673</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-240673</progress>
                    <createDate id="4717">2017-11-13 20:46:07.0 UTC</createDate>
                    <updateDate id="4718">2018-02-18 08:38:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-240673-1</discussionProxy>
                    <discussionThreads id="4719">
                      <string>77-240673-1</string>
                      <string>77-240673-2</string>
                    </discussionThreads>
                    <lesson>61087</lesson>
                    <status>ready</status>
                    <block id="4720">
                      <name>code</name>
                      <text>&lt;p&gt;Given a class named &lt;code&gt;Range&lt;/code&gt;. It represents a range from A (inclusive) to B (exclusive). The class implements the interface &lt;code&gt;Iterable&lt;/code&gt;, therefore, an instance of &lt;code&gt;Range&lt;/code&gt; can be used in the for-each loop.  &lt;br&gt;&lt;/p&gt;&lt;p&gt;Write a body of the overridden method &lt;code&gt;iterator&lt;/code&gt; so that the following code works correctly:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;Range range = new Range(2, 6);&lt;br&gt;&lt;br&gt;for (Long val : range) {&lt;br&gt;    System.out.println(val);&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;It must print:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;2
3
4
5&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="4721">
                        <samples id="4722">
                          <Sample id="4723">&lt;input&gt;2 6&lt;/input&gt;&lt;output&gt;2
3
4
5&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4724" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Range implements Iterable&lt;Long&gt; {

    private long fromInclusive;
    private long toExclusive;

    public Range(long from, long to) {
        this.fromInclusive = from;
        this.toExclusive = to;
    }

    @Override
    public Iterator&lt;Long&gt; iterator() {
        // write your code here
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4725" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4726">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4727" />
                    </block>
                    <actions class="linked-hash-map" id="4728">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4729">
                      <string>31-77-240673</string>
                      <string>30-77-240673</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>19</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.358974358974359</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4730">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4731">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4732">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4733">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4734">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4735">
                  <id>61085</id>
                  <title>Iterator and Iterable # Reversed list</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61085</progress>
                  <createDate id="4736">2017-11-13 19:15:22.0 UTC</createDate>
                  <updateDate id="4737">2018-02-18 08:35:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61085-1</discussionProxy>
                  <discussionThreads id="4738">
                    <string>76-61085-1</string>
                  </discussionThreads>
                  <steps id="4739">
                    <long>240669</long>
                  </steps>
                  <actions class="linked-hash-map" id="4740" />
                  <tags id="4741" />
                  <requiredTags id="4742" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4743">
                    <string>31-76-61085</string>
                    <string>30-76-61085</string>
                  </subscriptions>
                  <viewedBy>17</viewedBy>
                  <passedBy>14</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1663</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-Reversed-list-61085</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61085</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4744">
                <StepNode id="4745">
                  <parent class="LessonNode" reference="4730" />
                  <data class="Step" id="4746">
                    <id>240669</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-240669</progress>
                    <createDate id="4747">2017-11-13 19:56:49.0 UTC</createDate>
                    <updateDate id="4748">2018-02-18 08:35:02.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-240669-1</discussionProxy>
                    <discussionThreads id="4749">
                      <string>77-240669-1</string>
                      <string>77-240669-2</string>
                    </discussionThreads>
                    <lesson>61085</lesson>
                    <status>ready</status>
                    <block id="4750">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Implement a method that takes an instance of &lt;/span&gt;&lt;code&gt;ListIterator&lt;/code&gt;&lt;span&gt; and creates a new list in the reversed order. The given iterator is on the first element of a list. Use only the iterator to write a solution.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;</text>
                      <options id="4751">
                        <samples id="4752">
                          <Sample id="4753">&lt;input&gt;1001 1002 1001 1003&lt;/input&gt;&lt;output&gt;1003 1001 1002 1001&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4754" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static &lt;T&gt; List&lt;T&gt; createReversedListByIterator(ListIterator&lt;T&gt; iterator) {
    List&lt;T&gt; list = new ArrayList&lt;&gt;();

    // write your code here

    return list;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4755" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4756">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4757" />
                    </block>
                    <actions class="linked-hash-map" id="4758">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4759">
                      <string>31-77-240669</string>
                      <string>30-77-240669</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>17</viewedBy>
                    <passedBy>14</passedBy>
                    <correctRatio>0.3333333333333333</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4760">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4761">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4762">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4763">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4764">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4765">
                  <id>56144</id>
                  <title>Iterator and Iterable # ListIterator - 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56144</progress>
                  <createDate id="4766">2017-09-12 14:46:20.0 UTC</createDate>
                  <updateDate id="4767">2018-02-18 08:32:37.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56144-1</discussionProxy>
                  <discussionThreads id="4768">
                    <string>76-56144-1</string>
                  </discussionThreads>
                  <steps id="4769">
                    <long>211866</long>
                  </steps>
                  <actions class="linked-hash-map" id="4770" />
                  <tags id="4771" />
                  <requiredTags id="4772" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4773">
                    <string>31-76-56144</string>
                    <string>30-76-56144</string>
                  </subscriptions>
                  <viewedBy>25</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1923</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-ListIterator-2-56144</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56144</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4774">
                <StepNode id="4775">
                  <parent class="LessonNode" reference="4760" />
                  <data class="Step" id="4776">
                    <id>211866</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211866</progress>
                    <createDate id="4777">2017-08-27 18:53:10.0 UTC</createDate>
                    <updateDate id="4778">2018-02-18 08:32:36.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211866-1</discussionProxy>
                    <discussionThreads id="4779">
                      <string>77-211866-1</string>
                      <string>77-211866-2</string>
                    </discussionThreads>
                    <lesson>56144</lesson>
                    <status>ready</status>
                    <block id="4780">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a string like &quot;JButton Button JMenu...&quot;. &lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;1) add all elements from this string to List&amp;lt;String&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;2) using ListIterator remove all items not starting with J and items beginning with J replace with the same elements but without the J, for example, JFrame -&amp;gt; Frame&lt;br&gt;&lt;/p&gt;&lt;p&gt;3) print all the remaining elements in the reverse order.&lt;br&gt;&lt;/p&gt;</text>
                      <options id="4781">
                        <samples id="4782">
                          <Sample id="4783">&lt;input&gt;ImageButton JTextField JTextArea CheckBox JMenu&lt;/input&gt;&lt;output&gt;Menu
TextArea
TextField&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4784" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws IOException {
    // write your code here

}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4785" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4786">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4787" />
                    </block>
                    <actions class="linked-hash-map" id="4788">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4789">
                      <string>31-77-211866</string>
                      <string>30-77-211866</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>25</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.3125</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4790">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4791">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4792">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4793">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4794">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4795">
                  <id>61087</id>
                  <title>Iterator and Iterable # Iterable range</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-61087</progress>
                  <createDate id="4796">2017-11-13 19:15:35.0 UTC</createDate>
                  <updateDate id="4797">2018-02-18 08:38:11.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-61087-1</discussionProxy>
                  <discussionThreads id="4798">
                    <string>76-61087-1</string>
                  </discussionThreads>
                  <steps id="4799">
                    <long>240673</long>
                  </steps>
                  <actions class="linked-hash-map" id="4800" />
                  <tags id="4801" />
                  <requiredTags id="4802" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4803">
                    <string>31-76-61087</string>
                    <string>30-76-61087</string>
                  </subscriptions>
                  <viewedBy>19</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1612</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Iterator-and-Iterable-Iterable-range-61087</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-61087</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4804">
                <StepNode id="4805">
                  <parent class="LessonNode" reference="4790" />
                  <data class="Step" id="4806">
                    <id>240673</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-240673</progress>
                    <createDate id="4807">2017-11-13 20:46:07.0 UTC</createDate>
                    <updateDate id="4808">2018-02-18 08:38:11.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-240673-1</discussionProxy>
                    <discussionThreads id="4809">
                      <string>77-240673-1</string>
                      <string>77-240673-2</string>
                    </discussionThreads>
                    <lesson>61087</lesson>
                    <status>ready</status>
                    <block id="4810">
                      <name>code</name>
                      <text>&lt;p&gt;Given a class named &lt;code&gt;Range&lt;/code&gt;. It represents a range from A (inclusive) to B (exclusive). The class implements the interface &lt;code&gt;Iterable&lt;/code&gt;, therefore, an instance of &lt;code&gt;Range&lt;/code&gt; can be used in the for-each loop.  &lt;br&gt;&lt;/p&gt;&lt;p&gt;Write a body of the overridden method &lt;code&gt;iterator&lt;/code&gt; so that the following code works correctly:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;Range range = new Range(2, 6);&lt;br&gt;&lt;br&gt;for (Long val : range) {&lt;br&gt;    System.out.println(val);&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;It must print:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;2
3
4
5&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="4811">
                        <samples id="4812">
                          <Sample id="4813">&lt;input&gt;2 6&lt;/input&gt;&lt;output&gt;2
3
4
5&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4814" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Range implements Iterable&lt;Long&gt; {

    private long fromInclusive;
    private long toExclusive;

    public Range(long from, long to) {
        this.fromInclusive = from;
        this.toExclusive = to;
    }

    @Override
    public Iterator&lt;Long&gt; iterator() {
        // write your code here
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4815" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4816">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4817" />
                    </block>
                    <actions class="linked-hash-map" id="4818">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4819">
                      <string>31-77-240673</string>
                      <string>30-77-240673</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>19</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.358974358974359</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4820">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4821">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4822">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4823">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4824">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4825">
                  <id>60804</id>
                  <title>Queue and Stack # Which brackets are balanced</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60804</progress>
                  <createDate id="4826">2017-11-08 16:54:29.0 UTC</createDate>
                  <updateDate id="4827">2018-02-18 08:17:36.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-60804-1</discussionProxy>
                  <discussionThreads id="4828">
                    <string>76-60804-1</string>
                  </discussionThreads>
                  <steps id="4829">
                    <long>239358</long>
                  </steps>
                  <actions class="linked-hash-map" id="4830" />
                  <tags id="4831" />
                  <requiredTags id="4832" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4833">
                    <string>31-76-60804</string>
                    <string>30-76-60804</string>
                  </subscriptions>
                  <viewedBy>20</viewedBy>
                  <passedBy>10</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>3395</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Which-brackets-are-balanced-60804</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60804</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4834">
                <StepNode id="4835">
                  <parent class="LessonNode" reference="4820" />
                  <data class="Step" id="4836">
                    <id>239358</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239358</progress>
                    <createDate id="4837">2017-11-08 17:46:37.0 UTC</createDate>
                    <updateDate id="4838">2018-02-18 07:38:04.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-239358-1</discussionProxy>
                    <discussionThreads id="4839">
                      <string>77-239358-1</string>
                      <string>77-239358-2</string>
                    </discussionThreads>
                    <lesson>60804</lesson>
                    <status>ready</status>
                    <block id="4840">
                      <name>code</name>
                      <text>Given a string consisting of brackets, write a program to examine whether the pairs and the orders of &quot;{&quot;, &quot;}&quot;, &quot;(&quot;, &quot;)&quot;, &quot;[&quot;, &quot;]&quot; are correct (balanced). For example, the program should print &lt;code&gt;true&lt;/code&gt; for the string &lt;code&gt;[()]{}{[()()]()}&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;()[]}&lt;/code&gt;.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The classic algorithm for solving this problem relies on using a stack.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;create an instance of a stack;&lt;br&gt;&lt;/li&gt;&lt;li&gt;traverse the input string;&lt;ol&gt;&lt;li&gt;if the current character is a starting bracket &quot;(&quot; or &quot;{&quot; or &quot;{&quot; then push it to the stack;&lt;/li&gt;&lt;li&gt;if the current is a closing bracket &quot;)&quot; or &quot;}&quot; or &quot;]&quot; then remove (pop) the top element from the stack; if the popped bracket is the matching starting bracket then fine else parenthesis are not balanced;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;after completing traversal, if there are some starting brackets left in the stack, then the parenthesis are not balanced.&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="4841">
                        <samples id="4842">
                          <Sample id="4843">&lt;input&gt;([][])&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="4844">&lt;input&gt;([](){([])})&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="4845">&lt;input&gt;{{[()]]&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4846" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4847" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4848">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4849" />
                    </block>
                    <actions class="linked-hash-map" id="4850">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4851">
                      <string>31-77-239358</string>
                      <string>30-77-239358</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>20</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.25</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4852">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4853">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4854">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4855">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4856">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4857">
                  <id>60943</id>
                  <title>Queue and Stack # Getting the max element of a stack</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60943</progress>
                  <createDate id="4858">2017-11-10 17:50:40.0 UTC</createDate>
                  <updateDate id="4859">2018-02-18 08:13:58.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-60943-1</discussionProxy>
                  <discussionThreads id="4860">
                    <string>76-60943-1</string>
                  </discussionThreads>
                  <steps id="4861">
                    <long>239927</long>
                  </steps>
                  <actions class="linked-hash-map" id="4862" />
                  <tags id="4863" />
                  <requiredTags id="4864" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4865">
                    <string>31-76-60943</string>
                    <string>30-76-60943</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Queue-and-Stack-Getting-the-max-element-of-a-stack-60943</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60943</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4866">
                <StepNode id="4867">
                  <parent class="LessonNode" reference="4852" />
                  <data class="Step" id="4868">
                    <id>239927</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-239927</progress>
                    <createDate id="4869">2017-11-10 18:07:03.0 UTC</createDate>
                    <updateDate id="4870">2018-02-18 08:13:56.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-239927-1</discussionProxy>
                    <discussionThreads id="4871">
                      <string>77-239927-1</string>
                      <string>77-239927-2</string>
                    </discussionThreads>
                    <lesson>60943</lesson>
                    <status>ready</status>
                    <block id="4872">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program simulating a stack that can effectively return the current max element. Your program should read a sequence of commands of different types from the standard input.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;There are three types of commands:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;push v&lt;/b&gt; - add an element (v) to a top of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;pop&lt;/b&gt; - remove the top element of the stack;&lt;/li&gt;&lt;li&gt;&lt;b&gt;max&lt;/b&gt; - return the current max in the stack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The time complexity of these operations should not depend on the stack size (&lt;b&gt;&lt;/b&gt;&lt;b&gt;constant time, &lt;/b&gt;&lt;b&gt;O(1)&lt;/b&gt;).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Hint: &lt;/b&gt;you may use several standard stacks to write a solution.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the number of commands. Next lines contain one of the following commands:&lt;b&gt; push v, pop, max&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output the current max for each command &lt;b&gt;max&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="4873">
                        <samples id="4874">
                          <Sample id="4875">&lt;input&gt;5
push 2
push 1
max
pop
max
&lt;/input&gt;&lt;output&gt;2
2&lt;/output&gt;</Sample>
                          <Sample id="4876">&lt;input&gt;5
push 1
push 2
max
pop
max
&lt;/input&gt;&lt;output&gt;2
1&lt;/output&gt;</Sample>
                          <Sample id="4877">&lt;input&gt;10
push 2
push 3
push 9
push 7
push 2
max
max
max
pop
max
&lt;/input&gt;&lt;output&gt;9
9
9
9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4878" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4879" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4880">
                              <time>2</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4881" />
                    </block>
                    <actions class="linked-hash-map" id="4882">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4883">
                      <string>31-77-239927</string>
                      <string>30-77-239927</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.05063291139240506</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4884">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4885">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4886">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4887">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4888">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4889">
                  <id>66281</id>
                  <title>Insertion sort # The number of required shifts</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-66281</progress>
                  <createDate id="4890">2018-01-11 10:15:20.0 UTC</createDate>
                  <updateDate id="4891">2018-01-23 13:49:34.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-66281-1</discussionProxy>
                  <discussionThreads id="4892">
                    <string>76-66281-1</string>
                  </discussionThreads>
                  <steps id="4893">
                    <long>262389</long>
                  </steps>
                  <actions class="linked-hash-map" id="4894" />
                  <tags id="4895" />
                  <requiredTags id="4896" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4897">
                    <string>31-76-66281</string>
                    <string>30-76-66281</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>16</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>983</timeToComplete>
                  <coverUrl>https://ucarecdn.com/e360ad82-9f07-4d97-82eb-a3708dff30b1/-/scale_crop/180x180/center/</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Insertion-sort-The-number-of-required-shifts-66281</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-66281</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4898">
                <StepNode id="4899">
                  <parent class="LessonNode" reference="4884" />
                  <data class="Step" id="4900">
                    <id>262389</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-262389</progress>
                    <createDate id="4901">2018-01-12 03:07:53.0 UTC</createDate>
                    <updateDate id="4902">2018-01-13 14:01:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-262389-1</discussionProxy>
                    <discussionThreads id="4903">
                      <string>77-262389-1</string>
                    </discussionThreads>
                    <lesson>66281</lesson>
                    <status>ready</status>
                    <block id="4904">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that counts the number of required shifts to sort the numbers in the descending order using insertion sort.&lt;/p&gt;&lt;p&gt;By shift, we mean the case when we move elements in the sorted part to insert a new element. Another case is when a new element is added to the end of the sorted part without any shifts.&lt;/p&gt;&lt;p&gt;The following picture shows both the cases. We do not need any shifts to add 21 to the sorted part, but we must perform a shift to insert 24 in the sorted part.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://ucarecdn.com/aef8be5b-ed50-4c74-ac68-a935809ba289/&quot; title=&quot;Image: https://ucarecdn.com/aef8be5b-ed50-4c74-ac68-a935809ba289/&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Do not count the number of exchanges. You should count only the number of required shifts. An iteration may contain no more than one shift.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The first line contains the number of elements. The second line consists of elements separated by space.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Output one integer number - the number of required shifts.&lt;/p&gt;</text>
                      <options id="4905">
                        <samples id="4906">
                          <Sample id="4907">&lt;input&gt;5
50 40 30 10 20
&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                          <Sample id="4908">&lt;input&gt;5
30 40 20 5 10 &lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                          <Sample id="4909">&lt;input&gt;8
5 2 9 1 2 4 9 5&lt;/input&gt;&lt;output&gt;5&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4910" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4911" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4912">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4913" />
                    </block>
                    <actions class="linked-hash-map" id="4914">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4915">
                      <string>31-77-262389</string>
                      <string>30-77-262389</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.32727272727272727</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4916">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4917">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4918">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4919">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4920">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4921">
                  <id>80548</id>
                  <title>Strategy # Max and Min</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-80548</progress>
                  <createDate id="4922">2018-03-30 03:22:09.0 UTC</createDate>
                  <updateDate id="4923">2018-03-31 04:58:52.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-80548-1</discussionProxy>
                  <discussionThreads id="4924">
                    <string>76-80548-1</string>
                  </discussionThreads>
                  <steps id="4925">
                    <long>301178</long>
                  </steps>
                  <actions class="linked-hash-map" id="4926" />
                  <tags id="4927" />
                  <requiredTags id="4928" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4929">
                    <string>31-76-80548</string>
                    <string>30-76-80548</string>
                  </subscriptions>
                  <viewedBy>10</viewedBy>
                  <passedBy>6</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Strategy-Max-and-Min-80548</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-80548</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4930">
                <StepNode id="4931">
                  <parent class="LessonNode" reference="4916" />
                  <data class="Step" id="4932">
                    <id>301178</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-301178</progress>
                    <createDate id="4933">2018-03-30 17:30:04.0 UTC</createDate>
                    <updateDate id="4934">2018-03-31 03:53:55.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-301178-1</discussionProxy>
                    <discussionThreads id="4935">
                      <string>77-301178-1</string>
                      <string>77-301178-2</string>
                    </discussionThreads>
                    <lesson>80548</lesson>
                    <status>ready</status>
                    <block id="4936">
                      <name>code</name>
                      <text>&lt;p&gt;Use the strategy pattern to implement algorithms to find max and min values in a given array. The basic structure of provided classes is described below. You should complete it.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The class &lt;code&gt;Finder&lt;/code&gt; represents the general finding algorithm itself. It works according to the specified strategy.&lt;/p&gt;&lt;p&gt;The interface &lt;code&gt;FindingStrategy&lt;/code&gt; provides two methods to write new concrete finding strategies: &lt;code&gt;takeOne&lt;/code&gt; to get the next value and &lt;code&gt;getDefaultValue&lt;/code&gt; to return a value if nothing was found (the given array is empty). Strategies define only the specific details of the finding algorithm.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Please, do not change the interface &lt;code&gt;FindingStrategy&lt;/code&gt;, and do not rename existing methods.&lt;/p&gt;&lt;p&gt;If the array is empty, the &lt;code&gt;Finder&lt;/code&gt; should return &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; in case of finding the min value and &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; in case of finding the max value.&lt;/p&gt;&lt;p&gt;&lt;b&gt;HINT: &lt;/b&gt;t&lt;b&gt;&lt;/b&gt;tests 1-5 check &lt;code&gt;MinFindingStrategy&lt;/code&gt;, tests 6-10 check &lt;code&gt;MaxFindingStrategy&lt;/code&gt;. Do not forget to check your solution when the passed array has the size 0 or 1.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="4937">
                        <samples id="4938" />
                        <codeTemplates class="LinkedTreeMap" id="4939" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Finder {

    private FindingStrategy strategy;

    public Finder(FindingStrategy strategy) {
        // write your code here
    }

    /**
     * It performs the search algorithm according to the given strategy
     */ 
    public int find(int[] numbers) {
        return 0; // write your code here
    }
}


interface FindingStrategy {

    /**
     * Returns one of two values
     */ 
    int takeOne(int elem1, int elem2);

    /**
     * Returns the default value of a concrete implementation
     */ 
    int getDefaultValue();
}

class MaxFindingStrategy implements FindingStrategy {

    public int takeOne(int elem1, int elem2) {
        return 0; // write your code here
    }

    public int getDefaultValue() {
        return 0; // write your code here
    }
}

class MinFindingStrategy implements FindingStrategy {

    public int takeOne(int elem1, int elem2) {
        return 0; // write your code here
    }

    public int getDefaultValue() {
        return 0; // write your code here
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4940" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="4941">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4942" />
                    </block>
                    <actions class="linked-hash-map" id="4943">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4944">
                      <string>31-77-301178</string>
                      <string>30-77-301178</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>10</viewedBy>
                    <passedBy>6</passedBy>
                    <correctRatio>0.4444444444444444</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4945">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4946">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4947">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4948">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4949">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4950">
                  <id>60088</id>
                  <title>String # Check burgs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60088</progress>
                  <createDate id="4951">2017-10-31 15:17:38.0 UTC</createDate>
                  <updateDate id="4952">2018-02-04 14:40:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60088-1</discussionProxy>
                  <discussionThreads id="4953">
                    <string>76-60088-1</string>
                  </discussionThreads>
                  <steps id="4954">
                    <long>237070</long>
                  </steps>
                  <actions class="linked-hash-map" id="4955" />
                  <tags id="4956" />
                  <requiredTags id="4957" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4958">
                    <string>31-76-60088</string>
                    <string>30-76-60088</string>
                  </subscriptions>
                  <viewedBy>74</viewedBy>
                  <passedBy>59</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>338</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-Check-burgs-60088</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60088</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4959">
                <StepNode id="4960">
                  <parent class="LessonNode" reference="4945" />
                  <data class="Step" id="4961">
                    <id>237070</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-237070</progress>
                    <createDate id="4962">2017-10-31 15:55:41.0 UTC</createDate>
                    <updateDate id="4963">2018-02-04 14:34:13.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-237070-1</discussionProxy>
                    <discussionThreads id="4964">
                      <string>77-237070-1</string>
                      <string>77-237070-2</string>
                    </discussionThreads>
                    <lesson>60088</lesson>
                    <status>ready</status>
                    <block id="4965">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that reads the name of a city and check the name ends with &lt;/span&gt;&lt;b&gt;&quot;burg&quot;&lt;/b&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Keep in mind, a city can have a short name.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The program should output &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="4966">
                        <samples id="4967">
                          <Sample id="4968">&lt;input&gt;Brandenburg&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="4969">&lt;input&gt;Saint Petersburg&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="4970">&lt;input&gt;Tu&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="4971" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="4972" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="4973">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="4974" />
                    </block>
                    <actions class="linked-hash-map" id="4975">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="4976">
                      <string>31-77-237070</string>
                      <string>30-77-237070</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>74</viewedBy>
                    <passedBy>59</passedBy>
                    <correctRatio>0.24919093851132687</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="4977">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="4978">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="4979">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="4980">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="4981">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="4982">
                  <id>60086</id>
                  <title>String # Extracting a substring</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60086</progress>
                  <createDate id="4983">2017-10-31 15:17:26.0 UTC</createDate>
                  <updateDate id="4984">2018-02-04 14:42:46.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60086-1</discussionProxy>
                  <discussionThreads id="4985">
                    <string>76-60086-1</string>
                  </discussionThreads>
                  <steps id="4986">
                    <long>237062</long>
                  </steps>
                  <actions class="linked-hash-map" id="4987" />
                  <tags id="4988" />
                  <requiredTags id="4989" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="4990">
                    <string>31-76-60086</string>
                    <string>30-76-60086</string>
                  </subscriptions>
                  <viewedBy>68</viewedBy>
                  <passedBy>54</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>331</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-Extracting-a-substring-60086</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60086</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="4991">
                <StepNode id="4992">
                  <parent class="LessonNode" reference="4977" />
                  <data class="Step" id="4993">
                    <id>237062</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-237062</progress>
                    <createDate id="4994">2017-10-31 15:28:09.0 UTC</createDate>
                    <updateDate id="4995">2018-02-04 14:31:34.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-237062-1</discussionProxy>
                    <discussionThreads id="4996">
                      <string>77-237062-1</string>
                      <string>77-237062-2</string>
                    </discussionThreads>
                    <lesson>60086</lesson>
                    <status>ready</status>
                    <block id="4997">
                      <name>code</name>
                      <text>Given a string and two integer numbers. Output the substring enclosed in this range (inclusive). It's guaranteed that both numbers greater than or equals to 0 and less than the string length.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A string in one line and two numbers in another line.&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The substring&lt;/div&gt;</text>
                      <options id="4998">
                        <samples id="4999" />
                        <codeTemplates class="LinkedTreeMap" id="5000" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5001" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5002">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5003" />
                    </block>
                    <actions class="linked-hash-map" id="5004">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5005">
                      <string>31-77-237062</string>
                      <string>30-77-237062</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>68</viewedBy>
                    <passedBy>54</passedBy>
                    <correctRatio>0.3389830508474576</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5006">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5007">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5008">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5009">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5010">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5011">
                  <id>60087</id>
                  <title>String # Check prefix ignoring the case</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60087</progress>
                  <createDate id="5012">2017-10-31 15:17:32.0 UTC</createDate>
                  <updateDate id="5013">2018-02-04 14:32:50.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60087-1</discussionProxy>
                  <discussionThreads id="5014">
                    <string>76-60087-1</string>
                  </discussionThreads>
                  <steps id="5015">
                    <long>237065</long>
                  </steps>
                  <actions class="linked-hash-map" id="5016" />
                  <tags id="5017" />
                  <requiredTags id="5018" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5019">
                    <string>31-76-60087</string>
                    <string>30-76-60087</string>
                  </subscriptions>
                  <viewedBy>71</viewedBy>
                  <passedBy>60</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>211</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-Check-prefix-ignoring-the-case-60087</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60087</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5020">
                <StepNode id="5021">
                  <parent class="LessonNode" reference="5006" />
                  <data class="Step" id="5022">
                    <id>237065</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-237065</progress>
                    <createDate id="5023">2017-10-31 15:40:34.0 UTC</createDate>
                    <updateDate id="5024">2018-02-04 14:32:49.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-237065-1</discussionProxy>
                    <discussionThreads id="5025">
                      <string>77-237065-1</string>
                      <string>77-237065-2</string>
                    </discussionThreads>
                    <lesson>60087</lesson>
                    <status>ready</status>
                    <block id="5026">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that checks a given string starts with the prefix &lt;/span&gt;&lt;b&gt;&quot;J&quot;&lt;/b&gt;&lt;span&gt; ignoring the case.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The program should output &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;false&lt;/b&gt;.&lt;/p&gt;</text>
                      <options id="5027">
                        <samples id="5028">
                          <Sample id="5029">&lt;input&gt;Java&lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="5030">&lt;input&gt;Kotlin&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5031" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5032" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5033">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5034" />
                    </block>
                    <actions class="linked-hash-map" id="5035">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5036">
                      <string>31-77-237065</string>
                      <string>30-77-237065</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>71</viewedBy>
                    <passedBy>60</passedBy>
                    <correctRatio>0.3988439306358382</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5037">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5038">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5039">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5040">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5041">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5042">
                  <id>60091</id>
                  <title>String # Comparing strings ignoring whitespaces</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60091</progress>
                  <createDate id="5043">2017-10-31 15:17:56.0 UTC</createDate>
                  <updateDate id="5044">2018-02-04 14:39:06.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-60091-1</discussionProxy>
                  <discussionThreads id="5045">
                    <string>76-60091-1</string>
                  </discussionThreads>
                  <steps id="5046">
                    <long>237077</long>
                  </steps>
                  <actions class="linked-hash-map" id="5047" />
                  <tags id="5048" />
                  <requiredTags id="5049" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5050">
                    <string>31-76-60091</string>
                    <string>30-76-60091</string>
                  </subscriptions>
                  <viewedBy>68</viewedBy>
                  <passedBy>56</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>231</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-Comparing-strings-ignoring-whitespaces-60091</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>2</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60091</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5051">
                <StepNode id="5052">
                  <parent class="LessonNode" reference="5037" />
                  <data class="Step" id="5053">
                    <id>237077</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-237077</progress>
                    <createDate id="5054">2017-10-31 16:20:09.0 UTC</createDate>
                    <updateDate id="5055">2018-02-04 14:39:05.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-237077-1</discussionProxy>
                    <discussionThreads id="5056">
                      <string>77-237077-1</string>
                      <string>77-237077-2</string>
                    </discussionThreads>
                    <lesson>60091</lesson>
                    <status>ready</status>
                    <block id="5057">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a program that reads two strings and compares them without whitespaces. The program should prints &lt;/span&gt;&lt;b&gt;true&lt;/b&gt;&lt;span&gt; if both strings are equal, otherwise - &lt;/span&gt;&lt;b&gt;false&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;</text>
                      <options id="5058">
                        <samples id="5059">
                          <Sample id="5060">&lt;input&gt;  string
str ing &lt;/input&gt;&lt;output&gt;true&lt;/output&gt;</Sample>
                          <Sample id="5061">&lt;input&gt;string
my string&lt;/input&gt;&lt;output&gt;false&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5062" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5063" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5064">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5065" />
                    </block>
                    <actions class="linked-hash-map" id="5066">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5067">
                      <string>31-77-237077</string>
                      <string>30-77-237077</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>68</viewedBy>
                    <passedBy>56</passedBy>
                    <correctRatio>0.425531914893617</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5068">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5069">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5070">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5071">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5072">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5073">
                  <id>60089</id>
                  <title>String # Replacing 'a' with 'b'</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-60089</progress>
                  <createDate id="5074">2017-10-31 15:17:44.0 UTC</createDate>
                  <updateDate id="5075">2018-02-04 14:36:30.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-60089-1</discussionProxy>
                  <discussionThreads id="5076">
                    <string>76-60089-1</string>
                  </discussionThreads>
                  <steps id="5077">
                    <long>237072</long>
                  </steps>
                  <actions class="linked-hash-map" id="5078" />
                  <tags id="5079" />
                  <requiredTags id="5080" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5081">
                    <string>31-76-60089</string>
                    <string>30-76-60089</string>
                  </subscriptions>
                  <viewedBy>73</viewedBy>
                  <passedBy>57</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>142</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>String-Replacing-a-with-b-60089</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-60089</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5082">
                <StepNode id="5083">
                  <parent class="LessonNode" reference="5068" />
                  <data class="Step" id="5084">
                    <id>237072</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-237072</progress>
                    <createDate id="5085">2017-10-31 16:07:10.0 UTC</createDate>
                    <updateDate id="5086">2018-02-04 14:36:00.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-237072-1</discussionProxy>
                    <discussionThreads id="5087">
                      <string>77-237072-1</string>
                      <string>77-237072-2</string>
                    </discussionThreads>
                    <lesson>60089</lesson>
                    <status>ready</status>
                    <block id="5088">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Write a program that reads a string and replaces all occurrences of the &lt;/span&gt;letter &lt;code&gt;'a'&lt;/code&gt; with&lt;span&gt; the &lt;/span&gt;letter &lt;code&gt;'b'&lt;/code&gt;.&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;The program should output the resulting string.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="5089">
                        <samples id="5090">
                          <Sample id="5091">&lt;input&gt;aaa&lt;/input&gt;&lt;output&gt;bbb&lt;/output&gt;</Sample>
                          <Sample id="5092">&lt;input&gt;bca&lt;/input&gt;&lt;output&gt;bcb&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5093" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5094" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5095">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5096" />
                    </block>
                    <actions class="linked-hash-map" id="5097">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5098">
                      <string>31-77-237072</string>
                      <string>30-77-237072</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>73</viewedBy>
                    <passedBy>57</passedBy>
                    <correctRatio>0.5537190082644629</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5099">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5100">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5101">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5102">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5103">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5104">
                  <id>55955</id>
                  <title>Conditional statement # Symmetrical number</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-55955</progress>
                  <createDate id="5105">2017-09-12 14:45:10.0 UTC</createDate>
                  <updateDate id="5106">2018-02-12 16:22:21.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-55955-1</discussionProxy>
                  <discussionThreads id="5107">
                    <string>76-55955-1</string>
                  </discussionThreads>
                  <steps id="5108">
                    <long>206826</long>
                  </steps>
                  <actions class="linked-hash-map" id="5109" />
                  <tags id="5110" />
                  <requiredTags id="5111" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5112">
                    <string>31-76-55955</string>
                    <string>30-76-55955</string>
                  </subscriptions>
                  <viewedBy>84</viewedBy>
                  <passedBy>61</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1126</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Conditional-statement-Symmetrical-number-55955</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-55955</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5113">
                <StepNode id="5114">
                  <parent class="LessonNode" reference="5099" />
                  <data class="Step" id="5115">
                    <id>206826</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206826</progress>
                    <createDate id="5116">2017-08-01 15:02:02.0 UTC</createDate>
                    <updateDate id="5117">2018-02-12 16:22:21.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206826-1</discussionProxy>
                    <discussionThreads id="5118">
                      <string>77-206826-1</string>
                      <string>77-206826-2</string>
                    </discussionThreads>
                    <lesson>55955</lesson>
                    <status>ready</status>
                    <block id="5119">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a four-digit number. Determine whether its decimal notation
is symmetric. If the number is symmetrical, output 1, otherwise output any
other integer. The number may have less than four digits, then you should
assume that its decimal notation is complemented by insignificant zeros on the
left.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="5120">
                        <samples id="5121">
                          <Sample id="5122">&lt;input&gt;2002&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                          <Sample id="5123">&lt;input&gt;2008&lt;/input&gt;&lt;output&gt;37&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5124" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5125" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5126">
                              <time>1</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5127" />
                    </block>
                    <actions class="linked-hash-map" id="5128">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5129">
                      <string>31-77-206826</string>
                      <string>30-77-206826</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>84</viewedBy>
                    <passedBy>61</passedBy>
                    <correctRatio>0.23703703703703705</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5130">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5131">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5132">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5133">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5134">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5135">
                  <id>79410</id>
                  <title>Encapsulating object creation # Motor static factory</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-79410</progress>
                  <createDate id="5136">2018-03-26 15:22:39.0 UTC</createDate>
                  <updateDate id="5137">2018-03-27 09:27:18.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-79410-1</discussionProxy>
                  <discussionThreads id="5138">
                    <string>76-79410-1</string>
                  </discussionThreads>
                  <steps id="5139">
                    <long>298576</long>
                  </steps>
                  <actions class="linked-hash-map" id="5140" />
                  <tags id="5141" />
                  <requiredTags id="5142" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5143">
                    <string>31-76-79410</string>
                    <string>30-76-79410</string>
                  </subscriptions>
                  <viewedBy>14</viewedBy>
                  <passedBy>11</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1154</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Encapsulating-object-creation-Motor-static-factory-79410</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-79410</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5144">
                <StepNode id="5145">
                  <parent class="LessonNode" reference="5130" />
                  <data class="Step" id="5146">
                    <id>298576</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-298576</progress>
                    <createDate id="5147">2018-03-26 18:29:51.0 UTC</createDate>
                    <updateDate id="5148">2018-03-27 09:27:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-298576-1</discussionProxy>
                    <discussionThreads id="5149">
                      <string>77-298576-1</string>
                      <string>77-298576-2</string>
                    </discussionThreads>
                    <lesson>79410</lesson>
                    <status>ready</status>
                    <block id="5150">
                      <name>code</name>
                      <text>&lt;p&gt;You must implement the static method &lt;code&gt;make&lt;/code&gt; of the &lt;code&gt;MotorStaticFactory&lt;/code&gt; that produces motors of different types. The method takes three parameters: the &lt;code&gt;type&lt;/code&gt; of a motor as a character, &lt;code&gt;model&lt;/code&gt; as a string, and &lt;code&gt;power&lt;/code&gt; as a long number. It should return a new motor according to the &lt;code&gt;type&lt;/code&gt; with initialized fields.&lt;/p&gt;&lt;p&gt;Here is the following correspondence between the passed type and the class of the motor: &lt;code&gt;'P'&lt;/code&gt; - pneumatic, &lt;code&gt;'H'&lt;/code&gt; - hydraulic, &lt;code&gt;'E'&lt;/code&gt; - electric, &lt;code&gt;'W'&lt;/code&gt; - warp. Ignore the case when creating motors, i.e. &lt;code&gt;'p'&lt;/code&gt; must work as well as &lt;code&gt;'P'&lt;/code&gt;. If an invalid character is given, the method should return &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Please, do not change the provided code of the motor classes.&lt;/p&gt;</text>
                      <options id="5151">
                        <samples id="5152" />
                        <codeTemplates class="LinkedTreeMap" id="5153" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class MotorStaticFactory {

    /**
     * It returns an initialized motor according to the specified type by the first chacater: 
     * 'P' or 'p' - pneumatic, 'H' or 'h' - hydraulic, 'E' or 'e' - electric, 'W' or 'w' - warp.
     */
    public static Motor make(char type, String model, long power) {
        return null;
    }
}

abstract class Motor {

    String model;
    long power;

    public Motor(String model, long power) {
        this.model = model;
        this.power = power;
    }
}

class PneumaticMotor extends Motor {

    public PneumaticMotor(String model, long power) {
        super(model, power);
    }
}

class HydraulicMotor extends Motor {

    public HydraulicMotor(String model, long power) {
        super(model, power);
    }
}

class ElectricMotor extends Motor {

    public ElectricMotor(String model, long power) {
        super(model, power);
    }
}

class WarpDrive extends Motor {

    public WarpDrive(String model, long power) {
        super(model, power);
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5154" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="5155">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5156" />
                    </block>
                    <actions class="linked-hash-map" id="5157">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5158">
                      <string>31-77-298576</string>
                      <string>30-77-298576</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>14</viewedBy>
                    <passedBy>11</passedBy>
                    <correctRatio>0.30434782608695654</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5159">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5160">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5161">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5162">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5163">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5164">
                  <id>79658</id>
                  <title>Encapsulating object creation # Static factory methods for Time</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-79658</progress>
                  <createDate id="5165">2018-03-27 15:39:53.0 UTC</createDate>
                  <updateDate id="5166">2018-03-27 17:43:56.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-79658-1</discussionProxy>
                  <discussionThreads id="5167">
                    <string>76-79658-1</string>
                  </discussionThreads>
                  <steps id="5168">
                    <long>299015</long>
                  </steps>
                  <actions class="linked-hash-map" id="5169" />
                  <tags id="5170" />
                  <requiredTags id="5171" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5172">
                    <string>31-76-79658</string>
                    <string>30-76-79658</string>
                  </subscriptions>
                  <viewedBy>13</viewedBy>
                  <passedBy>10</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>2232</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Encapsulating-object-creation-Static-factory-methods-for-Time-79658</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-79658</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5173">
                <StepNode id="5174">
                  <parent class="LessonNode" reference="5159" />
                  <data class="Step" id="5175">
                    <id>299015</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-299015</progress>
                    <createDate id="5176">2018-03-27 16:16:41.0 UTC</createDate>
                    <updateDate id="5177">2018-03-27 17:43:55.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-299015-1</discussionProxy>
                    <discussionThreads id="5178">
                      <string>77-299015-1</string>
                      <string>77-299015-2</string>
                    </discussionThreads>
                    <lesson>79658</lesson>
                    <status>ready</status>
                    <block id="5179">
                      <name>code</name>
                      <text>&lt;div&gt;The normal way to create an instance of a class is to use a public constructor of the class. But there is another technique exist. A class can provide a public static factory method which returns an instance of the class. An advantage of static factory methods is that they have names that make code easier to read.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In this problem, you have the class &lt;code&gt;Time&lt;/code&gt; containing three fields: &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt;. You must implement the following static factory methods of this class:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;noon()&lt;/code&gt; returns an instance initialized with 12 hours, 0 minutes, and 0 seconds.&lt;/li&gt;&lt;li&gt;&lt;code&gt;midnight()&lt;/code&gt; return an instance initialized with 0 hours, 0 minutes, and 0 seconds.&lt;/li&gt;&lt;li&gt;&lt;code&gt;of(int hour, int minute, int second)&lt;/code&gt; returns an instance initialized with passed hour, minute and second if the passed arguments are correct (hour: 0-23, minute: 0-59, seconds: 0-59), otherwise, &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ofSeconds(long seconds)&lt;/code&gt; returns an instance initialized with seconds passed since the midnight; as an example, the invocation &lt;code&gt;Time.ofSeconds(500000)&lt;/code&gt; must create an instance with 18 hours, 53 minutes and 20 seconds (days are skipped);&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As you can see, the methods are more readable than the same constructors. If you want to create an instance of &lt;code&gt;Time&lt;/code&gt; representing noon, you can write:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;Time noon = Time.noon();&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;do not change fields of the class &lt;code&gt;Time&lt;/code&gt;;&lt;/li&gt;&lt;li&gt;in a real application, it may be better to throw an exception than return &lt;code&gt;null&lt;/code&gt; when arguments are incorrect.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You must not read or output something in this problem. Just implement the static factory methods.&lt;/p&gt;&lt;/div&gt;</text>
                      <options id="5180">
                        <samples id="5181">
                          <Sample id="5182">&lt;input&gt;noon&lt;/input&gt;&lt;output&gt;12 0 0&lt;/output&gt;</Sample>
                          <Sample id="5183">&lt;input&gt;midnight&lt;/input&gt;&lt;output&gt;0 0 0&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5184" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <string>class Time {

    int hour;
    int minute;
    int second;

    public static Time noon() {
        return null;
    }

    public static Time midnight() {
        return null;
    }

    public static Time ofSeconds(long seconds) {
        return null;
    }

    public static Time of(int hour, int minute, int second) {
        return null;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5185" resolves-to="linked-hash-map">
                          <entry>
                            <string>java9</string>
                            <Limit id="5186">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5187" />
                    </block>
                    <actions class="linked-hash-map" id="5188">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5189">
                      <string>31-77-299015</string>
                      <string>30-77-299015</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>13</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.203125</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>invalid</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5190">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5191">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5192">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5193">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5194">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5195">
                  <id>56138</id>
                  <title>Map # Spell checker</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56138</progress>
                  <createDate id="5196">2017-09-12 14:46:18.0 UTC</createDate>
                  <updateDate id="5197">2018-03-25 10:58:03.0 UTC</updateDate>
                  <discussionsCount>2</discussionsCount>
                  <discussionProxy>76-56138-1</discussionProxy>
                  <discussionThreads id="5198">
                    <string>76-56138-1</string>
                  </discussionThreads>
                  <steps id="5199">
                    <long>216408</long>
                  </steps>
                  <actions class="linked-hash-map" id="5200" />
                  <tags id="5201" />
                  <requiredTags id="5202" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5203">
                    <string>31-76-56138</string>
                    <string>30-76-56138</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>10</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1669</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Spell-checker-56138</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56138</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5204">
                <StepNode id="5205">
                  <parent class="LessonNode" reference="5190" />
                  <data class="Step" id="5206">
                    <id>216408</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216408</progress>
                    <createDate id="5207">2017-09-04 11:59:38.0 UTC</createDate>
                    <updateDate id="5208">2018-03-25 10:58:02.0 UTC</updateDate>
                    <discussionsCount>2</discussionsCount>
                    <discussionProxy>77-216408-1</discussionProxy>
                    <discussionThreads id="5209">
                      <string>77-216408-1</string>
                    </discussionThreads>
                    <lesson>56138</lesson>
                    <status>ready</status>
                    <block id="5210">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;The simplest spell checker is based on a list of known words.
Every word in the checked text is searched for in this list and, if such a word
was not found, it is marked as erroneous.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Write this spell checker.&lt;/p&gt;

&lt;p&gt;The first line of the input contains $d$ – number of records in
the list of known word. Next go $d$ lines contain one known word per line, next
— the number $l$ of lines of the text, after which — $l$ lines of the text.&lt;/p&gt;

&lt;p&gt;Write a program that outputs those words from the text, which are
not found in the dictionary (i.e. erroneous). Your spell checker should be case
insensitive. The words are entered in an arbitrary order. Words, which are not
found in the dictionary, should not be duplicated in the output.&lt;/p&gt;</text>
                      <options id="5211">
                        <samples id="5212">
                          <Sample id="5213">&lt;input&gt;3
a
bb
cCc
2
a bb aab aba ccc
c bb aaa&lt;/input&gt;&lt;output&gt;aaa
aba
aab
c&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5214" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5215" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5216">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5217" />
                    </block>
                    <actions class="linked-hash-map" id="5218">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5219">
                      <string>31-77-216408</string>
                      <string>30-77-216408</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.3333333333333333</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5220">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5221">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5222">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5223">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5224">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5225">
                  <id>56136</id>
                  <title>Map # Processing maps - 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56136</progress>
                  <createDate id="5226">2017-09-12 14:46:17.0 UTC</createDate>
                  <updateDate id="5227">2018-02-18 09:07:39.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56136-1</discussionProxy>
                  <discussionThreads id="5228">
                    <string>76-56136-1</string>
                  </discussionThreads>
                  <steps id="5229">
                    <long>211714</long>
                  </steps>
                  <actions class="linked-hash-map" id="5230" />
                  <tags id="5231" />
                  <requiredTags id="5232" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5233">
                    <string>31-76-56136</string>
                    <string>30-76-56136</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>8</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Processing-maps-2-56136</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56136</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5234">
                <StepNode id="5235">
                  <parent class="LessonNode" reference="5220" />
                  <data class="Step" id="5236">
                    <id>211714</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-211714</progress>
                    <createDate id="5237">2017-08-26 13:27:13.0 UTC</createDate>
                    <updateDate id="5238">2018-02-18 09:07:38.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-211714-1</discussionProxy>
                    <discussionThreads id="5239">
                      <string>77-211714-1</string>
                    </discussionThreads>
                    <lesson>56136</lesson>
                    <status>ready</status>
                    <block id="5240">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Modify and return the given map as follows: &lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;if the first key % 2 != 0 return sub map from First Key inclusive to FirstKey+4 inclusive in descending order&lt;br&gt;&lt;/li&gt;&lt;li&gt;else return sub map from LastKey-4 inclusive to the Last Key inclusive in descending order&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="5241">
                        <samples id="5242">
                          <Sample id="5243">&lt;input&gt;1:one 2:two 3:three 4:four 5:five 6:six 7:seven&lt;/input&gt;&lt;output&gt;5 : five
4 : four
3 : three
2 : two
1 : one&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5244" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static NavigableMap&lt;Integer, String&gt; getSubMap(NavigableMap&lt;Integer, String&gt; map){


    return map;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5245" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5246">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5247" />
                    </block>
                    <actions class="linked-hash-map" id="5248">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5249">
                      <string>31-77-211714</string>
                      <string>30-77-211714</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>16</viewedBy>
                    <passedBy>8</passedBy>
                    <correctRatio>0.11904761904761904</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5250">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5251">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5252">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5253">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5254">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5255">
                  <id>58306</id>
                  <title>Basics of multithreading # Message notifier as a thread</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58306</progress>
                  <createDate id="5256">2017-10-07 15:37:04.0 UTC</createDate>
                  <updateDate id="5257">2018-04-14 16:10:02.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-58306-1</discussionProxy>
                  <discussionThreads id="5258">
                    <string>76-58306-1</string>
                  </discussionThreads>
                  <steps id="5259">
                    <long>229451</long>
                  </steps>
                  <actions class="linked-hash-map" id="5260" />
                  <tags id="5261" />
                  <requiredTags id="5262" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5263">
                    <string>31-76-58306</string>
                    <string>30-76-58306</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>249</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Message-notifier-as-a-thread-58306</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58306</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5264">
                <StepNode id="5265">
                  <parent class="LessonNode" reference="5250" />
                  <data class="Step" id="5266">
                    <id>229451</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229451</progress>
                    <createDate id="5267">2017-10-07 16:15:54.0 UTC</createDate>
                    <updateDate id="5268">2018-04-14 16:10:02.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-229451-1</discussionProxy>
                    <discussionThreads id="5269">
                      <string>77-229451-1</string>
                      <string>77-229451-2</string>
                    </discussionThreads>
                    <lesson>58306</lesson>
                    <status>ready</status>
                    <block id="5270">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a service that takes a message and the number of repeating as constructor parameters and prints the message in the standard output the specified number of times.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template for your class.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The testing system will start the service as a regular thread.&lt;/div&gt;</text>
                      <options id="5271">
                        <samples id="5272">
                          <Sample id="5273">&lt;input&gt;Hello, Marry
3&lt;/input&gt;&lt;output&gt;Hello, Marry
Hello, Marry
Hello, Marry&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5274" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class MessageNotifier extends Thread {

    // write fields to store variables here

    public MessageNotifier(String msg, int repeats) {
        // implement the constructor
    }

    @Override
    public void run() {
        // implement the method to print the message sroted in a field
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5275" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5276">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5277" />
                    </block>
                    <actions class="linked-hash-map" id="5278">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5279">
                      <string>31-77-229451</string>
                      <string>30-77-229451</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.325</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5280">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5281">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5282">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5283">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5284">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5285">
                  <id>64941</id>
                  <title>Interface # Compact strings with AsciiCharSequence</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-64941</progress>
                  <createDate id="5286">2017-12-24 12:22:52.0 UTC</createDate>
                  <updateDate id="5287">2018-02-13 17:43:49.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-64941-1</discussionProxy>
                  <discussionThreads id="5288">
                    <string>76-64941-1</string>
                  </discussionThreads>
                  <steps id="5289">
                    <long>255001</long>
                  </steps>
                  <actions class="linked-hash-map" id="5290" />
                  <tags id="5291" />
                  <requiredTags id="5292" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5293">
                    <string>31-76-64941</string>
                    <string>30-76-64941</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1658</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Interface-Compact-strings-with-AsciiCharSequence-64941</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>1</abuseCount>
                  <vote>76-64941</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5294">
                <StepNode id="5295">
                  <parent class="LessonNode" reference="5280" />
                  <data class="Step" id="5296">
                    <id>255001</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-255001</progress>
                    <createDate id="5297">2017-12-24 12:42:48.0 UTC</createDate>
                    <updateDate id="5298">2017-12-24 12:51:54.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-255001-1</discussionProxy>
                    <discussionThreads id="5299">
                      <string>77-255001-1</string>
                      <string>77-255001-2</string>
                    </discussionThreads>
                    <lesson>64941</lesson>
                    <status>ready</status>
                    <block id="5300">
                      <name>code</name>
                      <text>Write a class named &lt;code&gt;AsciiCharSequence&lt;/code&gt; that implements compact storage ASCII-character sequences. Their codes can be stored in one single byte, unlike Unicode characters.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In comparison with the standard &lt;code&gt;String&lt;/code&gt; class, your class will require twice less memory (before Java 9).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The class &lt;code&gt;AsciiCharSequence&lt;/code&gt; must:&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;implement the interface &lt;code&gt;java.lang.CharSequence&lt;/code&gt;;&lt;br&gt;&lt;/li&gt;&lt;li&gt;have a constructor that takes a byte array;&lt;br&gt;&lt;/li&gt;&lt;li&gt;define methods &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;charAt&lt;/code&gt;, &lt;code&gt;subSequence&lt;/code&gt;, and &lt;code&gt;toString&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The declaration of methods and their behaviour see in the desription of &lt;code&gt;java.lang.CharSequence&lt;/code&gt; (JavaDoc or sources).&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; the testing system, will always pass correct input parameters to overridden methods.&lt;/p&gt;&lt;p&gt;P.S. The feature is supported since Java 9 in standard strings. For details, see: &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.baeldung.com/java-9-compact-string&quot;&gt;http://www.baeldung.com/java-9-compact-string&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</text>
                      <options id="5301">
                        <samples id="5302" />
                        <codeTemplates class="LinkedTreeMap" id="5303" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public class AsciiCharSequence /* extends/implements */ {
    // implementation
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5304" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5305">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5306" />
                    </block>
                    <actions class="linked-hash-map" id="5307">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5308">
                      <string>31-77-255001</string>
                      <string>30-77-255001</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.21296296296296297</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5309">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5310">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5311">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5312">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5313">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5314">
                  <id>62460</id>
                  <title>LocalDateTime # Whole hours between two date-time pairs</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-62460</progress>
                  <createDate id="5315">2017-11-28 11:02:40.0 UTC</createDate>
                  <updateDate id="5316">2018-01-25 07:12:03.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-62460-1</discussionProxy>
                  <discussionThreads id="5317">
                    <string>76-62460-1</string>
                  </discussionThreads>
                  <steps id="5318">
                    <long>245956</long>
                  </steps>
                  <actions class="linked-hash-map" id="5319" />
                  <tags id="5320" />
                  <requiredTags id="5321" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5322">
                    <string>31-76-62460</string>
                    <string>30-76-62460</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>16</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1866</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>LocalDateTime-Whole-hours-between-two-date-time-pairs-62460</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-62460</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5323">
                <StepNode id="5324">
                  <parent class="LessonNode" reference="5309" />
                  <data class="Step" id="5325">
                    <id>245956</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-245956</progress>
                    <createDate id="5326">2017-11-28 11:06:10.0 UTC</createDate>
                    <updateDate id="5327">2017-11-28 11:25:26.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-245956-1</discussionProxy>
                    <discussionThreads id="5328">
                      <string>77-245956-1</string>
                      <string>77-245956-2</string>
                    </discussionThreads>
                    <lesson>62460</lesson>
                    <status>ready</status>
                    <block id="5329">
                      <name>code</name>
                      <text>&lt;b&gt;The problem statement&lt;/b&gt;&lt;br&gt;Write a program that reads two date-time pairs in the same year and calculates how many whole hours between them.&lt;br&gt;&lt;br&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;br&gt;The first and the second lines contains a date-time pair &lt;b&gt;year-month-dayThour:minute &lt;/b&gt;(without seconds and nanoseconds).&lt;br&gt;&lt;br&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;br&gt;The line containing a integer non-negative number.</text>
                      <options id="5330">
                        <samples id="5331">
                          <Sample id="5332">&lt;input&gt;2017-06-15T01:50
2017-06-16T01:10&lt;/input&gt;&lt;output&gt;23&lt;/output&gt;</Sample>
                          <Sample id="5333">&lt;input&gt;2017-06-15T01:50
2017-06-15T02:50&lt;/input&gt;&lt;output&gt;1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5334" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5335" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5336">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5337" />
                    </block>
                    <actions class="linked-hash-map" id="5338">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5339">
                      <string>31-77-245956</string>
                      <string>30-77-245956</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.4</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5340">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5341">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5342">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5343">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5344">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5345">
                  <id>65067</id>
                  <title>Ways to create a server project &amp; connect it to a panel project</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress />
                  <createDate id="5346">2017-12-25 11:12:18.0 UTC</createDate>
                  <updateDate id="5347">2018-03-22 09:25:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy />
                  <discussionThreads id="5348" />
                  <steps id="5349">
                    <long>255599</long>
                    <long>255600</long>
                    <long>255601</long>
                    <long>255602</long>
                    <long>255603</long>
                    <long>255604</long>
                  </steps>
                  <actions class="linked-hash-map" id="5350" />
                  <tags id="5351" />
                  <requiredTags id="5352" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5353">
                    <string>31-76-65067</string>
                    <string>30-76-65067</string>
                  </subscriptions>
                  <viewedBy>3</viewedBy>
                  <passedBy>1</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl>https://i.vimeocdn.com/video/674231589_180x180.jpg?r=pad</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>36708621</owner>
                  <language>ru</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>false</isPublic>
                  <slug>Ways-to-create-a-server-project-&amp;-connect-it-to-a-panel-project-65067</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65067</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="kotlin.collections.EmptyList" reference="21" />
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5354">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5355">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5356">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5357">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5358">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5359">
                  <id>65000</id>
                  <title />
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress />
                  <createDate id="5360">1970-01-01 00:00:00.0 UTC</createDate>
                  <updateDate id="5361">1970-01-01 00:00:00.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy />
                  <discussionThreads class="kotlin.collections.EmptyList" reference="21" />
                  <steps class="kotlin.collections.EmptyList" reference="21" />
                  <actions class="kotlin.collections.EmptyMap" id="5362" />
                  <tags class="kotlin.collections.EmptyList" reference="21" />
                  <requiredTags class="kotlin.collections.EmptyList" reference="21" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions class="kotlin.collections.EmptyList" reference="21" />
                  <viewedBy>0</viewedBy>
                  <passedBy>0</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>0</owner>
                  <language />
                  <isFeatured>false</isFeatured>
                  <isPublic>false</isPublic>
                  <slug />
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote />
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="kotlin.collections.EmptyList" reference="21" />
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5363">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5364">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5365">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5366">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5367">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5368">
                  <id>65899</id>
                  <title>Binary search # Find array elements in another array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65899</progress>
                  <createDate id="5369">2018-01-04 20:46:54.0 UTC</createDate>
                  <updateDate id="5370">2018-01-23 13:49:32.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65899-1</discussionProxy>
                  <discussionThreads id="5371">
                    <string>76-65899-1</string>
                  </discussionThreads>
                  <steps id="5372">
                    <long>260249</long>
                  </steps>
                  <actions class="linked-hash-map" id="5373" />
                  <tags id="5374" />
                  <requiredTags id="5375" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5376">
                    <string>31-76-65899</string>
                    <string>30-76-65899</string>
                  </subscriptions>
                  <viewedBy>30</viewedBy>
                  <passedBy>20</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>1474</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Binary-search-Find-array-elements-in-another-array-65899</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65899</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5377">
                <StepNode id="5378">
                  <parent class="LessonNode" reference="5363" />
                  <data class="Step" id="5379">
                    <id>260249</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-260249</progress>
                    <createDate id="5380">2018-01-05 06:53:26.0 UTC</createDate>
                    <updateDate id="5381">2018-01-05 07:09:50.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-260249-1</discussionProxy>
                    <discussionThreads id="5382">
                      <string>77-260249-1</string>
                      <string>77-260249-2</string>
                    </discussionThreads>
                    <lesson>65899</lesson>
                    <status>ready</status>
                    <block id="5383">
                      <name>code</name>
                      <text>&lt;p class=&quot;wysiwyg-text-align-left&quot;&gt;The first line contains integer $1 \le n \le 10^5$. The second one contains of an array
$A[1 \ldots n]$ of $n$ various natural numbers, not exceeding $10^9$, in
ascending order. &lt;/p&gt;&lt;p class=&quot;wysiwyg-text-align-left&quot;&gt;The third line contains integer $1 \le k \le
10^5$. The fourth one consists of $k$ natural numbers $b_1, \ldots, b_k$, not exceeding $10^9$. &lt;/p&gt;&lt;p class=&quot;wysiwyg-text-align-left&quot;&gt;For each $i$ from 1 to $k$ it is necessary to output index $1 \le j \le n$, for
which $A[j]=b_i$, or $-1$, if there is no such $j$.&lt;/p&gt;</text>
                      <options id="5384">
                        <samples id="5385">
                          <Sample id="5386">&lt;input&gt;5
1 5 8 12 13
5
8 1 23 1 11&lt;/input&gt;&lt;output&gt;3 1 -1 1 -1&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5387" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5388" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5389">
                              <time>2</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5390" />
                    </block>
                    <actions class="linked-hash-map" id="5391">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5392">
                      <string>31-77-260249</string>
                      <string>30-77-260249</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>30</viewedBy>
                    <passedBy>20</passedBy>
                    <correctRatio>0.2911392405063291</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5393">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5394">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5395">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5396">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5397">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5398">
                  <id>65903</id>
                  <title>Binary search # Search in a descending ordered array</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65903</progress>
                  <createDate id="5399">2018-01-04 20:50:22.0 UTC</createDate>
                  <updateDate id="5400">2018-01-23 13:49:32.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65903-1</discussionProxy>
                  <discussionThreads id="5401">
                    <string>76-65903-1</string>
                  </discussionThreads>
                  <steps id="5402">
                    <long>260264</long>
                  </steps>
                  <actions class="linked-hash-map" id="5403" />
                  <tags id="5404" />
                  <requiredTags id="5405" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5406">
                    <string>31-76-65903</string>
                    <string>30-76-65903</string>
                  </subscriptions>
                  <viewedBy>22</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>508</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Binary-search-Search-in-a-descending-ordered-array-65903</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65903</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5407">
                <StepNode id="5408">
                  <parent class="LessonNode" reference="5393" />
                  <data class="Step" id="5409">
                    <id>260264</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-260264</progress>
                    <createDate id="5410">2018-01-05 09:11:43.0 UTC</createDate>
                    <updateDate id="5411">2018-01-05 09:31:29.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-260264-1</discussionProxy>
                    <discussionThreads id="5412">
                      <string>77-260264-1</string>
                    </discussionThreads>
                    <lesson>65903</lesson>
                    <status>ready</status>
                    <block id="5413">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;div&gt;Given a method that implements the binary search algorithm. It searches in ascending sorted arrays.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You should  modify the method:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;it should search in descending sorted arrays instead of ascending ones;&lt;br&gt;&lt;/li&gt;&lt;li&gt;it should return the first index of the target element from the beginning of the array, i.e. the leftmost index.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="5414">
                        <samples id="5415">
                          <Sample id="5416">&lt;input&gt;15
17 17 16 15 15 15 15 14 14&lt;/input&gt;&lt;output&gt;3&lt;/output&gt;</Sample>
                          <Sample id="5417">&lt;input&gt;2
3 3 3 3 3 1 1 1 0&lt;/input&gt;&lt;output&gt;-1&lt;/output&gt;</Sample>
                          <Sample id="5418">&lt;input&gt;22
40 31 22 22 22 22 22 22&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5419" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static int binarySearch(int elem, int[] array) {

    int left = 0;
    int right = array.length - 1;

    while (left &lt;= right) {
        int mid = left + (right - left) / 2;

        if (elem == array[mid]) {
            return mid;
        } else if (elem &lt; array[mid]) {
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }
    return -1;
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5420" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5421">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5422" />
                    </block>
                    <actions class="linked-hash-map" id="5423">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5424">
                      <string>31-77-260264</string>
                      <string>30-77-260264</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>22</viewedBy>
                    <passedBy>17</passedBy>
                    <correctRatio>0.2916666666666667</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5425">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5426">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5427">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5428">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5429">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5430">
                  <id>65948</id>
                  <title>Jump Search # Find a block that may contain the target value</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65948</progress>
                  <createDate id="5431">2018-01-06 08:29:23.0 UTC</createDate>
                  <updateDate id="5432">2018-01-23 13:49:33.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65948-1</discussionProxy>
                  <discussionThreads id="5433">
                    <string>76-65948-1</string>
                  </discussionThreads>
                  <steps id="5434">
                    <long>260487</long>
                  </steps>
                  <actions class="linked-hash-map" id="5435" />
                  <tags id="5436" />
                  <requiredTags id="5437" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5438">
                    <string>31-76-65948</string>
                    <string>30-76-65948</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>4218</timeToComplete>
                  <coverUrl>https://ucarecdn.com/4cdb28f2-ab01-4121-9fb9-94d446292c24/-/scale_crop/180x180/center/</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Jump-Search-Find-a-block-that-may-contain-the-target-value-65948</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65948</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5439">
                <StepNode id="5440">
                  <parent class="LessonNode" reference="5425" />
                  <data class="Step" id="5441">
                    <id>260487</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-260487</progress>
                    <createDate id="5442">2018-01-06 09:12:20.0 UTC</createDate>
                    <updateDate id="5443">2018-01-07 16:45:59.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-260487-1</discussionProxy>
                    <discussionThreads id="5444">
                      <string>77-260487-1</string>
                    </discussionThreads>
                    <lesson>65948</lesson>
                    <status>ready</status>
                    <block id="5445">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that reads an ascending sorted array of integers and a value. It should find the first block that could contain the value.&lt;/p&gt;&lt;p&gt;Keep in mind, actually, the block may not contain the element at all. We consider only a possibility to have the element.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://ucarecdn.com/4cdb28f2-ab01-4121-9fb9-94d446292c24/&quot;&gt;&lt;/span&gt;&lt;br&gt;Your algorithm should use principles of the &lt;b&gt;jump search&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;&lt;p&gt;As a block size use the optimal value. The last block can have the smaller size.&lt;br&gt;&lt;/p&gt;&lt;p&gt;Read the theory lesson if you do not understand the problem.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The first line contains the length of an input array, the second one consists of array elements, the last one has the target value.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output the left and the right indexes of the found block separated by space. If no any block could contain the value, output the string &lt;b&gt;&quot;-1&quot;&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="5446">
                        <samples id="5447">
                          <Sample id="5448">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
1&lt;/input&gt;&lt;output&gt;0 2&lt;/output&gt;</Sample>
                          <Sample id="5449">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
2&lt;/input&gt;&lt;output&gt;3 5&lt;/output&gt;</Sample>
                          <Sample id="5450">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
5&lt;/input&gt;&lt;output&gt;3 5&lt;/output&gt;</Sample>
                          <Sample id="5451">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
22&lt;/input&gt;&lt;output&gt;9 9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5452" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5453" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5454">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5455" />
                    </block>
                    <actions class="linked-hash-map" id="5456">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5457">
                      <string>31-77-260487</string>
                      <string>30-77-260487</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.10897435897435898</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5458">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5459">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5460">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5461">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5462">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5463">
                  <id>56084</id>
                  <title>Inheritance # Who is who</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56084</progress>
                  <createDate id="5464">2017-09-12 14:45:58.0 UTC</createDate>
                  <updateDate id="5465">2018-02-20 00:02:01.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-56084-1</discussionProxy>
                  <discussionThreads id="5466">
                    <string>76-56084-1</string>
                  </discussionThreads>
                  <steps id="5467">
                    <long>206460</long>
                  </steps>
                  <actions class="linked-hash-map" id="5468" />
                  <tags id="5469" />
                  <requiredTags id="5470" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5471">
                    <string>31-76-56084</string>
                    <string>30-76-56084</string>
                  </subscriptions>
                  <viewedBy>34</viewedBy>
                  <passedBy>29</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>358</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Inheritance-Who-is-who-56084</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56084</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5472">
                <StepNode id="5473">
                  <parent class="LessonNode" reference="5458" />
                  <data class="Step" id="5474">
                    <id>206460</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-206460</progress>
                    <createDate id="5475">2017-07-31 11:23:40.0 UTC</createDate>
                    <updateDate id="5476">2018-02-20 00:02:01.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-206460-1</discussionProxy>
                    <discussionThreads id="5477">
                      <string>77-206460-1</string>
                      <string>77-206460-2</string>
                    </discussionThreads>
                    <lesson>56084</lesson>
                    <status>ready</status>
                    <block id="5478">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a class hierarchy consisting of three classes. The base class &lt;/span&gt;is &lt;code&gt;Employee&lt;/code&gt;.&lt;span&gt; The first subclass &lt;/span&gt;is &lt;code&gt;Developer&lt;/code&gt;,&lt;span&gt; the second subclass &lt;/span&gt;is &lt;code&gt;DataAnalyst&lt;/code&gt;.&lt;br&gt;&lt;/p&gt;&lt;p&gt;Implement a method &lt;b&gt;determineWhoIsWho&lt;/b&gt;. The method takes an array of employees. Each element belongs to one of listed classes. The method should output the type (DEV, EMP or DA) of each element in a new line.&lt;br&gt;&lt;/p&gt;&lt;p&gt;Use the provided template for your method.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output example&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;DEV&lt;br&gt;EMP&lt;br&gt;DA&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="5479">
                        <samples id="5480" />
                        <codeTemplates class="LinkedTreeMap" id="5481" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void determineWhoIsWho(Employee[] employees) {
    for (Employee employee : employees) {
        System.out.println(&quot;EMP&quot;);
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5482" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5483">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5484" />
                    </block>
                    <actions class="linked-hash-map" id="5485">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5486">
                      <string>31-77-206460</string>
                      <string>30-77-206460</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>34</viewedBy>
                    <passedBy>29</passedBy>
                    <correctRatio>0.5205479452054794</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5487">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5488">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5489">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5490">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5491">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5492">
                  <id>65948</id>
                  <title>Jump Search # Find a block that may contain the target value</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65948</progress>
                  <createDate id="5493">2018-01-06 08:29:23.0 UTC</createDate>
                  <updateDate id="5494">2018-01-23 13:49:33.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65948-1</discussionProxy>
                  <discussionThreads id="5495">
                    <string>76-65948-1</string>
                  </discussionThreads>
                  <steps id="5496">
                    <long>260487</long>
                  </steps>
                  <actions class="linked-hash-map" id="5497" />
                  <tags id="5498" />
                  <requiredTags id="5499" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5500">
                    <string>31-76-65948</string>
                    <string>30-76-65948</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>16</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>4218</timeToComplete>
                  <coverUrl>https://ucarecdn.com/4cdb28f2-ab01-4121-9fb9-94d446292c24/-/scale_crop/180x180/center/</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Jump-Search-Find-a-block-that-may-contain-the-target-value-65948</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65948</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5501">
                <StepNode id="5502">
                  <parent class="LessonNode" reference="5487" />
                  <data class="Step" id="5503">
                    <id>260487</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-260487</progress>
                    <createDate id="5504">2018-01-06 09:12:20.0 UTC</createDate>
                    <updateDate id="5505">2018-01-07 16:45:59.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-260487-1</discussionProxy>
                    <discussionThreads id="5506">
                      <string>77-260487-1</string>
                    </discussionThreads>
                    <lesson>65948</lesson>
                    <status>ready</status>
                    <block id="5507">
                      <name>code</name>
                      <text>&lt;p&gt;Write a program that reads an ascending sorted array of integers and a value. It should find the first block that could contain the value.&lt;/p&gt;&lt;p&gt;Keep in mind, actually, the block may not contain the element at all. We consider only a possibility to have the element.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://ucarecdn.com/4cdb28f2-ab01-4121-9fb9-94d446292c24/&quot;&gt;&lt;/span&gt;&lt;br&gt;Your algorithm should use principles of the &lt;b&gt;jump search&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;&lt;p&gt;As a block size use the optimal value. The last block can have the smaller size.&lt;br&gt;&lt;/p&gt;&lt;p&gt;Read the theory lesson if you do not understand the problem.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Input data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The first line contains the length of an input array, the second one consists of array elements, the last one has the target value.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Output data format&lt;/b&gt;&lt;/p&gt;&lt;p&gt;The program must output the left and the right indexes of the found block separated by space. If no any block could contain the value, output the string &lt;b&gt;&quot;-1&quot;&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                      <options id="5508">
                        <samples id="5509">
                          <Sample id="5510">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
1&lt;/input&gt;&lt;output&gt;0 2&lt;/output&gt;</Sample>
                          <Sample id="5511">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
2&lt;/input&gt;&lt;output&gt;3 5&lt;/output&gt;</Sample>
                          <Sample id="5512">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
5&lt;/input&gt;&lt;output&gt;3 5&lt;/output&gt;</Sample>
                          <Sample id="5513">&lt;input&gt;10
0 1 1 1 3 5 8 13 21 34
22&lt;/input&gt;&lt;output&gt;9 9&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5514" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5515" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5516">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5517" />
                    </block>
                    <actions class="linked-hash-map" id="5518">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5519">
                      <string>31-77-260487</string>
                      <string>30-77-260487</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>16</passedBy>
                    <correctRatio>0.10897435897435898</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5520">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5521">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5522">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5523">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5524">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5525">
                  <id>57083</id>
                  <title>Lambda expressions # Ternary predicate</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57083</progress>
                  <createDate id="5526">2017-09-20 16:53:29.0 UTC</createDate>
                  <updateDate id="5527">2018-02-20 22:38:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57083-1</discussionProxy>
                  <discussionThreads id="5528">
                    <string>76-57083-1</string>
                  </discussionThreads>
                  <steps id="5529">
                    <long>223254</long>
                  </steps>
                  <actions class="linked-hash-map" id="5530" />
                  <tags id="5531" />
                  <requiredTags id="5532" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5533">
                    <string>31-76-57083</string>
                    <string>30-76-57083</string>
                  </subscriptions>
                  <viewedBy>20</viewedBy>
                  <passedBy>14</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>351</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Lambda-expressions-Ternary-predicate-57083</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57083</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5534">
                <StepNode id="5535">
                  <parent class="LessonNode" reference="5520" />
                  <data class="Step" id="5536">
                    <id>223254</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-223254</progress>
                    <createDate id="5537">2017-09-20 16:57:24.0 UTC</createDate>
                    <updateDate id="5538">2017-09-20 16:57:37.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-223254-1</discussionProxy>
                    <discussionThreads id="5539">
                      <string>77-223254-1</string>
                      <string>77-223254-2</string>
                    </discussionThreads>
                    <lesson>57083</lesson>
                    <status>ready</status>
                    <block id="5540">
                      <name>code</name>
                      <text>&lt;p&gt;You need to write your own functional interface &lt;b&gt;(TernaryIntPredicate)&lt;/b&gt; and use it with a lambda expression. The interface must have a single non-static (and non-default) method &lt;b&gt;test&lt;/b&gt; with &lt;b&gt;three int arguments&lt;/b&gt; that &lt;b&gt;returns boolean value&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;Besides, you need to write a lambda expression with three int arguments using your &lt;b&gt;&lt;b&gt;TernaryIntPredicate&lt;/b&gt;&lt;/b&gt;. &lt;br&gt;&lt;br&gt;The lambda expression has to return &lt;b&gt;true &lt;/b&gt;if all passed values are different&lt;b&gt; &lt;/b&gt;otherwise&lt;b&gt; false. &lt;/b&gt;The name of the instance is &lt;b&gt;allValuesAreDifferentPredicate&lt;/b&gt;. It should be a &lt;b&gt;static field.&lt;br&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;Important. &lt;/b&gt;Use the provided template for your solution. Do not change it!&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</text>
                      <options id="5541">
                        <samples id="5542">
                          <Sample id="5543">&lt;input&gt;1 1 1
&lt;/input&gt;&lt;output&gt;False&lt;/output&gt;</Sample>
                          <Sample id="5544">&lt;input&gt;2 3 4
&lt;/input&gt;&lt;output&gt;True&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5545" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>@FunctionalInterface
public interface TernaryIntPredicate {
// Write a method here
}

public static final TernaryIntPredicate allValuesAreDifferentPredicate = // Write a lambda expression here</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5546" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5547">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5548" />
                    </block>
                    <actions class="linked-hash-map" id="5549">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5550">
                      <string>31-77-223254</string>
                      <string>30-77-223254</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>20</viewedBy>
                    <passedBy>14</passedBy>
                    <correctRatio>0.2692307692307692</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5551">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5552">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5553">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5554">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5555">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5556">
                  <id>57110</id>
                  <title>Function composition # The chain of responsibility</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-57110</progress>
                  <createDate id="5557">2017-09-20 17:12:53.0 UTC</createDate>
                  <updateDate id="5558">2018-02-21 15:19:50.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-57110-1</discussionProxy>
                  <discussionThreads id="5559">
                    <string>76-57110-1</string>
                  </discussionThreads>
                  <steps id="5560">
                    <long>223274</long>
                    <long>223278</long>
                    <long>223279</long>
                  </steps>
                  <actions class="linked-hash-map" id="5561" />
                  <tags id="5562" />
                  <requiredTags id="5563" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5564">
                    <string>31-76-57110</string>
                    <string>30-76-57110</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>5</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Function-composition-The-chain-of-responsibility-57110</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-57110</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="java.util.Arrays$ArrayList" id="5565">
                <a id="5566">
                  <StepNode id="5567">
                    <parent class="LessonNode" reference="5551" />
                    <data class="Step" id="5568">
                      <id>223274</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>1</position>
                      <progress>77-223274</progress>
                      <createDate id="5569">2017-09-20 17:12:54.0 UTC</createDate>
                      <updateDate id="5570">2017-09-20 17:17:22.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223274-1</discussionProxy>
                      <discussionThreads id="5571">
                        <string>77-223274-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="5572">
                        <name>text</name>
                        <text>&lt;p&gt;&lt;b&gt;Overview. &lt;/b&gt;The chain of responsibility pattern is a object-oriented design pattern that processes a request through a series of handlers (a chain). The request (or something else) is sent from one handler to another and processed by one or all of these handlers in the chain.&lt;/p&gt;&lt;p&gt;In more detail: &lt;a href=&quot;https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&quot; rel=&quot;nofollow&quot; title=&quot;Link: https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&quot;&gt;https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Usually, to implement this design pattern follow classes and method are created:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;a general handler&lt;/b&gt; is an abstract class or interface with a &lt;b&gt;&lt;/b&gt;met﻿hod &lt;b&gt;handle/process/etc&lt;/b&gt; and a method to set a ﻿next handler&lt;/li&gt;&lt;li&gt;one or more &lt;b&gt;concrete handlers &lt;/b&gt;that implement the general handler&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Using functional style we can implement it more simple. &lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;Instead o&lt;/span&gt;&lt;span&gt;f &lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;writing all &lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;concrete &lt;/span&gt;&lt;span&gt;handlers &lt;/span&gt;&lt;span&gt;we &lt;/span&gt;&lt;span&gt;can &lt;/span&gt;&lt;span&gt;write l&lt;/span&gt;&lt;span&gt;ambda &lt;/span&gt;&lt;span&gt;expressions (or &lt;/span&gt;&lt;span&gt;method r&lt;/span&gt;&lt;span&gt;eferences). For &lt;/span&gt;&lt;span&gt;setting &lt;/span&gt;&lt;span&gt;next&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;handler it's possible &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;function &lt;/span&gt;&lt;span&gt;composition &lt;/span&gt;&lt;span&gt;﻿in &lt;/span&gt;&lt;span&gt;similar &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;functions &lt;/span&gt;&lt;span&gt;way.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</text>
                        <options id="5573" />
                        <subtitleFiles id="5574" />
                      </block>
                      <actions class="linked-hash-map" id="5575" />
                      <subscriptions id="5576">
                        <string>31-77-223274</string>
                        <string>30-77-223274</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>6</viewedBy>
                      <passedBy>6</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <currentLang>invalid</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="5577">
                    <parent class="LessonNode" reference="5551" />
                    <data class="Step" id="5578">
                      <id>223278</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>2</position>
                      <progress>77-223278</progress>
                      <createDate id="5579">2017-09-20 17:17:22.0 UTC</createDate>
                      <updateDate id="5580">2017-09-20 17:17:23.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223278-1</discussionProxy>
                      <discussionThreads id="5581">
                        <string>77-223278-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="5582">
                        <name>code</name>
                        <text>&lt;p&gt;There is a class &lt;b&gt;Request(data: String) &lt;/b&gt;for representing some XML requests in a payment system. The class has a getter method &lt;b&gt;getData()&lt;/b&gt; and a constructor with one argument (&lt;b&gt;data)&lt;/b&gt;. See below.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Typically, the value of &lt;b&gt;data&lt;/b&gt; looks like shown below (in a human-readable format, in processing it's a single line string).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;request&amp;gt;&lt;br&gt;  &amp;lt;transaction&amp;gt;&lt;br&gt;    &amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&lt;br&gt;    &amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&lt;br&gt;    &amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&lt;br&gt;    &amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&lt;br&gt;  &amp;lt;/transaction&amp;gt;&lt;br&gt;  &amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&lt;br&gt;&amp;lt;/request&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;You should to write &lt;b&gt;the chain of responsibility pattern in functional style&lt;/b&gt; for stage-by-stage request creating.&lt;div&gt;For this:&lt;div&gt;1) write a functional interface &lt;b&gt;RequestHandler&lt;/b&gt; with a single abstract method &lt;b&gt;handle &lt;/b&gt;and a default method; the first is needed for using lambda expressions and should accept a Request and returns new Request with changed data, the second is for combining several handlers into the one.&lt;/div&gt;&lt;div&gt;2) create a &lt;b&gt;commonRequestHandler&lt;/b&gt; combined from three existing handlers: &lt;b&gt;wrapInTransactionTag&lt;/b&gt;, &lt;b&gt;createDigest&lt;/b&gt; and &lt;b&gt;wrapInRequestTag&lt;/b&gt;.&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Important. &lt;/b&gt;Use the provided template for your solution. Do not change it and read comments in the code. The template is long enough, scroll it to the bottom. &lt;b&gt;All comments where your code is expected start with !!!&lt;/b&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In the next step, you can read how the requests should be created. Keep in mind, all handlers with logic are already implemented and available for you. You need to write only a suitable functional interface and compose all existing handlers as functions into one &lt;b&gt;commonRequestHandler&lt;/b&gt; &lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;to follow the described algorithm.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                        <options id="5583">
                          <samples id="5584" />
                          <codeTemplates class="LinkedTreeMap" id="5585" resolves-to="linked-hash-map">
                            <entry>
                              <string>java8</string>
                              <string>/**
 * It represents a handler and has two methods: one for handling requests and other for combining handlers
 */
@FunctionalInterface
interface RequestHandler {

    // !!! write a method handle that accept request and returns new request here
    // it allows to use lambda expressions for creating handlers below

    // !!! write a default method for combining this and other handler single one
    // the order of execution may be any but you need to consider it when composing handlers
    // the method may has any name
}

/**
 * Accepts a request and returns new request with data wrapped in the tag &lt;transaction&gt;...&lt;/transaction&gt;
 */
final static RequestHandler wrapInTransactionTag =
        (req) -&gt; new Request(String.format(&quot;&lt;transaction&gt;%s&lt;/transaction&gt;&quot;, req.getData()));

/**
 * Accepts a request and returns a new request with calculated digest inside the tag &lt;digest&gt;...&lt;/digest&gt;
 */
final static RequestHandler createDigest =
        (req) -&gt; {
            String digest = &quot;&quot;;
            try {
                final MessageDigest md5 = MessageDigest.getInstance(&quot;MD5&quot;);
                final byte[] digestBytes = md5.digest(req.getData().getBytes(&quot;UTF-8&quot;));
                digest = new String(Base64.getEncoder().encode(digestBytes));
            } catch (Exception ignored) { }
            return new Request(req.getData() + String.format(&quot;&lt;digest&gt;%s&lt;/digest&gt;&quot;, digest));
        };

/**
 * Accepts a request and returns a new request with data wrapped in the tag &lt;request&gt;...&lt;/request&gt;
 */
final static RequestHandler wrapInRequestTag =
        (req) -&gt; new Request(String.format(&quot;&lt;request&gt;%s&lt;/request&gt;&quot;, req.getData()));

/**
 * It should represents a chain of responsibility combined from another handlers.
 * The format: commonRequestHandler = handler1.setSuccessor(handler2.setSuccessor(...))
 * The combining method setSuccessor may has another name
 */
final static RequestHandler commonRequestHandler = // !!! write the combining of existing handlers here

/**
 * Immutable class for representing requests.
 * If you need to change the request data then create new request.
 */
static class Request {
    private final String data;

    public Request(String requestData) {
        this.data = requestData;
    }

    public String getData() {
        return data;
    }
}</string>
                            </entry>
                          </codeTemplates>
                          <limits class="LinkedTreeMap" id="5586" resolves-to="linked-hash-map">
                            <entry>
                              <string>java8</string>
                              <Limit id="5587">
                                <time>8</time>
                                <memory>256</memory>
                              </Limit>
                            </entry>
                          </limits>
                        </options>
                        <subtitleFiles id="5588" />
                      </block>
                      <actions class="linked-hash-map" id="5589">
                        <entry>
                          <string>submit</string>
                          <string>#</string>
                        </entry>
                      </actions>
                      <subscriptions id="5590">
                        <string>31-77-223278</string>
                        <string>30-77-223278</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>16</viewedBy>
                      <passedBy>8</passedBy>
                      <correctRatio>0.25</correctRatio>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <currentLang>Java 8</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="5591">
                    <parent class="LessonNode" reference="5551" />
                    <data class="Step" id="5592">
                      <id>223279</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>3</position>
                      <progress>77-223279</progress>
                      <createDate id="5593">2017-09-20 17:17:36.0 UTC</createDate>
                      <updateDate id="5594">2017-09-20 17:17:36.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-223279-1</discussionProxy>
                      <discussionThreads id="5595">
                        <string>77-223279-1</string>
                      </discussionThreads>
                      <lesson>57110</lesson>
                      <status>ready</status>
                      <block id="5596">
                        <name>text</name>
                        <text>&lt;p&gt;&lt;b&gt;The algorithm for creating a XML request.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;0) Initial request data looks like shown below (it contains only business data).&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1) First, a tag &lt;i&gt;&amp;lt;transaction&amp;gt;...&amp;lt;/transaction&amp;gt;&lt;/i&gt; is added as border of the data (data is wrapped in the tag). The result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2) Then, a digest (MD5) is calculated for entire data created on the previous stage and added as a new tag. The result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;&amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3) After that, the data is wrapped in a tag &lt;i&gt;&amp;lt;request&amp;gt;...&amp;lt;/request&amp;gt;&lt;/i&gt; as shown below. The request is completed.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;request&amp;gt;&amp;lt;transaction&amp;gt;&amp;lt;type&amp;gt;payment&amp;lt;/type&amp;gt;&amp;lt;sum&amp;gt;100000&amp;lt;/sum&amp;gt;&amp;lt;order_id&amp;gt;e94dc619-6172-4ffe-aae8-
63112c551570&amp;lt;/order&amp;gt;&amp;lt;desc&amp;gt;We'd like to buy an elephant&amp;lt;/desc&amp;gt;&amp;lt;/transaction&amp;gt;
&amp;lt;digest&amp;gt;CZVMYTgc3iiOdJjFP+6dhQ==&amp;lt;/digest&amp;gt;&amp;lt;/request&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;So, if you have a request data as shown in stage 0, the algorithm should to generate the result as shown in stage 3.&lt;/p&gt;&lt;p&gt;Note, each stage is already implemented for you in a specific &lt;b&gt;RequestHandler&lt;/b&gt;.&lt;br&gt;&lt;/p&gt;</text>
                        <options id="5597" />
                        <subtitleFiles id="5598" />
                      </block>
                      <actions class="linked-hash-map" id="5599" />
                      <subscriptions id="5600">
                        <string>31-77-223279</string>
                        <string>30-77-223279</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>5</viewedBy>
                      <passedBy>5</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <currentLang>invalid</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                </a>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5601">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5602">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5603">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5604">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5605">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5606">
                  <id>63647</id>
                  <title>Instance methods # Simulating a clock</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-63647</progress>
                  <createDate id="5607">2017-12-13 02:53:42.0 UTC</createDate>
                  <updateDate id="5608">2018-02-13 17:43:47.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-63647-1</discussionProxy>
                  <discussionThreads id="5609">
                    <string>76-63647-1</string>
                  </discussionThreads>
                  <steps id="5610">
                    <long>250595</long>
                  </steps>
                  <actions class="linked-hash-map" id="5611" />
                  <tags id="5612" />
                  <requiredTags id="5613" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5614">
                    <string>31-76-63647</string>
                    <string>30-76-63647</string>
                  </subscriptions>
                  <viewedBy>33</viewedBy>
                  <passedBy>29</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>332</timeToComplete>
                  <coverUrl>https://ucarecdn.com/f62bb626-cc70-4dbd-a7f2-145418cc74c7/-/scale_crop/180x180/center/</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Instance-methods-Simulating-a-clock-63647</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-63647</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5615">
                <StepNode id="5616">
                  <parent class="LessonNode" reference="5601" />
                  <data class="Step" id="5617">
                    <id>250595</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-250595</progress>
                    <createDate id="5618">2017-12-13 03:34:21.0 UTC</createDate>
                    <updateDate id="5619">2017-12-22 19:40:07.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-250595-1</discussionProxy>
                    <discussionThreads id="5620">
                      <string>77-250595-1</string>
                      <string>77-250595-2</string>
                    </discussionThreads>
                    <lesson>63647</lesson>
                    <status>ready</status>
                    <block id="5621">
                      <name>code</name>
                      <text>Given a class named &lt;code&gt;Clock&lt;/code&gt;. It has two int fields: &lt;code&gt;hours&lt;/code&gt; and &lt;code&gt;minutes&lt;/code&gt;. The clock has the minute scale from 0 to 59 and the hour scale from 1 to 12. The clock does not know, now it's day or night.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Add the method &lt;code&gt;next&lt;/code&gt; that increases minutes by 1. The minutes must be reset to zero when the current hour ends. Do not forget to change hours as well.&lt;div&gt;&lt;br&gt;&lt;p&gt;Do not make the fields and methods &lt;code&gt;private&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Here is an example of a clock you should simulate.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;img width=&quot;202px&quot; src=&quot;https://ucarecdn.com/f62bb626-cc70-4dbd-a7f2-145418cc74c7/&quot; title=&quot;Image: https://ucarecdn.com/f62bb626-cc70-4dbd-a7f2-145418cc74c7/&quot; height=&quot;201px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;image-wrapper&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="5622">
                        <samples id="5623" />
                        <codeTemplates class="LinkedTreeMap" id="5624" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Clock {

    int hours = 12;
    int minutes = 0;

    // write a method here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5625" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5626">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5627" />
                    </block>
                    <actions class="linked-hash-map" id="5628">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5629">
                      <string>31-77-250595</string>
                      <string>30-77-250595</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>33</viewedBy>
                    <passedBy>29</passedBy>
                    <correctRatio>0.22448979591836735</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5630">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5631">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5632">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5633">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5634">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5635">
                  <id>65831</id>
                  <title>Recursion # Number of decompositions</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-65831</progress>
                  <createDate id="5636">2018-01-04 13:15:41.0 UTC</createDate>
                  <updateDate id="5637">2018-01-23 13:49:32.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-65831-1</discussionProxy>
                  <discussionThreads id="5638">
                    <string>76-65831-1</string>
                  </discussionThreads>
                  <steps id="5639">
                    <long>259951</long>
                  </steps>
                  <actions class="linked-hash-map" id="5640" />
                  <tags id="5641" />
                  <requiredTags id="5642" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5643">
                    <string>31-76-65831</string>
                    <string>30-76-65831</string>
                  </subscriptions>
                  <viewedBy>28</viewedBy>
                  <passedBy>6</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Recursion-Number-of-decompositions-65831</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-65831</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5644">
                <StepNode id="5645">
                  <parent class="LessonNode" reference="5630" />
                  <data class="Step" id="5646">
                    <id>259951</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-259951</progress>
                    <createDate id="5647">2018-01-04 14:07:08.0 UTC</createDate>
                    <updateDate id="5648">2018-01-04 14:07:08.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-259951-1</discussionProxy>
                    <discussionThreads id="5649">
                      <string>77-259951-1</string>
                    </discussionThreads>
                    <lesson>65831</lesson>
                    <status>ready</status>
                    <block id="5650">
                      <name>code</name>
                      <text>&lt;p&gt;Read the integer $N$ ($1 \leq N \leq 40$) from the standard input and l&lt;span&gt;ist all the
decompositions of &lt;/span&gt;&lt;span class=&quot;MathJax&quot;&gt;&lt;span class=&quot;math&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;mrow&quot;&gt;&lt;span class=&quot;mi&quot;&gt;N&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;N&lt;/span&gt;&lt;/span&gt;&lt;span&gt; into the whole positive addends. &lt;/span&gt;&lt;span&gt;The addends should go in non-ascending order within each
decomposition.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Output all decompositions in the lexicographical order.&lt;/p&gt;&lt;p&gt;Please, use a recursive method to write your solution.&lt;/p&gt;</text>
                      <options id="5651">
                        <samples id="5652">
                          <Sample id="5653">&lt;input&gt;5&lt;/input&gt;&lt;output&gt;1 1 1 1 1
2 1 1 1
2 2 1
3 1 1
3 2
4 1
5
&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5654" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5655" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5656">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5657" />
                    </block>
                    <actions class="linked-hash-map" id="5658">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5659">
                      <string>31-77-259951</string>
                      <string>30-77-259951</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>28</viewedBy>
                    <passedBy>6</passedBy>
                    <correctRatio>0.1956521739130435</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5660">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5661">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5662">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5663">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5664">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5665">
                  <id>58306</id>
                  <title>Basics of multithreading # Message notifier as a thread</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58306</progress>
                  <createDate id="5666">2017-10-07 15:37:04.0 UTC</createDate>
                  <updateDate id="5667">2018-04-14 16:10:02.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-58306-1</discussionProxy>
                  <discussionThreads id="5668">
                    <string>76-58306-1</string>
                  </discussionThreads>
                  <steps id="5669">
                    <long>229451</long>
                  </steps>
                  <actions class="linked-hash-map" id="5670" />
                  <tags id="5671" />
                  <requiredTags id="5672" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5673">
                    <string>31-76-58306</string>
                    <string>30-76-58306</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>249</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Message-notifier-as-a-thread-58306</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58306</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5674">
                <StepNode id="5675">
                  <parent class="LessonNode" reference="5660" />
                  <data class="Step" id="5676">
                    <id>229451</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229451</progress>
                    <createDate id="5677">2017-10-07 16:15:54.0 UTC</createDate>
                    <updateDate id="5678">2018-04-14 16:10:02.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-229451-1</discussionProxy>
                    <discussionThreads id="5679">
                      <string>77-229451-1</string>
                      <string>77-229451-2</string>
                    </discussionThreads>
                    <lesson>58306</lesson>
                    <status>ready</status>
                    <block id="5680">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a service that takes a message and the number of repeating as constructor parameters and prints the message in the standard output the specified number of times.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template for your class.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The testing system will start the service as a regular thread.&lt;/div&gt;</text>
                      <options id="5681">
                        <samples id="5682">
                          <Sample id="5683">&lt;input&gt;Hello, Marry
3&lt;/input&gt;&lt;output&gt;Hello, Marry
Hello, Marry
Hello, Marry&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5684" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class MessageNotifier extends Thread {

    // write fields to store variables here

    public MessageNotifier(String msg, int repeats) {
        // implement the constructor
    }

    @Override
    public void run() {
        // implement the method to print the message sroted in a field
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5685" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5686">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5687" />
                    </block>
                    <actions class="linked-hash-map" id="5688">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5689">
                      <string>31-77-229451</string>
                      <string>30-77-229451</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.325</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5690">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5691">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5692">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5693">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5694">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5695">
                  <id>58346</id>
                  <title>Basics of multithreading # Starting runnables</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58346</progress>
                  <createDate id="5696">2017-10-08 16:05:45.0 UTC</createDate>
                  <updateDate id="5697">2018-02-18 15:09:08.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58346-1</discussionProxy>
                  <discussionThreads id="5698">
                    <string>76-58346-1</string>
                  </discussionThreads>
                  <steps id="5699">
                    <long>229623</long>
                  </steps>
                  <actions class="linked-hash-map" id="5700" />
                  <tags id="5701" />
                  <requiredTags id="5702" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5703">
                    <string>31-76-58346</string>
                    <string>30-76-58346</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>21</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>167</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Starting-runnables-58346</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58346</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5704">
                <StepNode id="5705">
                  <parent class="LessonNode" reference="5690" />
                  <data class="Step" id="5706">
                    <id>229623</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229623</progress>
                    <createDate id="5707">2017-10-08 16:08:34.0 UTC</createDate>
                    <updateDate id="5708">2018-02-18 15:09:08.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229623-1</discussionProxy>
                    <discussionThreads id="5709">
                      <string>77-229623-1</string>
                      <string>77-229623-2</string>
                    </discussionThreads>
                    <lesson>58346</lesson>
                    <status>ready</status>
                    <block id="5710">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Implement a method that takes an array of &lt;/span&gt;&lt;b&gt;Runnable&lt;/b&gt;&lt;span&gt;'s. The method must start each runnable in a new thread.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;</text>
                      <options id="5711">
                        <samples id="5712" />
                        <codeTemplates class="LinkedTreeMap" id="5713" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void startRunnables(Runnable[] runnables) {
    // implement the method
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5714" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5715">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5716" />
                    </block>
                    <actions class="linked-hash-map" id="5717">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5718">
                      <string>31-77-229623</string>
                      <string>30-77-229623</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>21</passedBy>
                    <correctRatio>0.39436619718309857</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5719">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5720">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5721">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5722">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5723">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5724">
                  <id>58303</id>
                  <title>Basics of multithreading # Writing a thread for printing numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58303</progress>
                  <createDate id="5725">2017-10-07 14:09:35.0 UTC</createDate>
                  <updateDate id="5726">2018-02-18 15:04:18.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58303-1</discussionProxy>
                  <discussionThreads id="5727">
                    <string>76-58303-1</string>
                  </discussionThreads>
                  <steps id="5728">
                    <long>229442</long>
                  </steps>
                  <actions class="linked-hash-map" id="5729" />
                  <tags id="5730" />
                  <requiredTags id="5731" />
                  <playlists id="5732" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5733">
                    <string>31-76-58303</string>
                    <string>30-76-58303</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>17</passedBy>
                  <dependencies id="5734" />
                  <followers id="5735" />
                  <timeToComplete>428</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Writing-a-thread-for-printing-numbers-58303</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58303</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5736">
                <StepNode id="5737">
                  <parent class="LessonNode" reference="5719" />
                  <data class="Step" id="5738">
                    <id>229442</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229442</progress>
                    <createDate id="5739">2017-10-07 14:30:58.0 UTC</createDate>
                    <updateDate id="5740">2018-02-18 15:04:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229442-1</discussionProxy>
                    <discussionThreads id="5741">
                      <string>77-229442-1</string>
                      <string>77-229442-2</string>
                    </discussionThreads>
                    <lesson>58303</lesson>
                    <status>ready</status>
                    <block id="5742">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a class with the name &lt;/span&gt;&lt;b&gt;NumbersThread&lt;/b&gt;&lt;span&gt; that extends the &lt;/span&gt;&lt;b&gt;Thread &lt;/b&gt;&lt;span&gt;class&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span&gt;. The class must have a constructor that takes two integer numbers &lt;/span&gt;&lt;b&gt;from &lt;/b&gt;&lt;span&gt;and &lt;/span&gt;&lt;b&gt;to&lt;/b&gt;&lt;span&gt; - range borders&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Implement the method &lt;b&gt;run. &lt;/b&gt;It must print all numbers from the given range (inclusive) to the standard output.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template.&lt;/div&gt;</text>
                      <options id="5743">
                        <samples id="5744">
                          <Sample id="5745">&lt;input&gt;1 3
&lt;/input&gt;&lt;output&gt;1
2
3&lt;/output&gt;</Sample>
                          <Sample id="5746">&lt;input&gt;2 2
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5747" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class NumbersThread extends Thread {

    public NumbersThread(int from, int to) {
        // implement the constructor
    }

    // you should override some method here                                                   
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5748" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5749">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5750" />
                    </block>
                    <actions class="linked-hash-map" id="5751">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5752">
                      <string>31-77-229442</string>
                      <string>30-77-229442</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>18</passedBy>
                    <correctRatio>0.35384615384615387</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>true</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5753">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5754">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5755">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5756">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5757">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5758">
                  <id>58306</id>
                  <title>Basics of multithreading # Message notifier as a thread</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58306</progress>
                  <createDate id="5759">2017-10-07 15:37:04.0 UTC</createDate>
                  <updateDate id="5760">2018-04-14 16:10:02.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-58306-1</discussionProxy>
                  <discussionThreads id="5761">
                    <string>76-58306-1</string>
                  </discussionThreads>
                  <steps id="5762">
                    <long>229451</long>
                  </steps>
                  <actions class="linked-hash-map" id="5763" />
                  <tags id="5764" />
                  <requiredTags id="5765" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5766">
                    <string>31-76-58306</string>
                    <string>30-76-58306</string>
                  </subscriptions>
                  <viewedBy>24</viewedBy>
                  <passedBy>22</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>249</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Message-notifier-as-a-thread-58306</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58306</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5767">
                <StepNode id="5768">
                  <parent class="LessonNode" reference="5753" />
                  <data class="Step" id="5769">
                    <id>229451</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229451</progress>
                    <createDate id="5770">2017-10-07 16:15:54.0 UTC</createDate>
                    <updateDate id="5771">2018-04-14 16:10:02.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-229451-1</discussionProxy>
                    <discussionThreads id="5772">
                      <string>77-229451-1</string>
                      <string>77-229451-2</string>
                    </discussionThreads>
                    <lesson>58306</lesson>
                    <status>ready</status>
                    <block id="5773">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a service that takes a message and the number of repeating as constructor parameters and prints the message in the standard output the specified number of times.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template for your class.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The testing system will start the service as a regular thread.&lt;/div&gt;</text>
                      <options id="5774">
                        <samples id="5775">
                          <Sample id="5776">&lt;input&gt;Hello, Marry
3&lt;/input&gt;&lt;output&gt;Hello, Marry
Hello, Marry
Hello, Marry&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5777" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class MessageNotifier extends Thread {

    // write fields to store variables here

    public MessageNotifier(String msg, int repeats) {
        // implement the constructor
    }

    @Override
    public void run() {
        // implement the method to print the message sroted in a field
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5778" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5779">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5780" />
                    </block>
                    <actions class="linked-hash-map" id="5781">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5782">
                      <string>31-77-229451</string>
                      <string>30-77-229451</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>24</viewedBy>
                    <passedBy>22</passedBy>
                    <correctRatio>0.325</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5783">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5784">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5785">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5786">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5787">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5788">
                  <id>58303</id>
                  <title>Basics of multithreading # Writing a thread for printing numbers</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58303</progress>
                  <createDate id="5789">2017-10-07 14:09:35.0 UTC</createDate>
                  <updateDate id="5790">2018-02-18 15:04:18.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58303-1</discussionProxy>
                  <discussionThreads id="5791">
                    <string>76-58303-1</string>
                  </discussionThreads>
                  <steps id="5792">
                    <long>229442</long>
                  </steps>
                  <actions class="linked-hash-map" id="5793" />
                  <tags id="5794" />
                  <requiredTags id="5795" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5796">
                    <string>31-76-58303</string>
                    <string>30-76-58303</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>18</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>428</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Writing-a-thread-for-printing-numbers-58303</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58303</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5797">
                <StepNode id="5798">
                  <parent class="LessonNode" reference="5783" />
                  <data class="Step" id="5799">
                    <id>229442</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229442</progress>
                    <createDate id="5800">2017-10-07 14:30:58.0 UTC</createDate>
                    <updateDate id="5801">2018-02-18 15:04:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229442-1</discussionProxy>
                    <discussionThreads id="5802">
                      <string>77-229442-1</string>
                      <string>77-229442-2</string>
                    </discussionThreads>
                    <lesson>58303</lesson>
                    <status>ready</status>
                    <block id="5803">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a class with the name &lt;/span&gt;&lt;b&gt;NumbersThread&lt;/b&gt;&lt;span&gt; that extends the &lt;/span&gt;&lt;b&gt;Thread &lt;/b&gt;&lt;span&gt;class&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span&gt;. The class must have a constructor that takes two integer numbers &lt;/span&gt;&lt;b&gt;from &lt;/b&gt;&lt;span&gt;and &lt;/span&gt;&lt;b&gt;to&lt;/b&gt;&lt;span&gt; - range borders&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Implement the method &lt;b&gt;run. &lt;/b&gt;It must print all numbers from the given range (inclusive) to the standard output.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template.&lt;/div&gt;</text>
                      <options id="5804">
                        <samples id="5805">
                          <Sample id="5806">&lt;input&gt;1 3
&lt;/input&gt;&lt;output&gt;1
2
3&lt;/output&gt;</Sample>
                          <Sample id="5807">&lt;input&gt;2 2
&lt;/input&gt;&lt;output&gt;2&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5808" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class NumbersThread extends Thread {

    public NumbersThread(int from, int to) {
        // implement the constructor
    }

    // you should override some method here                                                   
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5809" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5810">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5811" />
                    </block>
                    <actions class="linked-hash-map" id="5812">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5813">
                      <string>31-77-229442</string>
                      <string>30-77-229442</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>18</passedBy>
                    <correctRatio>0.35384615384615387</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5814">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5815">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5816">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5817">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5818">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5819">
                  <id>58308</id>
                  <title />
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress />
                  <createDate id="5820">1970-01-01 00:00:00.0 UTC</createDate>
                  <updateDate id="5821">1970-01-01 00:00:00.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy />
                  <discussionThreads class="kotlin.collections.EmptyList" reference="21" />
                  <steps class="kotlin.collections.EmptyList" reference="21" />
                  <actions class="kotlin.collections.EmptyMap" reference="5362" />
                  <tags class="kotlin.collections.EmptyList" reference="21" />
                  <requiredTags class="kotlin.collections.EmptyList" reference="21" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions class="kotlin.collections.EmptyList" reference="21" />
                  <viewedBy>0</viewedBy>
                  <passedBy>0</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>0</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>0</owner>
                  <language />
                  <isFeatured>false</isFeatured>
                  <isPublic>false</isPublic>
                  <slug />
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote />
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="kotlin.collections.EmptyList" reference="21" />
              <wasDeleted>true</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5822">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5823">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5824">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5825">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5826">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5827">
                  <id>58305</id>
                  <title>Basics of multithreading # String processor</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58305</progress>
                  <createDate id="5828">2017-10-07 15:37:00.0 UTC</createDate>
                  <updateDate id="5829">2018-02-18 15:05:37.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58305-1</discussionProxy>
                  <discussionThreads id="5830">
                    <string>76-58305-1</string>
                  </discussionThreads>
                  <steps id="5831">
                    <long>229450</long>
                  </steps>
                  <actions class="linked-hash-map" id="5832" />
                  <tags id="5833" />
                  <requiredTags id="5834" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5835">
                    <string>31-76-58305</string>
                    <string>30-76-58305</string>
                  </subscriptions>
                  <viewedBy>23</viewedBy>
                  <passedBy>15</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>478</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-String-processor-58305</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58305</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5836">
                <StepNode id="5837">
                  <parent class="LessonNode" reference="5822" />
                  <data class="Step" id="5838">
                    <id>229450</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229450</progress>
                    <createDate id="5839">2017-10-07 15:44:38.0 UTC</createDate>
                    <updateDate id="5840">2018-02-18 15:05:36.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229450-1</discussionProxy>
                    <discussionThreads id="5841">
                      <string>77-229450-1</string>
                      <string>77-229450-2</string>
                    </discussionThreads>
                    <lesson>58305</lesson>
                    <status>ready</status>
                    <block id="5842">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a class with the name &lt;/span&gt;&lt;b&gt;StringProcessor&lt;/b&gt;&lt;span&gt; that extends the &lt;/span&gt;&lt;b&gt;Thread &lt;/b&gt;&lt;span&gt;class&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span&gt;. The class must have a method that reads strings (line by line) from the standard input. If a read string has a character in lower case, the processor must output the string in the upper case, otherwise, the processor must output &quot;FINISHED&quot; and stop the processing.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template for your class. Write any additional methods if you need. &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;The testing system will start the processor as a regular thread.&lt;/div&gt;</text>
                      <options id="5843">
                        <samples id="5844">
                          <Sample id="5845">&lt;input&gt;line
LINE
&lt;/input&gt;&lt;output&gt;LINE
FINISHED&lt;/output&gt;</Sample>
                          <Sample id="5846">&lt;input&gt;threadS
PROCeSSES
TASKS&lt;/input&gt;&lt;output&gt;THREADS
PROCESSES
FINISHED&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5847" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class StringProcessor extends Thread {

    final Scanner scanner = new Scanner(System.in); // use it to read string from the standard input

    @Override
    public void run() {
        // implement this method
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5848" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5849">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5850" />
                    </block>
                    <actions class="linked-hash-map" id="5851">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5852">
                      <string>31-77-229450</string>
                      <string>30-77-229450</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>23</viewedBy>
                    <passedBy>15</passedBy>
                    <correctRatio>0.42857142857142855</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5853">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5854">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5855">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5856">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5857">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5858">
                  <id>58307</id>
                  <title>Basics of multithreading # Numbers filter</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58307</progress>
                  <createDate id="5859">2017-10-07 15:37:08.0 UTC</createDate>
                  <updateDate id="5860">2018-02-18 15:07:18.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58307-1</discussionProxy>
                  <discussionThreads id="5861">
                    <string>76-58307-1</string>
                  </discussionThreads>
                  <steps id="5862">
                    <long>229456</long>
                  </steps>
                  <actions class="linked-hash-map" id="5863" />
                  <tags id="5864" />
                  <requiredTags id="5865" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5866">
                    <string>31-76-58307</string>
                    <string>30-76-58307</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>19</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>519</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Numbers-filter-58307</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58307</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5867">
                <StepNode id="5868">
                  <parent class="LessonNode" reference="5853" />
                  <data class="Step" id="5869">
                    <id>229456</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229456</progress>
                    <createDate id="5870">2017-10-07 16:43:31.0 UTC</createDate>
                    <updateDate id="5871">2018-02-18 15:07:17.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229456-1</discussionProxy>
                    <discussionThreads id="5872">
                      <string>77-229456-1</string>
                      <string>77-229456-2</string>
                    </discussionThreads>
                    <lesson>58307</lesson>
                    <status>ready</status>
                    <block id="5873">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Write a class with the name &lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;NumbersFilter&lt;/b&gt;&lt;span&gt; that extends the &lt;/span&gt;&lt;b&gt;Thread &lt;/b&gt;&lt;span&gt;class and overrides method &lt;/span&gt;&lt;b&gt;run&lt;/b&gt;&lt;span&gt;. It should read integer numbers from the standard input (line by line). If a number is 0, the worker must stop, otherwise, if the number is even, the worker must print it to the standard output (each number on a new line).&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Use the provided template for your class.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;The testing system will start your class as a regular thread.&lt;/div&gt;</text>
                      <options id="5874">
                        <samples id="5875">
                          <Sample id="5876">&lt;input&gt;1
2
3
4
0
&lt;/input&gt;&lt;output&gt;2
4&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5877" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class NumbersFilter extends Thread {

    private final Scanner scanner = new Scanner(System.in); // use it to read string from the standard input

    @Override
    public void run() {
        // implement this method
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5878" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5879">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5880" />
                    </block>
                    <actions class="linked-hash-map" id="5881">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5882">
                      <string>31-77-229456</string>
                      <string>30-77-229456</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>19</passedBy>
                    <correctRatio>0.45098039215686275</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5883">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5884">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5885">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5886">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5887">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5888">
                  <id>58296</id>
                  <title>Basics of multithreading # Starting multiple threads - 1</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58296</progress>
                  <createDate id="5889">2017-10-07 10:00:30.0 UTC</createDate>
                  <updateDate id="5890">2018-02-18 14:58:32.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58296-1</discussionProxy>
                  <discussionThreads id="5891">
                    <string>76-58296-1</string>
                  </discussionThreads>
                  <steps id="5892">
                    <long>229424</long>
                  </steps>
                  <actions class="linked-hash-map" id="5893" />
                  <tags id="5894" />
                  <requiredTags id="5895" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5896">
                    <string>31-76-58296</string>
                    <string>30-76-58296</string>
                  </subscriptions>
                  <viewedBy>32</viewedBy>
                  <passedBy>28</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>338</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Starting-multiple-threads-1-58296</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58296</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5897">
                <StepNode id="5898">
                  <parent class="LessonNode" reference="5883" />
                  <data class="Step" id="5899">
                    <id>229424</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229424</progress>
                    <createDate id="5900">2017-10-07 10:08:07.0 UTC</createDate>
                    <updateDate id="5901">2018-02-18 14:57:45.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229424-1</discussionProxy>
                    <discussionThreads id="5902">
                      <string>77-229424-1</string>
                      <string>77-229424-2</string>
                    </discussionThreads>
                    <lesson>58296</lesson>
                    <status>ready</status>
                    <block id="5903">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given a class that extends the &lt;/span&gt;&lt;b&gt;Thread&lt;/b&gt;&lt;span&gt; class.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;class WorkerThread extends Thread {
    
    @Override
    public void run() {
        // the method does something
    }
}&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1) Create two instances of the given class and set the names like &lt;b&gt;&quot;worker-X&quot;&lt;/b&gt;, where X is any suffix (the method &lt;b&gt;setName(...)&lt;/b&gt;).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2) Start created threads. The method &lt;b&gt;run&lt;/b&gt; of each instance must be executed in a new thread.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Note: &lt;/b&gt;you don't need to write the given class, it will be added to your solution automatically.&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="5904">
                        <samples id="5905" />
                        <codeTemplates class="LinkedTreeMap" id="5906" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public class Main {

    public static void main(String[] args) {

        // create instances and start threads here
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5907" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5908">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5909" />
                    </block>
                    <actions class="linked-hash-map" id="5910">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5911">
                      <string>31-77-229424</string>
                      <string>30-77-229424</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>32</viewedBy>
                    <passedBy>28</passedBy>
                    <correctRatio>0.336734693877551</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5912">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5913">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5914">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5915">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5916">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5917">
                  <id>58297</id>
                  <title>Basics of multithreading # Starting multiple threads - 2</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58297</progress>
                  <createDate id="5918">2017-10-07 10:00:36.0 UTC</createDate>
                  <updateDate id="5919">2018-02-18 14:58:37.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58297-1</discussionProxy>
                  <discussionThreads id="5920">
                    <string>76-58297-1</string>
                  </discussionThreads>
                  <steps id="5921">
                    <long>229433</long>
                  </steps>
                  <actions class="linked-hash-map" id="5922" />
                  <tags id="5923" />
                  <requiredTags id="5924" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5925">
                    <string>31-76-58297</string>
                    <string>30-76-58297</string>
                  </subscriptions>
                  <viewedBy>34</viewedBy>
                  <passedBy>26</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>459</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Basics-of-multithreading-Starting-multiple-threads-2-58297</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58297</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5926">
                <StepNode id="5927">
                  <parent class="LessonNode" reference="5912" />
                  <data class="Step" id="5928">
                    <id>229433</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229433</progress>
                    <createDate id="5929">2017-10-07 12:56:53.0 UTC</createDate>
                    <updateDate id="5930">2018-02-18 14:58:36.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229433-1</discussionProxy>
                    <discussionThreads id="5931">
                      <string>77-229433-1</string>
                      <string>77-229433-2</string>
                    </discussionThreads>
                    <lesson>58297</lesson>
                    <status>ready</status>
                    <block id="5932">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given a class that implements the &lt;/span&gt;&lt;b&gt;Runnable&lt;/b&gt;&lt;span&gt; interface.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;class RunnableWorker implements Runnable {
    
    @Override
    public void run() {
        // the method does something
    }
}&lt;/code&gt;&lt;/pre&gt; &lt;br&gt;&lt;/div&gt;&lt;div&gt;1) Create three threads using instances of the &lt;b&gt;RunnableWorker&lt;/b&gt;. Set names to these threads like &lt;b&gt;&quot;worker-X&quot;&lt;/b&gt;, where X is any suffix (the method &lt;b&gt;setName(...)&lt;/b&gt;).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;2) Start all created threads. The method &lt;b&gt;run&lt;/b&gt; of each instance must be executed in a new thread.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Note: &lt;/b&gt;you don't need to write the given class, it will be added to your solution automatically.&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="5933">
                        <samples id="5934" />
                        <codeTemplates class="LinkedTreeMap" id="5935" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public class Main {

    public static void main(String[] args) {

        // create threads and start them using the class RunnableWorker
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5936" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5937">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5938" />
                    </block>
                    <actions class="linked-hash-map" id="5939">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5940">
                      <string>31-77-229433</string>
                      <string>30-77-229433</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>34</viewedBy>
                    <passedBy>26</passedBy>
                    <correctRatio>0.3617021276595745</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5941">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5942">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5943">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5944">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5945">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5946">
                  <id>58342</id>
                  <title>Thread management # Interrupting a thread</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58342</progress>
                  <createDate id="5947">2017-10-08 14:49:48.0 UTC</createDate>
                  <updateDate id="5948">2018-02-18 15:19:16.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58342-1</discussionProxy>
                  <discussionThreads id="5949">
                    <string>76-58342-1</string>
                  </discussionThreads>
                  <steps id="5950">
                    <long>229630</long>
                  </steps>
                  <actions class="linked-hash-map" id="5951" />
                  <tags id="5952" />
                  <requiredTags id="5953" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5954">
                    <string>31-76-58342</string>
                    <string>30-76-58342</string>
                  </subscriptions>
                  <viewedBy>14</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>134</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-management-Interrupting-a-thread-58342</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58342</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5955">
                <StepNode id="5956">
                  <parent class="LessonNode" reference="5941" />
                  <data class="Step" id="5957">
                    <id>229630</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229630</progress>
                    <createDate id="5958">2017-10-08 17:34:07.0 UTC</createDate>
                    <updateDate id="5959">2018-02-18 15:19:15.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229630-1</discussionProxy>
                    <discussionThreads id="5960">
                      <string>77-229630-1</string>
                      <string>77-229630-2</string>
                    </discussionThreads>
                    <lesson>58342</lesson>
                    <status>ready</status>
                    <block id="5961">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;The class &lt;/span&gt;&lt;b&gt;Worker&lt;/b&gt;&lt;span&gt; that extends &lt;/span&gt;&lt;b&gt;Thread&lt;/b&gt;&lt;span&gt; is given. The class overrides the method &lt;/span&gt;&lt;b&gt;run&lt;/b&gt;&lt;span&gt; to do something useful.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;You need to start an instance of this class (in a new thread), wait for it a little (2000 - 3000 milliseconds) and interrupt this new thread. When you interrupt the thread it prints a secret message to the standard output.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If you do not interrupt the thread after starting, something bad will happen.&lt;/div&gt;</text>
                      <options id="5962">
                        <samples id="5963" />
                        <codeTemplates class="LinkedTreeMap" id="5964" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws InterruptedException {

    Worker worker = new Worker();

    // write your code here
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5965" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5966">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5967" />
                    </block>
                    <actions class="linked-hash-map" id="5968">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5969">
                      <string>31-77-229630</string>
                      <string>30-77-229630</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>14</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.4482758620689655</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="5970">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="5971">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="5972">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="5973">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="5974">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="5975">
                  <id>58333</id>
                  <title>Thread management # Calcule the number of distinct characters</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58333</progress>
                  <createDate id="5976">2017-10-08 11:38:55.0 UTC</createDate>
                  <updateDate id="5977">2018-02-18 15:16:48.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58333-1</discussionProxy>
                  <discussionThreads id="5978">
                    <string>76-58333-1</string>
                  </discussionThreads>
                  <steps id="5979">
                    <long>229626</long>
                  </steps>
                  <actions class="linked-hash-map" id="5980" />
                  <tags id="5981" />
                  <requiredTags id="5982" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="5983">
                    <string>31-76-58333</string>
                    <string>30-76-58333</string>
                  </subscriptions>
                  <viewedBy>16</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>195</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-management-Calcule-the-number-of-distinct-characters-58333</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58333</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="5984">
                <StepNode id="5985">
                  <parent class="LessonNode" reference="5970" />
                  <data class="Step" id="5986">
                    <id>229626</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229626</progress>
                    <createDate id="5987">2017-10-08 16:48:24.0 UTC</createDate>
                    <updateDate id="5988">2018-02-18 15:16:47.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229626-1</discussionProxy>
                    <discussionThreads id="5989">
                      <string>77-229626-1</string>
                      <string>77-229626-2</string>
                    </discussionThreads>
                    <lesson>58333</lesson>
                    <status>ready</status>
                    <block id="5990">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given a code that reads a string from the standard input and calculates the number of distinct characters of the string. The developer for some reason decided to perform calculations in a new thread, but his solution doesn't work correctly. Try to fix it.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;b&gt;Some explanations:&lt;/b&gt; the implemented class &lt;b&gt;SlowStringProcessor&lt;/b&gt; extends &lt;b&gt;Thread&lt;/b&gt; and overrides the method &lt;b&gt;run&lt;/b&gt;. It calculates the number of distinct characters passed to the constructor. The class has a getter &lt;b&gt;getNumberOfUniqueCharacters()&lt;/b&gt; that returns the calculated number or 0 if the thread has not calculated the number yet. Keep in mind, &lt;b&gt;SlowStringProcessor &lt;/b&gt;works quite slow.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Note:&lt;/b&gt; you don't need to write &lt;b&gt;SlowStringProcessor&lt;/b&gt;. It will be added to your solution automatically.&lt;/div&gt;</text>
                      <options id="5991">
                        <samples id="5992">
                          <Sample id="5993">&lt;input&gt;multithreading&lt;/input&gt;&lt;output&gt;12&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="5994" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String[] args) throws InterruptedException {
    final Scanner scanner = new Scanner(System.in);

    final String str = scanner.nextLine();

    final SlowStringProcessor processor = new SlowStringProcessor(str);

    System.out.println(processor.getNumberOfUniqueCharacters());
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="5995" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="5996">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="5997" />
                    </block>
                    <actions class="linked-hash-map" id="5998">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="5999">
                      <string>31-77-229626</string>
                      <string>30-77-229626</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>16</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.4666666666666667</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6000">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6001">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6002">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6003">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6004">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6005">
                  <id>58330</id>
                  <title>Thread management # Ordering execution of threads</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58330</progress>
                  <createDate id="6006">2017-10-08 11:38:38.0 UTC</createDate>
                  <updateDate id="6007">2018-02-18 15:13:58.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58330-1</discussionProxy>
                  <discussionThreads id="6008">
                    <string>76-58330-1</string>
                  </discussionThreads>
                  <steps id="6009">
                    <long>229533</long>
                  </steps>
                  <actions class="linked-hash-map" id="6010" />
                  <tags id="6011" />
                  <requiredTags id="6012" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6013">
                    <string>31-76-58330</string>
                    <string>30-76-58330</string>
                  </subscriptions>
                  <viewedBy>15</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>282</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-management-Ordering-execution-of-threads-58330</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58330</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6014">
                <StepNode id="6015">
                  <parent class="LessonNode" reference="6000" />
                  <data class="Step" id="6016">
                    <id>229533</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229533</progress>
                    <createDate id="6017">2017-10-08 11:54:28.0 UTC</createDate>
                    <updateDate id="6018">2018-02-18 15:13:57.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229533-1</discussionProxy>
                    <discussionThreads id="6019">
                      <string>77-229533-1</string>
                      <string>77-229533-2</string>
                    </discussionThreads>
                    <lesson>58330</lesson>
                    <status>ready</status>
                    <block id="6020">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Implement a method that takes three objects (instances of Thread or its subclasses). The method must start passed objects as threads so that the order of their execution will be: &lt;/span&gt;&lt;b&gt;t3, t2, t1&lt;/b&gt;&lt;span&gt;. These threads print secret phrases in the standard output, their output must be always the same.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;All given threads must be terminated before the implemented method is completed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So, the testing system will give you some hints throwing exceptions in the main thread, like:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;Exception in thread &quot;main&quot; java.lang.RuntimeException: All threads must be terminated before ending the implemented method&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</text>
                      <options id="6021">
                        <samples id="6022" />
                        <codeTemplates class="LinkedTreeMap" id="6023" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void invokeMethods(Thread t1, Thread t2, Thread t3) throws InterruptedException {
    // start passed instances here 
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6024" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6025">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6026" />
                    </block>
                    <actions class="linked-hash-map" id="6027">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6028">
                      <string>31-77-229533</string>
                      <string>30-77-229533</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>15</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.43902439024390244</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6029">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6030">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6031">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6032">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6033">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6034">
                  <id>58332</id>
                  <title>Thread management # Summing ranges with threads</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58332</progress>
                  <createDate id="6035">2017-10-08 11:38:50.0 UTC</createDate>
                  <updateDate id="6036">2018-02-18 15:15:43.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58332-1</discussionProxy>
                  <discussionThreads id="6037">
                    <string>76-58332-1</string>
                  </discussionThreads>
                  <steps id="6038">
                    <long>229589</long>
                  </steps>
                  <actions class="linked-hash-map" id="6039" />
                  <tags id="6040" />
                  <requiredTags id="6041" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6042">
                    <string>31-76-58332</string>
                    <string>30-76-58332</string>
                  </subscriptions>
                  <viewedBy>15</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>314</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-management-Summing-ranges-with-threads-58332</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58332</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6043">
                <StepNode id="6044">
                  <parent class="LessonNode" reference="6029" />
                  <data class="Step" id="6045">
                    <id>229589</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229589</progress>
                    <createDate id="6046">2017-10-08 14:01:34.0 UTC</createDate>
                    <updateDate id="6047">2018-02-18 15:15:42.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229589-1</discussionProxy>
                    <discussionThreads id="6048">
                      <string>77-229589-1</string>
                      <string>77-229589-2</string>
                    </discussionThreads>
                    <lesson>58332</lesson>
                    <status>ready</status>
                    <block id="6049">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a code that should find the general sum of two given ranges (inclusive both borders) using threads. But the code doesn't work correctly. Try to fix it. Read comments to better understand the given code.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Some explanations:&lt;/b&gt; the implemented class &lt;b&gt;RangeSummator&lt;/b&gt; extends &lt;b&gt;Thread&lt;/b&gt; and overrides the method &lt;b&gt;run&lt;/b&gt;. It sums the range passed to the constructor (left and right borders as integers). The class has a getter &lt;b&gt;getResult()&lt;/b&gt; that returns the calculated sum or 0 if the thread has not calculated the sum yet.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;span&gt; you don't need to write &lt;/span&gt;&lt;b&gt;RangeSummator&lt;/b&gt;&lt;span&gt;. It will be added to your solution automatically.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;</text>
                      <options id="6050">
                        <samples id="6051">
                          <Sample id="6052">&lt;input&gt;1 5
2 4&lt;/input&gt;&lt;output&gt;24&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="6053" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void main(String args[]) throws InterruptedException {

    final Scanner scanner = new Scanner(System.in); // scanner for reading range borders

    final int from1Incl = scanner.nextInt(); // left border of the first range
    final int to1Incl = scanner.nextInt();   // right border of the first range

    final int from2Incl = scanner.nextInt(); // left border of the second range
    final int to2Incl = scanner.nextInt();   // right border of the second range

    RangeSummator summator1 = new RangeSummator(from1Incl, to1Incl); // first summator
    RangeSummator summator2 = new RangeSummator(from2Incl, to2Incl); // second summator

    long partialSum1 = summator1.getResult();
    long partialSum2 = summator2.getResult();

    long sum = partialSum1 + partialSum2; // the sum is 0, fix it!

    System.out.println(sum);
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6054" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6055">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6056" />
                    </block>
                    <actions class="linked-hash-map" id="6057">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6058">
                      <string>31-77-229589</string>
                      <string>30-77-229589</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>15</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.41025641025641024</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6059">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6060">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6061">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6062">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6063">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6064">
                  <id>58331</id>
                  <title>Thread management # Finding and starting a thread</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58331</progress>
                  <createDate id="6065">2017-10-08 11:38:43.0 UTC</createDate>
                  <updateDate id="6066">2018-02-18 15:14:45.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58331-1</discussionProxy>
                  <discussionThreads id="6067">
                    <string>76-58331-1</string>
                  </discussionThreads>
                  <steps id="6068">
                    <long>229572</long>
                  </steps>
                  <actions class="linked-hash-map" id="6069" />
                  <tags id="6070" />
                  <requiredTags id="6071" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6072">
                    <string>31-76-58331</string>
                    <string>30-76-58331</string>
                  </subscriptions>
                  <viewedBy>17</viewedBy>
                  <passedBy>13</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>415</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-management-Finding-and-starting-a-thread-58331</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58331</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6073">
                <StepNode id="6074">
                  <parent class="LessonNode" reference="6059" />
                  <data class="Step" id="6075">
                    <id>229572</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229572</progress>
                    <createDate id="6076">2017-10-08 13:09:00.0 UTC</createDate>
                    <updateDate id="6077">2018-02-18 15:14:44.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-229572-1</discussionProxy>
                    <discussionThreads id="6078">
                      <string>77-229572-1</string>
                      <string>77-229572-2</string>
                    </discussionThreads>
                    <lesson>58331</lesson>
                    <status>ready</status>
                    <block id="6079">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Implement a method that takes an array of threads. The method must find the first thread that has not been started yet and start it as a thread.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;The found thread must be terminated before the implemented method is completed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So, the testing system will give you some hints throwing exceptions in the main thread, like:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;Exception in thread &quot;main&quot; java.lang.RuntimeException: Found thread must be terminated before ending the implemented method&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</text>
                      <options id="6080">
                        <samples id="6081" />
                        <codeTemplates class="LinkedTreeMap" id="6082" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>public static void findAndStartThread(Thread... threads) throws InterruptedException {
    // implement this method
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6083" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6084">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6085" />
                    </block>
                    <actions class="linked-hash-map" id="6086">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6087">
                      <string>31-77-229572</string>
                      <string>30-77-229572</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>17</viewedBy>
                    <passedBy>13</passedBy>
                    <correctRatio>0.3188405797101449</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6088">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6089">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6090">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6091">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6092">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6093">
                  <id>58418</id>
                  <title>Thread management # Interrupt handling</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58418</progress>
                  <createDate id="6094">2017-10-09 10:53:12.0 UTC</createDate>
                  <updateDate id="6095">2018-02-18 15:26:12.0 UTC</updateDate>
                  <discussionsCount>1</discussionsCount>
                  <discussionProxy>76-58418-1</discussionProxy>
                  <discussionThreads id="6096">
                    <string>76-58418-1</string>
                  </discussionThreads>
                  <steps id="6097">
                    <long>229948</long>
                  </steps>
                  <actions class="linked-hash-map" id="6098" />
                  <tags id="6099" />
                  <requiredTags id="6100" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6101">
                    <string>31-76-58418</string>
                    <string>30-76-58418</string>
                  </subscriptions>
                  <viewedBy>14</viewedBy>
                  <passedBy>11</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>838</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-management-Interrupt-handling-58418</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58418</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6102">
                <StepNode id="6103">
                  <parent class="LessonNode" reference="6088" />
                  <data class="Step" id="6104">
                    <id>229948</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-229948</progress>
                    <createDate id="6105">2017-10-09 10:53:59.0 UTC</createDate>
                    <updateDate id="6106">2018-02-18 15:24:08.0 UTC</updateDate>
                    <discussionsCount>1</discussionsCount>
                    <discussionProxy>77-229948-1</discussionProxy>
                    <discussionThreads id="6107">
                      <string>77-229948-1</string>
                      <string>77-229948-2</string>
                    </discussionThreads>
                    <lesson>58418</lesson>
                    <status>ready</status>
                    <block id="6108">
                      <name>code</name>
                      <text>The class &lt;b&gt;CounterThread&lt;/b&gt; extends &lt;b&gt;Thread &lt;/b&gt;and overrides the &lt;b&gt;run&lt;/b&gt; method. The method increments the counter variable in a loop. Now the loop works infinitely. You should fix it by adding interrupt handling.&lt;div&gt;&lt;br&gt;It another thread interupts this thread, the loop must be stopped and the method must print &lt;b&gt;&quot;It was interrupted&quot;&lt;/b&gt;. &lt;br&gt;&lt;br&gt;Please, do not remove the loop, otherwise your solution may not pass tests.&lt;/div&gt;</text>
                      <options id="6109">
                        <samples id="6110" />
                        <codeTemplates class="LinkedTreeMap" id="6111" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class CounterThread extends Thread {

    @Override
    public void run() {
        long counter = 0;

        while (true) {
            counter++;
        }
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6112" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6113">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6114" />
                    </block>
                    <actions class="linked-hash-map" id="6115">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6116">
                      <string>31-77-229948</string>
                      <string>30-77-229948</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>14</viewedBy>
                    <passedBy>11</passedBy>
                    <correctRatio>0.3</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6117">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6118">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6119">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6120">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6121">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6122">
                  <id>58419</id>
                  <title>Linked Lists</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58419</progress>
                  <createDate id="6123">2017-10-09 10:59:56.0 UTC</createDate>
                  <updateDate id="6124">2017-10-09 12:23:56.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58419-1</discussionProxy>
                  <discussionThreads id="6125">
                    <string>76-58419-1</string>
                  </discussionThreads>
                  <steps id="6126">
                    <long>229951</long>
                    <long>229955</long>
                    <long>229956</long>
                    <long>229959</long>
                    <long>229960</long>
                    <long>229979</long>
                  </steps>
                  <actions class="linked-hash-map" id="6127" />
                  <tags id="6128" />
                  <requiredTags id="6129" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6130">
                    <string>31-76-58419</string>
                    <string>30-76-58419</string>
                  </subscriptions>
                  <viewedBy>51</viewedBy>
                  <passedBy>38</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>151</timeToComplete>
                  <coverUrl>https://ucarecdn.com/25e82a98-4215-469a-b6f5-2285fe4dce1e/-/scale_crop/180x180/center/</coverUrl>
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>34051521</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Linked-Lists-58419</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58419</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="java.util.Arrays$ArrayList" id="6131">
                <a id="6132">
                  <StepNode id="6133">
                    <parent class="LessonNode" reference="6117" />
                    <data class="Step" id="6134">
                      <id>229951</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>1</position>
                      <progress>77-229951</progress>
                      <createDate id="6135">2017-10-09 10:59:57.0 UTC</createDate>
                      <updateDate id="6136">2017-10-09 11:31:35.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-229951-1</discussionProxy>
                      <discussionThreads id="6137">
                        <string>77-229951-1</string>
                      </discussionThreads>
                      <lesson>58419</lesson>
                      <status>ready</status>
                      <block id="6138">
                        <name>text</name>
                        <text>&lt;p&gt;The goal of the lessons on this module are to introduce you to &lt;b&gt;linked lists&lt;/b&gt;, &lt;b&gt;stacks&lt;/b&gt;, and &lt;b&gt;queues&lt;/b&gt;. These are examples of &lt;b&gt;data structures&lt;/b&gt;. A data structure is means of storing a collection of data in memory, along with associated algorithms that enable us to work with that data. Computer science provides us with a variety of data structures that serve different purposes.&lt;/p&gt;&lt;p&gt;While some of the examples and videos that you'll see in upcoming lessons use a specific programming language, the concepts are applicable to any language. No matter which language(s) you have been working with lately, you likely have a solid working knowledge of &lt;b&gt;arrays&lt;/b&gt;. An array is perhaps the most basic data structure. We have often visualized it with diagrams like this:&lt;img height=&quot;248&quot; width=&quot;678&quot; src=&quot;https://ucarecdn.com/25e82a98-4215-469a-b6f5-2285fe4dce1e/&quot; title=&quot;Image: https://ucarecdn.com/25e82a98-4215-469a-b6f5-2285fe4dce1e/&quot; alt=&quot;&quot;&gt;&lt;/p&gt;The are some implicit properties of arrays hidden in this visual representation. Let's make those explicit. The defining characteristics of arrays are:&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Contiguous storage&lt;/b&gt; - A computer's memory as collection of storage slots with addresses. A visual metaphor would be a wall of post office boxes.  Elements stored in an array are located in adjacent slots.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Fixed size&lt;/b&gt; - Arrays have a fixed size that is determined when they are created. We can create an array large enough to hold 10 integers, but we &lt;i&gt;may not&lt;/i&gt; either put more than 10 integers in the array or make the array bigger.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Random access&lt;/b&gt; - The elements of an array are indexed. This enables use to access any element easily by referring to its index. For an array named arr, we can retrieve the element at index 2 using the syntax arr[2].&lt;/li&gt;&lt;/ul&gt;If you've been working with a language like Java or C, then the general concept of an array matches up exactly with how arrays work on this languages. If you've been working with Python or JavaScript, then lists and arrays in those languages will not have all of the above properties. Thus, it's important to remind yourself that the general concept of an array includes the properties of contiguous storage and fixed size.&lt;br&gt;&lt;br&gt;Now that we have a shared concept for the most basic data structure, let's introduce linked lists.&lt;br&gt;</text>
                        <options id="6139" />
                        <subtitleFiles id="6140" />
                      </block>
                      <actions class="linked-hash-map" id="6141" />
                      <subscriptions id="6142">
                        <string>31-77-229951</string>
                        <string>30-77-229951</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>51</viewedBy>
                      <passedBy>51</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <currentLang>invalid</currentLang>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="6143">
                    <parent class="LessonNode" reference="6117" />
                    <data class="Step" id="6144">
                      <id>229955</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>2</position>
                      <progress>77-229955</progress>
                      <createDate id="6145">2017-10-09 11:34:08.0 UTC</createDate>
                      <updateDate id="6146">2017-10-09 11:34:09.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-229955-1</discussionProxy>
                      <discussionThreads id="6147">
                        <string>77-229955-1</string>
                      </discussionThreads>
                      <lesson>58419</lesson>
                      <status>ready</status>
                      <block id="6148">
                        <name>text</name>
                        <text>This lesson from Microsoft introduces the way in which linked lists are built so as to utilize 

non-continguous memory&lt;br&gt;&lt;iframe height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/4ZKaR4pSjFI&quot; width=&quot;560&quot; allowfullscreen=&quot;undefined&quot;&gt;&lt;/iframe&gt;</text>
                        <options id="6149" />
                        <subtitleFiles id="6150" />
                      </block>
                      <actions class="linked-hash-map" id="6151" />
                      <subscriptions id="6152">
                        <string>31-77-229955</string>
                        <string>30-77-229955</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>48</viewedBy>
                      <passedBy>48</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="6153">
                    <parent class="LessonNode" reference="6117" />
                    <data class="Step" id="6154">
                      <id>229956</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>3</position>
                      <progress>77-229956</progress>
                      <createDate id="6155">2017-10-09 11:36:13.0 UTC</createDate>
                      <updateDate id="6156">2017-10-09 11:36:14.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-229956-1</discussionProxy>
                      <discussionThreads id="6157">
                        <string>77-229956-1</string>
                      </discussionThreads>
                      <lesson>58419</lesson>
                      <status>ready</status>
                      <block id="6158">
                        <name>text</name>
                        <text>Now let's dive a little bit deeper into the structure and operations of linked lists. This video uses Java to demonstrate a linked list implementation. If you're not familiar with Java, don't worry. Focus on understanding the way in which linked lists are built from nodes, and how operations on linked lists are carried out.&lt;br&gt;&lt;iframe height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/njTh_OwMljA&quot; width=&quot;560&quot; allowfullscreen=&quot;undefined&quot;&gt;&lt;/iframe&gt;</text>
                        <options id="6159" />
                        <subtitleFiles id="6160" />
                      </block>
                      <actions class="linked-hash-map" id="6161" />
                      <subscriptions id="6162">
                        <string>31-77-229956</string>
                        <string>30-77-229956</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>48</viewedBy>
                      <passedBy>48</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="6163">
                    <parent class="LessonNode" reference="6117" />
                    <data class="Step" id="6164">
                      <id>229959</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>4</position>
                      <progress>77-229959</progress>
                      <createDate id="6165">2017-10-09 11:39:43.0 UTC</createDate>
                      <updateDate id="6166">2017-10-09 11:39:44.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-229959-1</discussionProxy>
                      <discussionThreads id="6167">
                        <string>77-229959-1</string>
                      </discussionThreads>
                      <lesson>58419</lesson>
                      <status>ready</status>
                      <block id="6168">
                        <name>choice</name>
                        <text>A characteristic of linked lists that makes them different from--and in some cases more advantageous than--arrays is:&lt;br&gt;</text>
                        <options id="6169" />
                        <subtitleFiles id="6170" />
                      </block>
                      <actions class="linked-hash-map" id="6171">
                        <entry>
                          <string>submit</string>
                          <string>#</string>
                        </entry>
                      </actions>
                      <subscriptions id="6172">
                        <string>31-77-229959</string>
                        <string>30-77-229959</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>44</viewedBy>
                      <passedBy>38</passedBy>
                      <correctRatio>0.7959183673469388</correctRatio>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="6173">
                    <parent class="LessonNode" reference="6117" />
                    <data class="Step" id="6174">
                      <id>229960</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>5</position>
                      <progress>77-229960</progress>
                      <createDate id="6175">2017-10-09 11:41:08.0 UTC</createDate>
                      <updateDate id="6176">2017-10-09 11:41:08.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-229960-1</discussionProxy>
                      <discussionThreads id="6177">
                        <string>77-229960-1</string>
                      </discussionThreads>
                      <lesson>58419</lesson>
                      <status>ready</status>
                      <block id="6178">
                        <name>choice</name>
                        <text>Suppose you are working on an application that needs to store in memory a collection of all its registered users. Which data structure would you choose?&lt;br&gt;</text>
                        <options id="6179" />
                        <subtitleFiles id="6180" />
                      </block>
                      <actions class="linked-hash-map" id="6181">
                        <entry>
                          <string>submit</string>
                          <string>#</string>
                        </entry>
                      </actions>
                      <subscriptions id="6182">
                        <string>31-77-229960</string>
                        <string>30-77-229960</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>45</viewedBy>
                      <passedBy>39</passedBy>
                      <correctRatio>0.78</correctRatio>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                  <StepNode id="6183">
                    <parent class="LessonNode" reference="6117" />
                    <data class="Step" id="6184">
                      <id>229979</id>
                      <title />
                      <isAdaptive>false</isAdaptive>
                      <description />
                      <position>6</position>
                      <progress>77-229979</progress>
                      <createDate id="6185">2017-10-09 12:23:55.0 UTC</createDate>
                      <updateDate id="6186">2017-10-09 12:23:55.0 UTC</updateDate>
                      <discussionsCount>0</discussionsCount>
                      <discussionProxy>77-229979-1</discussionProxy>
                      <discussionThreads id="6187">
                        <string>77-229979-1</string>
                      </discussionThreads>
                      <lesson>58419</lesson>
                      <status>ready</status>
                      <block id="6188">
                        <name>text</name>
                        <text>&lt;b&gt;&lt;h2&gt;Linked List Operations&lt;/h2&gt;&lt;br&gt;&lt;/b&gt;You just learned about three linked list operations: append, prepend, and deleteWithValue. A more common way to define the operations on a linked list is as follows:&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;insert (val, node)&lt;/b&gt; - given a piece of data, val, insert the data after the given node&lt;/li&gt;&lt;li&gt;&lt;b&gt;remove(node) &lt;/b&gt; - given a node, remove the node from the list&lt;/li&gt;&lt;li&gt;&lt;b&gt;read(i)&lt;/b&gt;﻿ - given a location (an integer index), get the value of the node at the index&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;</text>
                        <options id="6189" />
                        <subtitleFiles id="6190" />
                      </block>
                      <actions class="linked-hash-map" id="6191" />
                      <subscriptions id="6192">
                        <string>31-77-229979</string>
                        <string>30-77-229979</string>
                      </subscriptions>
                      <instruction>0</instruction>
                      <session />
                      <instructionType />
                      <viewedBy>44</viewedBy>
                      <passedBy>44</passedBy>
                      <isSolutionsUnlocked>false</isSolutionsUnlocked>
                      <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                      <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                      <maxSubmissionsCount>3</maxSubmissionsCount>
                      <variation>1</variation>
                      <variationsCount>1</variationsCount>
                    </data>
                    <children class="kotlin.collections.EmptyList" reference="21" />
                    <wasDeleted>false</wasDeleted>
                    <courseId>0</courseId>
                    <lastSubmissionId>0</lastSubmissionId>
                  </StepNode>
                </a>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6193">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6194">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6195">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6196">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6197">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6198">
                  <id>58110</id>
                  <title>The main method # Fixing the main method</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-58110</progress>
                  <createDate id="6199">2017-10-02 16:30:06.0 UTC</createDate>
                  <updateDate id="6200">2018-02-12 15:56:44.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-58110-1</discussionProxy>
                  <discussionThreads id="6201">
                    <string>76-58110-1</string>
                  </discussionThreads>
                  <steps id="6202">
                    <long>228359</long>
                  </steps>
                  <actions class="linked-hash-map" id="6203" />
                  <tags id="6204" />
                  <requiredTags id="6205" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6206">
                    <string>31-76-58110</string>
                    <string>30-76-58110</string>
                  </subscriptions>
                  <viewedBy>108</viewedBy>
                  <passedBy>110</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>17</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>The-main-method-Fixing-the-main-method-58110</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-58110</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6207">
                <StepNode id="6208">
                  <parent class="LessonNode" reference="6193" />
                  <data class="Step" id="6209">
                    <id>228359</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-228359</progress>
                    <createDate id="6210">2017-10-02 16:57:31.0 UTC</createDate>
                    <updateDate id="6211">2018-02-12 15:56:43.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-228359-1</discussionProxy>
                    <discussionThreads id="6212">
                      <string>77-228359-1</string>
                      <string>77-228359-2</string>
                    </discussionThreads>
                    <lesson>58110</lesson>
                    <status>ready</status>
                    <block id="6213">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;Given a program that should print &lt;/span&gt;&lt;b&gt;&quot;Hello, ALT!&quot;&lt;/b&gt;&lt;span&gt; but now it's not compiled. Fix the program.&lt;/span&gt;&lt;/p&gt;</text>
                      <options id="6214">
                        <samples id="6215" />
                        <codeTemplates class="LinkedTreeMap" id="6216" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {

    public static int main(String[] args) {
        System.out.println(&quot;Hello, ALT!&quot;);
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6217" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6218">
                              <time>8</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6219" />
                    </block>
                    <actions class="linked-hash-map" id="6220">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6221">
                      <string>31-77-228359</string>
                      <string>30-77-228359</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>108</viewedBy>
                    <passedBy>110</passedBy>
                    <correctRatio>0.8227848101265823</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6222">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6223">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6224">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6225">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6226">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6227">
                  <id>59230</id>
                  <title>Thread synchronization # Thread-safe account</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-59230</progress>
                  <createDate id="6228">2017-10-23 18:11:43.0 UTC</createDate>
                  <updateDate id="6229">2018-02-18 16:11:55.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-59230-1</discussionProxy>
                  <discussionThreads id="6230">
                    <string>76-59230-1</string>
                  </discussionThreads>
                  <steps id="6231">
                    <long>233861</long>
                  </steps>
                  <actions class="linked-hash-map" id="6232" />
                  <tags id="6233" />
                  <requiredTags id="6234" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6235">
                    <string>31-76-59230</string>
                    <string>30-76-59230</string>
                  </subscriptions>
                  <viewedBy>13</viewedBy>
                  <passedBy>11</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>462</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-synchronization-Thread-safe-account-59230</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-59230</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6236">
                <StepNode id="6237">
                  <parent class="LessonNode" reference="6222" />
                  <data class="Step" id="6238">
                    <id>233861</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-233861</progress>
                    <createDate id="6239">2017-10-23 18:26:59.0 UTC</createDate>
                    <updateDate id="6240">2018-02-18 16:11:54.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-233861-1</discussionProxy>
                    <discussionThreads id="6241">
                      <string>77-233861-1</string>
                      <string>77-233861-2</string>
                    </discussionThreads>
                    <lesson>59230</lesson>
                    <status>ready</status>
                    <block id="6242">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given a class named &lt;/span&gt;&lt;b&gt;Account&lt;/b&gt;&lt;span&gt;. It has a long field storing the current balance. The account has three not-implemented methods:&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;deposit&lt;/b&gt; - it should add an amount to the balance;&lt;/li&gt;&lt;li&gt;&lt;b&gt;withdraw&lt;/b&gt; - it should subtract an amount from the balance if the account has enough money. The method must return true if the operation is successful, otherwise - false;&lt;/li&gt;&lt;li&gt;&lt;b&gt;getBalance&lt;/b&gt; - it should return the current balance.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Implement the given methods. The class should work correctly with multiple threads. &lt;span&gt;The testing system will create threads and calls methods on the same instance of &lt;/span&gt;&lt;b&gt;Account&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Do not make the class public.&lt;/div&gt;</text>
                      <options id="6243">
                        <samples id="6244" />
                        <codeTemplates class="LinkedTreeMap" id="6245" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Account {

    private long balance = 0;

    public synchronized boolean withdraw(long amount) {
        return false;
    }

    public synchronized void deposit(long amount) {
        // do something useful
    }

    public long getBalance() {
        return balance;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6246" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6247">
                              <time>15</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6248" />
                    </block>
                    <actions class="linked-hash-map" id="6249">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6250">
                      <string>31-77-233861</string>
                      <string>30-77-233861</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>13</viewedBy>
                    <passedBy>11</passedBy>
                    <correctRatio>0.4838709677419355</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6251">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6252">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6253">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6254">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6255">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6256">
                  <id>59228</id>
                  <title>Thread synchronization # Counting number of instances</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-59228</progress>
                  <createDate id="6257">2017-10-23 17:06:25.0 UTC</createDate>
                  <updateDate id="6258">2018-02-18 16:10:31.0 UTC</updateDate>
                  <discussionsCount>0</discussionsCount>
                  <discussionProxy>76-59228-1</discussionProxy>
                  <discussionThreads id="6259">
                    <string>76-59228-1</string>
                  </discussionThreads>
                  <steps id="6260">
                    <long>233857</long>
                  </steps>
                  <actions class="linked-hash-map" id="6261" />
                  <tags id="6262" />
                  <requiredTags id="6263" />
                  <playlists class="kotlin.collections.EmptyList" reference="21" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6264">
                    <string>31-76-59228</string>
                    <string>30-76-59228</string>
                  </subscriptions>
                  <viewedBy>14</viewedBy>
                  <passedBy>12</passedBy>
                  <dependencies class="kotlin.collections.EmptyList" reference="21" />
                  <followers class="kotlin.collections.EmptyList" reference="21" />
                  <timeToComplete>221</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Thread-synchronization-Counting-number-of-instances-59228</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>0</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-59228</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6265">
                <StepNode id="6266">
                  <parent class="LessonNode" reference="6251" />
                  <data class="Step" id="6267">
                    <id>233857</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-233857</progress>
                    <createDate id="6268">2017-10-23 17:28:09.0 UTC</createDate>
                    <updateDate id="6269">2018-02-18 16:10:30.0 UTC</updateDate>
                    <discussionsCount>0</discussionsCount>
                    <discussionProxy>77-233857-1</discussionProxy>
                    <discussionThreads id="6270">
                      <string>77-233857-1</string>
                      <string>77-233857-2</string>
                    </discussionThreads>
                    <lesson>59228</lesson>
                    <status>ready</status>
                    <block id="6271">
                      <name>code</name>
                      <text>&lt;div&gt;&lt;span&gt;Given a class with one static field named &lt;/span&gt;&lt;b&gt;numberOfInstances&lt;/b&gt;&lt;span&gt; and the getter. The class stores the number of already created instances in the field.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You should increment the field in the class constructor.&lt;span&gt; Make the increment thread-safe for invoking from multiple threads.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Do not make the class &lt;code&gt;public&lt;/code&gt;.&lt;/div&gt;</text>
                      <options id="6272">
                        <samples id="6273" />
                        <codeTemplates class="LinkedTreeMap" id="6274" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class ClassCountingInstances {

    private static long numberOfInstances;

    public ClassCountingInstances() {
        // write the increment here
    }

    public static synchronized long getNumberOfInstances() {
        return numberOfInstances;
    }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6275" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6276">
                              <time>15</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6277" />
                    </block>
                    <actions class="linked-hash-map" id="6278">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6279">
                      <string>31-77-233857</string>
                      <string>30-77-233857</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>14</viewedBy>
                    <passedBy>12</passedBy>
                    <correctRatio>0.28846153846153844</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
            <LessonNode id="6280">
              <parent class="AltTree" reference="2" />
              <data class="CompoundUnitLesson" id="6281">
                <id>0</id>
                <title />
                <isAdaptive>false</isAdaptive>
                <description />
                <position>0</position>
                <progress />
                <createDate id="6282">1970-01-01 00:00:00.0 UTC</createDate>
                <updateDate id="6283">1970-01-01 00:00:00.0 UTC</updateDate>
                <unit id="6284">
                  <id>0</id>
                  <section>0</section>
                  <lesson>0</lesson>
                  <assignments id="6285" />
                  <position>0</position>
                  <isActive>false</isActive>
                </unit>
                <lesson id="6286">
                  <id>56138</id>
                  <title>Map # Spell checker</title>
                  <isAdaptive>false</isAdaptive>
                  <description />
                  <position>0</position>
                  <progress>76-56138</progress>
                  <createDate id="6287">2017-09-12 14:46:18.0 UTC</createDate>
                  <updateDate id="6288">2018-03-25 10:58:03.0 UTC</updateDate>
                  <discussionsCount>2</discussionsCount>
                  <discussionProxy>76-56138-1</discussionProxy>
                  <discussionThreads id="6289">
                    <string>76-56138-1</string>
                  </discussionThreads>
                  <steps id="6290">
                    <long>216408</long>
                  </steps>
                  <actions class="linked-hash-map" id="6291" />
                  <tags id="6292" />
                  <requiredTags id="6293" />
                  <playlists id="6294" />
                  <isPrime>false</isPrime>
                  <subscriptions id="6295">
                    <string>31-76-56138</string>
                    <string>30-76-56138</string>
                  </subscriptions>
                  <viewedBy>21</viewedBy>
                  <passedBy>10</passedBy>
                  <dependencies id="6296" />
                  <followers id="6297" />
                  <timeToComplete>1669</timeToComplete>
                  <coverUrl />
                  <isCommentsEnabled>true</isCommentsEnabled>
                  <owner>1810113</owner>
                  <language>en</language>
                  <isFeatured>false</isFeatured>
                  <isPublic>true</isPublic>
                  <slug>Map-Spell-checker-56138</slug>
                  <learnersGroup />
                  <testersGroup />
                  <moderatorsGroup />
                  <teachersGroup />
                  <adminsGroup />
                  <epicCount>1</epicCount>
                  <abuseCount>0</abuseCount>
                  <vote>76-56138</vote>
                  <ltiConsumerKey />
                  <ltiSecretKey />
                </lesson>
              </data>
              <children class="singleton-list" id="6298">
                <StepNode id="6299">
                  <parent class="LessonNode" reference="6280" />
                  <data class="Step" id="6300">
                    <id>216408</id>
                    <title />
                    <isAdaptive>false</isAdaptive>
                    <description />
                    <position>1</position>
                    <progress>77-216408</progress>
                    <createDate id="6301">2017-09-04 11:59:38.0 UTC</createDate>
                    <updateDate id="6302">2018-03-25 10:58:02.0 UTC</updateDate>
                    <discussionsCount>2</discussionsCount>
                    <discussionProxy>77-216408-1</discussionProxy>
                    <discussionThreads id="6303">
                      <string>77-216408-1</string>
                    </discussionThreads>
                    <lesson>56138</lesson>
                    <status>ready</status>
                    <block id="6304">
                      <name>code</name>
                      <text>&lt;p&gt;&lt;span&gt;The simplest spell checker is based on a list of known words.
Every word in the checked text is searched for in this list and, if such a word
was not found, it is marked as erroneous.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Write this spell checker.&lt;/p&gt;

&lt;p&gt;The first line of the input contains $d$ – number of records in
the list of known word. Next go $d$ lines contain one known word per line, next
— the number $l$ of lines of the text, after which — $l$ lines of the text.&lt;/p&gt;

&lt;p&gt;Write a program that outputs those words from the text, which are
not found in the dictionary (i.e. erroneous). Your spell checker should be case
insensitive. The words are entered in an arbitrary order. Words, which are not
found in the dictionary, should not be duplicated in the output.&lt;/p&gt;</text>
                      <options id="6305">
                        <samples id="6306">
                          <Sample id="6307">&lt;input&gt;3
a
bb
cCc
2
a bb aab aba ccc
c bb aaa&lt;/input&gt;&lt;output&gt;aaa
aba
aab
c&lt;/output&gt;</Sample>
                        </samples>
                        <codeTemplates class="LinkedTreeMap" id="6308" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <string>class Main {
  public static void main(String[] args) {
    // put your code here
  }
}</string>
                          </entry>
                        </codeTemplates>
                        <limits class="LinkedTreeMap" id="6309" resolves-to="linked-hash-map">
                          <entry>
                            <string>java8</string>
                            <Limit id="6310">
                              <time>5</time>
                              <memory>256</memory>
                            </Limit>
                          </entry>
                        </limits>
                      </options>
                      <subtitleFiles id="6311" />
                    </block>
                    <actions class="linked-hash-map" id="6312">
                      <entry>
                        <string>submit</string>
                        <string>#</string>
                      </entry>
                    </actions>
                    <subscriptions id="6313">
                      <string>31-77-216408</string>
                      <string>30-77-216408</string>
                    </subscriptions>
                    <instruction>0</instruction>
                    <session />
                    <instructionType />
                    <viewedBy>21</viewedBy>
                    <passedBy>10</passedBy>
                    <correctRatio>0.3333333333333333</correctRatio>
                    <isSolutionsUnlocked>false</isSolutionsUnlocked>
                    <solutionsUnlockedAttempts>3</solutionsUnlockedAttempts>
                    <isHasSubmissionsRestrictions>false</isHasSubmissionsRestrictions>
                    <maxSubmissionsCount>3</maxSubmissionsCount>
                    <variation>1</variation>
                    <variationsCount>1</variationsCount>
                  </data>
                  <children class="kotlin.collections.EmptyList" reference="21" />
                  <wasDeleted>false</wasDeleted>
                  <supportedLanguages id="6314">
                    <SupportedLanguages>Java 8</SupportedLanguages>
                  </supportedLanguages>
                  <currentLang>Java 8</currentLang>
                  <courseId>0</courseId>
                  <lastSubmissionId>0</lastSubmissionId>
                </StepNode>
              </children>
              <wasDeleted>false</wasDeleted>
              <courseId>0</courseId>
            </LessonNode>
          </a>
        </children>
        <wasDeleted>false</wasDeleted>
      </root>
      <selected class="StepNode" reference="6299" />
      <showHint>false</showHint>
      <createdBy>44287155</createdBy>
      <defaultLang>Java 8</defaultLang>
      <version>1</version>
      <uuid>9c71df59-d0e3-445f-bc5c-46287ac2952f</uuid>
      <projectTreeMode>LESSON</projectTreeMode>
    </AltProjectManager>
  </component>
</project>